Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.1.x
**** Job starts ****
Wed Nov  2 17:06:36 EDT 2022
**** JHPCE info ****
User: mtippani
Job id: 621925
Job name: PRECAST_k16-20
Hostname: compute-095.cm.cluster
Task id: 20
Unloading conda_R/4.1.x
Loading conda_R/devel

The following have been reloaded with a version change:
  1) conda_R/4.1.x => conda_R/devel


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.6.14
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/devel
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14143 samples within 1 assay 
Active assay: RNA (2000 features, 1397 variable features)

[[2]]
An object of class Seurat 
2000 features across 19678 samples within 1 assay 
Active assay: RNA (2000 features, 1541 variable features)

[[3]]
An object of class Seurat 
2000 features across 14104 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8662 samples within 1 assay 
Active assay: RNA (2000 features, 1374 variable features)

[[5]]
An object of class Seurat 
2000 features across 14390 samples within 1 assay 
Active assay: RNA (2000 features, 1495 variable features)

[[6]]
An object of class Seurat 
2000 features across 18709 samples within 1 assay 
Active assay: RNA (2000 features, 1159 variable features)

[[7]]
An object of class Seurat 
2000 features across 20614 samples within 1 assay 
Active assay: RNA (2000 features, 1612 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1200 variable features)

[[9]]
An object of class Seurat 
2000 features across 18041 samples within 1 assay 
Active assay: RNA (2000 features, 1385 variable features)

Neighbors were identified for 14143 out of 14143 spots.
Neighbors were identified for 19678 out of 19678 spots.
Neighbors were identified for 14104 out of 14104 spots.
Neighbors were identified for 8662 out of 8662 spots.
Neighbors were identified for 14390 out of 14390 spots.
Neighbors were identified for 18709 out of 18709 spots.
Neighbors were identified for 20611 out of 20614 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18038 out of 18041 spots.
Intergrative data info.: 9 samples, 2000 genes X 136730 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 47.565360 
Finish ICM step! 
iter = 2, loglik= -69737616.000000, dloglik=0.967526 
predict Y and V! 
diff Energy = 47.817094 
diff Energy = 66.449447 
diff Energy = 24.156305 
diff Energy = 151.946724 
diff Energy = 6.493108 
diff Energy = 42.746161 
diff Energy = 43.655861 
Finish ICM step! 
iter = 3, loglik= -68933192.000000, dloglik=0.011535 
predict Y and V! 
diff Energy = 271.751988 
diff Energy = 438.207077 
diff Energy = 290.170618 
diff Energy = 32.837688 
diff Energy = 406.021893 
diff Energy = 302.256270 
diff Energy = 458.340844 
diff Energy = 174.713208 
diff Energy = 50.658072 
Finish ICM step! 
iter = 4, loglik= -68631376.000000, dloglik=0.004378 
predict Y and V! 
diff Energy = 143.460244 
diff Energy = 195.042762 
diff Energy = 112.175596 
diff Energy = 12.854779 
diff Energy = 124.368726 
diff Energy = 188.017475 
diff Energy = 218.298576 
diff Energy = 120.402955 
diff Energy = 5.348670 
Finish ICM step! 
iter = 5, loglik= -68460832.000000, dloglik=0.002485 
predict Y and V! 
diff Energy = 99.591886 
diff Energy = 107.675082 
diff Energy = 103.810843 
diff Energy = 18.808792 
diff Energy = 144.828409 
diff Energy = 88.965134 
diff Energy = 177.490023 
diff Energy = 55.085914 
diff Energy = 36.639468 
Finish ICM step! 
iter = 6, loglik= -68357200.000000, dloglik=0.001514 
predict Y and V! 
diff Energy = 84.535392 
diff Energy = 69.111959 
diff Energy = 44.351638 
diff Energy = 3.111372 
diff Energy = 85.172672 
diff Energy = 72.403440 
diff Energy = 140.891495 
diff Energy = 23.883501 
diff Energy = 25.080715 
Finish ICM step! 
iter = 7, loglik= -68288824.000000, dloglik=0.001000 
predict Y and V! 
diff Energy = 50.644675 
diff Energy = 20.012760 
diff Energy = 32.691155 
diff Energy = 109.856821 
diff Energy = 76.487006 
diff Energy = 73.865541 
diff Energy = 43.118231 
diff Energy = 88.138277 
Finish ICM step! 
iter = 8, loglik= -68239320.000000, dloglik=0.000725 
predict Y and V! 
diff Energy = 52.709609 
diff Energy = 117.141255 
diff Energy = 65.479784 
diff Energy = 4.428372 
diff Energy = 37.409285 
diff Energy = 110.640348 
diff Energy = 9.289119 
diff Energy = 11.628345 
Finish ICM step! 
iter = 9, loglik= -68202280.000000, dloglik=0.000543 
predict Y and V! 
diff Energy = 46.286431 
diff Energy = 30.869034 
diff Energy = 32.240110 
diff Energy = 4.261728 
diff Energy = 27.894781 
diff Energy = 14.049805 
diff Energy = 34.576909 
diff Energy = 45.256717 
diff Energy = 4.808760 
Finish ICM step! 
iter = 10, loglik= -68174016.000000, dloglik=0.000414 
predict Y and V! 
diff Energy = 23.781521 
diff Energy = 25.554272 
diff Energy = 10.199249 
diff Energy = 3.201866 
diff Energy = 27.529803 
diff Energy = 7.218769 
diff Energy = 9.971905 
diff Energy = 15.433654 
Finish ICM step! 
iter = 11, loglik= -68152064.000000, dloglik=0.000322 
predict Y and V! 
diff Energy = 49.248305 
diff Energy = 11.024916 
diff Energy = 18.901506 
diff Energy = 3.868682 
diff Energy = 15.078434 
diff Energy = 22.301274 
diff Energy = 7.010077 
diff Energy = 11.866240 
Finish ICM step! 
iter = 12, loglik= -68135032.000000, dloglik=0.000250 
predict Y and V! 
diff Energy = 17.971080 
diff Energy = 6.930852 
diff Energy = 10.135304 
diff Energy = 1.911707 
diff Energy = 34.112694 
diff Energy = 2.836695 
diff Energy = 17.052193 
diff Energy = 5.557477 
diff Energy = 21.467929 
Finish ICM step! 
iter = 13, loglik= -68121024.000000, dloglik=0.000206 
predict Y and V! 
diff Energy = 37.310596 
diff Energy = 7.636100 
diff Energy = 7.626651 
diff Energy = 14.287317 
diff Energy = 4.965733 
diff Energy = 6.220453 
diff Energy = 1.383265 
Finish ICM step! 
iter = 14, loglik= -68109296.000000, dloglik=0.000172 
predict Y and V! 
diff Energy = 0.660080 
diff Energy = 2.952058 
diff Energy = 9.167154 
diff Energy = 2.914171 
diff Energy = 25.853876 
diff Energy = 49.457538 
diff Energy = 23.369482 
diff Energy = 15.674740 
Finish ICM step! 
iter = 15, loglik= -68099432.000000, dloglik=0.000145 
predict Y and V! 
diff Energy = 8.303540 
diff Energy = 5.743532 
diff Energy = 8.492048 
diff Energy = 4.917869 
diff Energy = 73.869833 
diff Energy = 7.345167 
diff Energy = 1.649967 
diff Energy = 55.378790 
Finish ICM step! 
iter = 16, loglik= -68090976.000000, dloglik=0.000124 
predict Y and V! 
diff Energy = 12.254426 
diff Energy = 2.667680 
diff Energy = 1.017137 
diff Energy = 0.147747 
diff Energy = 0.752022 
diff Energy = 22.100189 
diff Energy = 3.268694 
diff Energy = 8.145724 
diff Energy = 2.041573 
Finish ICM step! 
iter = 17, loglik= -68083424.000000, dloglik=0.000111 
predict Y and V! 
diff Energy = 1.691217 
diff Energy = 8.996603 
diff Energy = 7.107848 
diff Energy = 0.146843 
diff Energy = 29.316695 
diff Energy = 0.786407 
diff Energy = 19.346985 
diff Energy = 13.843350 
diff Energy = 3.422263 
Finish ICM step! 
iter = 18, loglik= -68076632.000000, dloglik=0.000100 
predict Y and V! 
diff Energy = 10.485613 
diff Energy = 7.089455 
diff Energy = 41.609348 
diff Energy = 16.737100 
diff Energy = 38.414079 
diff Energy = 3.529786 
diff Energy = 11.364488 
diff Energy = 25.406306 
Finish ICM step! 
iter = 19, loglik= -68070432.000000, dloglik=0.000091 
predict Y and V! 
diff Energy = 4.918667 
diff Energy = 9.453107 
diff Energy = 0.163713 
diff Energy = 4.851359 
diff Energy = 17.118953 
diff Energy = 4.882069 
diff Energy = 6.028842 
diff Energy = 6.593499 
diff Energy = 5.791193 
Finish ICM step! 
iter = 20, loglik= -68064392.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 9.091217 
diff Energy = 0.238446 
diff Energy = 2.059805 
diff Energy = 0.137606 
diff Energy = 5.322762 
diff Energy = 11.061409 
diff Energy = 27.300006 
diff Energy = 19.110986 
Finish ICM step! 
iter = 21, loglik= -68058544.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 9.645388 
diff Energy = 13.505701 
diff Energy = 0.030424 
diff Energy = 12.658876 
diff Energy = 4.573601 
diff Energy = 7.849354 
diff Energy = 4.655288 
diff Energy = 2.533858 
diff Energy = 22.220199 
Finish ICM step! 
iter = 22, loglik= -68052808.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 3.270441 
diff Energy = 15.336450 
diff Energy = 3.204437 
diff Energy = 5.813213 
diff Energy = 27.534833 
diff Energy = 20.869017 
diff Energy = 1.133805 
diff Energy = 34.530462 
diff Energy = 16.602597 
Finish ICM step! 
iter = 23, loglik= -68046920.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 6.537920 
diff Energy = 5.115696 
diff Energy = 11.645073 
diff Energy = 1.905071 
diff Energy = 11.002865 
diff Energy = 20.371800 
diff Energy = 6.259288 
diff Energy = 4.033480 
Finish ICM step! 
iter = 24, loglik= -68040832.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 12.923031 
diff Energy = 1.676494 
diff Energy = 2.543059 
diff Energy = 7.569268 
diff Energy = 6.725761 
diff Energy = 19.399578 
diff Energy = 73.514150 
diff Energy = 2.455318 
diff Energy = 0.540502 
Finish ICM step! 
iter = 25, loglik= -68034584.000000, dloglik=0.000092 
predict Y and V! 
diff Energy = 8.236588 
diff Energy = 19.665844 
diff Energy = 0.149590 
diff Energy = 2.572614 
diff Energy = 0.659213 
diff Energy = 22.176366 
diff Energy = 2.644801 
diff Energy = 1.878774 
diff Energy = 8.410909 
Finish ICM step! 
iter = 26, loglik= -68027872.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 13.896241 
diff Energy = 10.003444 
diff Energy = 3.957180 
diff Energy = 2.958488 
diff Energy = 9.474291 
diff Energy = 11.299362 
diff Energy = 17.599617 
diff Energy = 13.407339 
Finish ICM step! 
iter = 27, loglik= -68020904.000000, dloglik=0.000102 
predict Y and V! 
diff Energy = 4.737705 
diff Energy = 2.203078 
diff Energy = 1.540440 
diff Energy = 16.529979 
diff Energy = 30.473314 
diff Energy = 6.161914 
diff Energy = 18.498967 
Finish ICM step! 
iter = 28, loglik= -68013712.000000, dloglik=0.000106 
predict Y and V! 
diff Energy = 2.898494 
diff Energy = 3.592851 
diff Energy = 9.293856 
diff Energy = 15.752884 
diff Energy = 13.405958 
diff Energy = 18.511577 
diff Energy = 5.306122 
diff Energy = 11.001652 
Finish ICM step! 
iter = 29, loglik= -68006600.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 0.147317 
diff Energy = 5.067000 
diff Energy = 1.008140 
diff Energy = 6.020156 
diff Energy = 47.191470 
diff Energy = 13.176220 
Finish ICM step! 
iter = 30, loglik= -67999216.000000, dloglik=0.000109 
21899.138 sec elapsed
**** Job ends ****
Wed Nov  2 23:22:22 EDT 2022
**** Job starts ****
Tue Mar 21 19:53:08 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 20
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:11 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:23 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 20
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:25 EDT 2023
**** Job starts ****
Wed Mar 22 03:54:43 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 20
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79860440.000000, dloglik=0.962812 
predict Y and V! 
diff Energy = 53.721003 
diff Energy = 101.019564 
diff Energy = 4.748321 
diff Energy = 6.331098 
diff Energy = 110.492050 
diff Energy = 11.269884 
diff Energy = 8.316353 
diff Energy = 3.938526 
diff Energy = 46.412266 
Finish ICM step! 
iter = 3, loglik= -78806696.000000, dloglik=0.013195 
predict Y and V! 
diff Energy = 133.098068 
diff Energy = 134.476030 
diff Energy = 102.714903 
diff Energy = 58.871343 
diff Energy = 114.056053 
diff Energy = 70.614759 
diff Energy = 103.752194 
diff Energy = 41.980147 
diff Energy = 208.810640 
diff Energy = 116.446740 
Finish ICM step! 
iter = 4, loglik= -78465672.000000, dloglik=0.004327 
predict Y and V! 
diff Energy = 110.932617 
diff Energy = 153.447241 
diff Energy = 32.268108 
diff Energy = 90.049011 
diff Energy = 140.594245 
diff Energy = 41.965689 
diff Energy = 132.684838 
diff Energy = 19.058729 
diff Energy = 175.852358 
diff Energy = 177.914615 
Finish ICM step! 
iter = 5, loglik= -78289376.000000, dloglik=0.002247 
predict Y and V! 
diff Energy = 54.898113 
diff Energy = 96.452416 
diff Energy = 76.393410 
diff Energy = 73.361544 
diff Energy = 111.618150 
diff Energy = 58.037229 
diff Energy = 111.228115 
diff Energy = 18.736583 
diff Energy = 190.514205 
diff Energy = 164.661772 
Finish ICM step! 
iter = 6, loglik= -78181376.000000, dloglik=0.001379 
predict Y and V! 
diff Energy = 52.646360 
diff Energy = 68.638843 
diff Energy = 2.962289 
diff Energy = 56.337336 
diff Energy = 63.421321 
diff Energy = 17.852758 
diff Energy = 76.606745 
diff Energy = 3.688668 
diff Energy = 153.657946 
diff Energy = 56.436385 
Finish ICM step! 
iter = 7, loglik= -78109360.000000, dloglik=0.000921 
predict Y and V! 
diff Energy = 76.444294 
diff Energy = 24.538699 
diff Energy = 6.361219 
diff Energy = 37.595141 
diff Energy = 75.826431 
diff Energy = 44.443835 
diff Energy = 2.454706 
diff Energy = 11.925057 
diff Energy = 75.580899 
diff Energy = 82.711360 
Finish ICM step! 
iter = 8, loglik= -78057736.000000, dloglik=0.000661 
predict Y and V! 
diff Energy = 37.300598 
diff Energy = 3.462305 
diff Energy = 19.333465 
diff Energy = 37.675093 
diff Energy = 6.398393 
diff Energy = 10.240594 
diff Energy = 25.749109 
diff Energy = 47.738054 
diff Energy = 18.381395 
Finish ICM step! 
iter = 9, loglik= -78018024.000000, dloglik=0.000509 
predict Y and V! 
diff Energy = 4.410926 
diff Energy = 11.722659 
diff Energy = 12.366952 
diff Energy = 46.355537 
diff Energy = 42.650099 
diff Energy = 20.712176 
diff Energy = 16.284647 
diff Energy = 27.836172 
diff Energy = 20.787802 
Finish ICM step! 
iter = 10, loglik= -77985480.000000, dloglik=0.000417 
predict Y and V! 
diff Energy = 25.953976 
diff Energy = 7.416888 
diff Energy = 12.507792 
diff Energy = 1.680235 
diff Energy = 11.749746 
diff Energy = 3.155023 
diff Energy = 3.286537 
diff Energy = 13.701690 
diff Energy = 18.761032 
diff Energy = 24.104466 
Finish ICM step! 
iter = 11, loglik= -77959240.000000, dloglik=0.000336 
predict Y and V! 
diff Energy = 6.920706 
diff Energy = 0.117227 
diff Energy = 23.733759 
diff Energy = 12.877277 
diff Energy = 2.059224 
diff Energy = 9.786337 
diff Energy = 1.602366 
Finish ICM step! 
iter = 12, loglik= -77936984.000000, dloglik=0.000285 
predict Y and V! 
diff Energy = 8.834950 
diff Energy = 4.671091 
diff Energy = 2.057738 
diff Energy = 2.808896 
diff Energy = 9.819882 
diff Energy = 10.149865 
diff Energy = 11.214848 
diff Energy = 2.272144 
diff Energy = 23.676674 
diff Energy = 58.322933 
Finish ICM step! 
iter = 13, loglik= -77919744.000000, dloglik=0.000221 
predict Y and V! 
diff Energy = 35.506071 
diff Energy = 7.784549 
diff Energy = 4.502064 
diff Energy = 15.927791 
diff Energy = 5.019238 
diff Energy = 1.278697 
diff Energy = 40.196934 
diff Energy = 7.689013 
Finish ICM step! 
iter = 14, loglik= -77905848.000000, dloglik=0.000178 
predict Y and V! 
diff Energy = 1.572795 
diff Energy = 4.759418 
diff Energy = 0.904742 
diff Energy = 5.758320 
diff Energy = 3.090665 
diff Energy = 1.067581 
diff Energy = 0.103046 
diff Energy = 19.605462 
diff Energy = 16.710221 
Finish ICM step! 
iter = 15, loglik= -77894672.000000, dloglik=0.000143 
predict Y and V! 
diff Energy = 13.661305 
diff Energy = 13.447467 
diff Energy = 6.551024 
diff Energy = 32.341723 
diff Energy = 1.668854 
diff Energy = 1.014782 
diff Energy = 35.733739 
diff Energy = 35.458287 
Finish ICM step! 
iter = 16, loglik= -77885400.000000, dloglik=0.000119 
predict Y and V! 
diff Energy = 4.447629 
diff Energy = 1.130095 
diff Energy = 3.300750 
diff Energy = 9.774115 
diff Energy = 5.116771 
diff Energy = 46.254019 
diff Energy = 9.810201 
diff Energy = 2.480221 
diff Energy = 25.658193 
diff Energy = 5.558196 
Finish ICM step! 
iter = 17, loglik= -77877424.000000, dloglik=0.000102 
predict Y and V! 
diff Energy = 2.887164 
diff Energy = 9.716573 
diff Energy = 51.229986 
diff Energy = 9.960318 
diff Energy = 2.449313 
diff Energy = 3.692724 
diff Energy = 7.160595 
diff Energy = 50.065008 
diff Energy = 19.028411 
Finish ICM step! 
iter = 18, loglik= -77870456.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 0.250024 
diff Energy = 6.513139 
diff Energy = 0.245547 
diff Energy = 0.332716 
diff Energy = 17.039753 
diff Energy = 6.683710 
diff Energy = 4.813367 
diff Energy = 17.021844 
diff Energy = 0.199169 
Finish ICM step! 
iter = 19, loglik= -77864216.000000, dloglik=0.000080 
predict Y and V! 
diff Energy = 0.079564 
diff Energy = 5.511670 
diff Energy = 4.086280 
diff Energy = 2.303852 
diff Energy = 2.799177 
diff Energy = 8.159754 
diff Energy = 1.110852 
diff Energy = 11.009719 
diff Energy = 109.523751 
diff Energy = 10.393202 
Finish ICM step! 
iter = 20, loglik= -77858576.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 3.103998 
diff Energy = 18.336093 
diff Energy = 2.506039 
diff Energy = 11.701851 
diff Energy = 0.722904 
diff Energy = 13.533275 
diff Energy = 16.809346 
diff Energy = 17.196658 
Finish ICM step! 
iter = 21, loglik= -77852848.000000, dloglik=0.000074 
predict Y and V! 
diff Energy = 6.317398 
diff Energy = 0.083312 
diff Energy = 2.674109 
diff Energy = 2.919774 
diff Energy = 0.757769 
diff Energy = 9.157954 
diff Energy = 0.568605 
diff Energy = 7.982613 
diff Energy = 30.287135 
Finish ICM step! 
iter = 22, loglik= -77847400.000000, dloglik=0.000070 
predict Y and V! 
diff Energy = 1.124043 
diff Energy = 5.222401 
diff Energy = 2.745152 
diff Energy = 0.459789 
diff Energy = 2.165373 
diff Energy = 0.045682 
diff Energy = 5.126423 
diff Energy = 3.826856 
diff Energy = 12.818508 
Finish ICM step! 
iter = 23, loglik= -77841792.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 4.743823 
diff Energy = 4.046642 
diff Energy = 5.131939 
diff Energy = 9.321477 
diff Energy = 1.022120 
diff Energy = 12.084407 
diff Energy = 18.583054 
diff Energy = 11.124746 
diff Energy = 10.027819 
Finish ICM step! 
iter = 24, loglik= -77836008.000000, dloglik=0.000074 
predict Y and V! 
diff Energy = 0.852889 
diff Energy = 9.218148 
diff Energy = 0.719251 
diff Energy = 1.115542 
diff Energy = 30.607932 
diff Energy = 2.384300 
diff Energy = 1.933039 
diff Energy = 15.298838 
diff Energy = 2.082932 
Finish ICM step! 
iter = 25, loglik= -77829592.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 0.058177 
diff Energy = 2.851393 
diff Energy = 1.115301 
diff Energy = 0.353212 
diff Energy = 12.975245 
diff Energy = 4.225192 
diff Energy = 10.950740 
diff Energy = 15.329782 
diff Energy = 2.792667 
Finish ICM step! 
iter = 26, loglik= -77823176.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 3.884908 
diff Energy = 2.366580 
diff Energy = 9.214283 
diff Energy = 1.446147 
diff Energy = 20.920355 
diff Energy = 2.003961 
diff Energy = 6.298253 
diff Energy = 11.664637 
diff Energy = 13.708328 
Finish ICM step! 
iter = 27, loglik= -77816104.000000, dloglik=0.000091 
predict Y and V! 
diff Energy = 7.485948 
diff Energy = 1.516187 
diff Energy = 0.545555 
diff Energy = 2.205418 
diff Energy = 0.552779 
diff Energy = 50.703749 
diff Energy = 4.684421 
diff Energy = 14.340826 
Finish ICM step! 
iter = 28, loglik= -77808376.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 3.128253 
diff Energy = 4.087588 
diff Energy = 7.005467 
diff Energy = 0.635003 
diff Energy = 0.572454 
diff Energy = 14.303834 
diff Energy = 2.913710 
diff Energy = 3.150465 
diff Energy = 10.682385 
Finish ICM step! 
iter = 29, loglik= -77799840.000000, dloglik=0.000110 
predict Y and V! 
diff Energy = 3.745416 
diff Energy = 16.207463 
diff Energy = 4.618961 
diff Energy = 3.663619 
diff Energy = 3.648083 
diff Energy = 8.709094 
diff Energy = 5.403219 
diff Energy = 22.402866 
Finish ICM step! 
iter = 30, loglik= -77790936.000000, dloglik=0.000114 
32667.401 sec elapsed
**** Job ends ****
Wed Mar 22 13:10:50 EDT 2023
**** Job starts ****
Thu Mar 30 07:05:37 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3084530
Job name: PRECAST_k16-25
Hostname: compute-093.cm.cluster
Task id: 20
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 7569
## number of total genes: 23689
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8089
## number of total genes: 24208
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 16334
## number of total genes: 25336
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14105
## number of total genes: 26447
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 24039
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 6071
## number of total genes: 23183
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 9895
## number of total genes: 24035
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 17222
## number of total genes: 26256
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15785
## number of total genes: 25978
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 12039
## number of total genes: 24495
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 13970
## number of total genes: 24879
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
There were 24 warnings (use warnings() to see them)
[[1]]
An object of class Seurat 
2000 features across 7538 samples within 1 assay 
Active assay: RNA (2000 features, 467 variable features)

[[2]]
An object of class Seurat 
2000 features across 8079 samples within 1 assay 
Active assay: RNA (2000 features, 458 variable features)

[[3]]
An object of class Seurat 
2000 features across 16022 samples within 1 assay 
Active assay: RNA (2000 features, 459 variable features)

[[4]]
An object of class Seurat 
2000 features across 14065 samples within 1 assay 
Active assay: RNA (2000 features, 449 variable features)

[[5]]
An object of class Seurat 
2000 features across 8637 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[6]]
An object of class Seurat 
2000 features across 5952 samples within 1 assay 
Active assay: RNA (2000 features, 453 variable features)

[[7]]
An object of class Seurat 
2000 features across 9490 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[8]]
An object of class Seurat 
2000 features across 16998 samples within 1 assay 
Active assay: RNA (2000 features, 457 variable features)

[[9]]
An object of class Seurat 
2000 features across 15390 samples within 1 assay 
Active assay: RNA (2000 features, 420 variable features)

[[10]]
An object of class Seurat 
2000 features across 11862 samples within 1 assay 
Active assay: RNA (2000 features, 461 variable features)

[[11]]
An object of class Seurat 
2000 features across 13539 samples within 1 assay 
Active assay: RNA (2000 features, 444 variable features)

Neighbors were identified for 7538 out of 7538 spots.
Neighbors were identified for 8079 out of 8079 spots.
Neighbors were identified for 16022 out of 16022 spots.
Neighbors were identified for 14065 out of 14065 spots.
Neighbors were identified for 8637 out of 8637 spots.
Neighbors were identified for 5951 out of 5952 spots.
Neighbors were identified for 9489 out of 9490 spots.
Neighbors were identified for 16998 out of 16998 spots.
Neighbors were identified for 15390 out of 15390 spots.
Neighbors were identified for 11862 out of 11862 spots.
Neighbors were identified for 13539 out of 13539 spots.
Intergrative data info.: 11 samples, 2000 genes X 127572 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 304.920487 
diff Energy = 175.968932 
diff Energy = 417.829268 
diff Energy = 161.162344 
diff Energy = 252.093798 
Finish ICM step! 
iter = 2, loglik= 75899296.000000, dloglik=1.035343 
predict Y and V! 
diff Energy = 17.913542 
diff Energy = 26.152832 
diff Energy = 67.754110 
diff Energy = 65.537027 
diff Energy = 49.127317 
diff Energy = 14.350604 
diff Energy = 30.669351 
diff Energy = 26.571021 
diff Energy = 123.898781 
diff Energy = 14.879169 
diff Energy = 96.156059 
Finish ICM step! 
iter = 3, loglik= 76350624.000000, dloglik=0.005946 
predict Y and V! 
diff Energy = 63.342026 
diff Energy = 93.849796 
diff Energy = 34.779729 
diff Energy = 111.908878 
diff Energy = 90.186878 
diff Energy = 72.166742 
diff Energy = 16.467773 
diff Energy = 249.886056 
diff Energy = 16.039290 
diff Energy = 62.221155 
diff Energy = 39.809352 
Finish ICM step! 
iter = 4, loglik= 76472040.000000, dloglik=0.001590 
predict Y and V! 
diff Energy = 2.580145 
diff Energy = 80.881279 
diff Energy = 2.100616 
diff Energy = 36.940226 
diff Energy = 84.278259 
diff Energy = 52.935950 
diff Energy = 34.820105 
diff Energy = 122.899602 
diff Energy = 26.961472 
diff Energy = 17.425561 
diff Energy = 25.982786 
Finish ICM step! 
iter = 5, loglik= 76530856.000000, dloglik=0.000769 
predict Y and V! 
diff Energy = 77.424221 
diff Energy = 10.137814 
diff Energy = 0.353390 
diff Energy = 25.444694 
diff Energy = 48.863175 
diff Energy = 9.553435 
diff Energy = 120.356147 
diff Energy = 20.531730 
diff Energy = 20.179241 
diff Energy = 10.116447 
Finish ICM step! 
iter = 6, loglik= 76569688.000000, dloglik=0.000507 
predict Y and V! 
diff Energy = 0.850085 
diff Energy = 58.173285 
diff Energy = 9.268747 
diff Energy = 17.602713 
diff Energy = 42.929221 
diff Energy = 57.114846 
diff Energy = 9.688823 
diff Energy = 31.652838 
diff Energy = 16.500208 
diff Energy = 3.206210 
Finish ICM step! 
iter = 7, loglik= 76599088.000000, dloglik=0.000384 
predict Y and V! 
diff Energy = 0.560385 
diff Energy = 15.347684 
diff Energy = 21.742598 
diff Energy = 0.292411 
diff Energy = 40.711590 
diff Energy = 24.254426 
diff Energy = 2.580850 
diff Energy = 27.146689 
diff Energy = 7.455806 
diff Energy = 21.205571 
diff Energy = 2.972032 
Finish ICM step! 
iter = 8, loglik= 76623048.000000, dloglik=0.000313 
predict Y and V! 
diff Energy = 15.436358 
diff Energy = 17.593412 
diff Energy = 6.479120 
diff Energy = 87.450646 
diff Energy = 26.316702 
diff Energy = 43.077646 
diff Energy = 0.157869 
diff Energy = 18.350169 
diff Energy = 17.612721 
diff Energy = 5.224456 
Finish ICM step! 
iter = 9, loglik= 76645112.000000, dloglik=0.000288 
predict Y and V! 
diff Energy = 100.866276 
diff Energy = 34.380126 
diff Energy = 0.657589 
diff Energy = 39.239462 
diff Energy = 17.362181 
diff Energy = 24.214892 
diff Energy = 110.335381 
diff Energy = 9.713320 
diff Energy = 251.414091 
diff Energy = 17.108995 
Finish ICM step! 
iter = 10, loglik= 76667552.000000, dloglik=0.000293 
predict Y and V! 
diff Energy = 10.176847 
diff Energy = 35.645484 
diff Energy = 9.495757 
diff Energy = 3.035863 
diff Energy = 20.029807 
diff Energy = 79.647382 
diff Energy = 11.453552 
diff Energy = 8.230653 
diff Energy = 53.472217 
diff Energy = 0.820835 
diff Energy = 6.481128 
Finish ICM step! 
iter = 11, loglik= 76689928.000000, dloglik=0.000292 
predict Y and V! 
diff Energy = 12.223956 
diff Energy = 17.875684 
diff Energy = 13.762816 
diff Energy = 0.117237 
diff Energy = 21.057456 
diff Energy = 17.313723 
diff Energy = 0.909767 
diff Energy = 7.386103 
diff Energy = 151.591322 
Finish ICM step! 
iter = 12, loglik= 76712360.000000, dloglik=0.000293 
predict Y and V! 
diff Energy = 16.221798 
diff Energy = 7.524533 
diff Energy = 1.417007 
diff Energy = 3.569063 
diff Energy = 135.406618 
diff Energy = 9.317418 
diff Energy = 2.693611 
diff Energy = 8.154294 
diff Energy = 40.880484 
diff Energy = 1.799086 
Finish ICM step! 
iter = 13, loglik= 76731496.000000, dloglik=0.000249 
predict Y and V! 
diff Energy = 10.178675 
diff Energy = 17.702516 
diff Energy = 4.182119 
diff Energy = 24.446169 
diff Energy = 3.567591 
diff Energy = 2.709054 
diff Energy = 6.360684 
diff Energy = 63.244758 
Finish ICM step! 
iter = 14, loglik= 76746800.000000, dloglik=0.000199 
predict Y and V! 
diff Energy = 16.945493 
diff Energy = 24.857220 
diff Energy = 45.861891 
diff Energy = 4.610821 
diff Energy = 3.774267 
diff Energy = 59.595497 
diff Energy = 0.306198 
Finish ICM step! 
iter = 15, loglik= 76760288.000000, dloglik=0.000176 
predict Y and V! 
diff Energy = 6.357518 
diff Energy = 6.199507 
diff Energy = 158.833930 
diff Energy = 1.657926 
diff Energy = 40.808417 
diff Energy = 2.124020 
diff Energy = 3.880974 
diff Energy = 46.208481 
Finish ICM step! 
iter = 16, loglik= 76773608.000000, dloglik=0.000174 
predict Y and V! 
diff Energy = 20.229107 
diff Energy = 36.851235 
diff Energy = 30.167893 
diff Energy = 12.933786 
diff Energy = 1.064399 
Finish ICM step! 
iter = 17, loglik= 76786344.000000, dloglik=0.000166 
predict Y and V! 
diff Energy = 11.572941 
diff Energy = 18.336204 
diff Energy = 45.767092 
diff Energy = 38.082906 
diff Energy = 71.338926 
diff Energy = 36.286195 
diff Energy = 172.359562 
Finish ICM step! 
iter = 18, loglik= 76800008.000000, dloglik=0.000178 
predict Y and V! 
diff Energy = 25.551723 
diff Energy = 8.649658 
diff Energy = 24.965014 
diff Energy = 87.349825 
Finish ICM step! 
iter = 19, loglik= 76814048.000000, dloglik=0.000183 
predict Y and V! 
diff Energy = 3.086851 
diff Energy = 65.375606 
diff Energy = 21.004686 
diff Energy = 36.436795 
diff Energy = 64.944753 
Finish ICM step! 
iter = 20, loglik= 76829224.000000, dloglik=0.000198 
predict Y and V! 
diff Energy = 21.131354 
diff Energy = 5.288395 
diff Energy = 9.576937 
diff Energy = 24.211223 
diff Energy = 38.913591 
Finish ICM step! 
iter = 21, loglik= 76845808.000000, dloglik=0.000216 
predict Y and V! 
diff Energy = 6.149849 
diff Energy = 6.282050 
diff Energy = 4.099334 
diff Energy = 23.550032 
Finish ICM step! 
iter = 22, loglik= 76864704.000000, dloglik=0.000246 
predict Y and V! 
diff Energy = 2.097895 
diff Energy = 39.150600 
Finish ICM step! 
iter = 23, loglik= 76886920.000000, dloglik=0.000289 
predict Y and V! 
diff Energy = 3.069773 
diff Energy = 3.943588 
Finish ICM step! 
iter = 24, loglik= 76913456.000000, dloglik=0.000345 
predict Y and V! 
diff Energy = 6.092477 
Finish ICM step! 
iter = 25, loglik= 76944680.000000, dloglik=0.000406 
predict Y and V! 
diff Energy = 15.606026 
diff Energy = 4.924037 
diff Energy = 3.623149 
Finish ICM step! 
iter = 26, loglik= 76982704.000000, dloglik=0.000494 
predict Y and V! 
diff Energy = 5.767887 
diff Energy = 4.183870 
diff Energy = 9.777373 
diff Energy = 22.090959 
diff Energy = 4.390623 
Finish ICM step! 
iter = 27, loglik= 77030504.000000, dloglik=0.000621 
predict Y and V! 
diff Energy = 13.732785 
diff Energy = 3.418096 
diff Energy = 11.415999 
diff Energy = 10.202417 
diff Energy = 25.255318 
Finish ICM step! 
iter = 28, loglik= 77090832.000000, dloglik=0.000783 
predict Y and V! 
diff Energy = 23.643635 
diff Energy = 14.304777 
diff Energy = 2.000530 
diff Energy = 13.617084 
diff Energy = 3.878717 
diff Energy = 17.032544 
diff Energy = 13.505473 
Finish ICM step! 
iter = 29, loglik= 77161152.000000, dloglik=0.000912 
predict Y and V! 
diff Energy = 14.408280 
diff Energy = 5.329879 
diff Energy = 9.902904 
diff Energy = 13.837841 
diff Energy = 41.143277 
diff Energy = 31.903475 
diff Energy = 0.182637 
Finish ICM step! 
iter = 30, loglik= 77232160.000000, dloglik=0.000920 
23126.235 sec elapsed
**** Job ends ****
Thu Mar 30 13:52:19 EDT 2023
**** Job starts ****
Thu May  4 05:35:25 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3133844
Job name: PRECAST_k10-30
Hostname: compute-099.cm.cluster
Task id: 20
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[[1]]
An object of class Seurat 
2000 features across 14124 samples within 1 assay 
Active assay: RNA (2000 features, 1065 variable features)

[[2]]
An object of class Seurat 
2000 features across 19594 samples within 1 assay 
Active assay: RNA (2000 features, 1233 variable features)

[[3]]
An object of class Seurat 
2000 features across 14098 samples within 1 assay 
Active assay: RNA (2000 features, 1067 variable features)

[[4]]
An object of class Seurat 
2000 features across 8659 samples within 1 assay 
Active assay: RNA (2000 features, 988 variable features)

[[5]]
An object of class Seurat 
2000 features across 14358 samples within 1 assay 
Active assay: RNA (2000 features, 1105 variable features)

[[6]]
An object of class Seurat 
2000 features across 18676 samples within 1 assay 
Active assay: RNA (2000 features, 1039 variable features)

[[7]]
An object of class Seurat 
2000 features across 20573 samples within 1 assay 
Active assay: RNA (2000 features, 1179 variable features)

[[8]]
An object of class Seurat 
2000 features across 8387 samples within 1 assay 
Active assay: RNA (2000 features, 984 variable features)

[[9]]
An object of class Seurat 
2000 features across 17973 samples within 1 assay 
Active assay: RNA (2000 features, 1096 variable features)

[[10]]
An object of class Seurat 
2000 features across 15310 samples within 1 assay 
Active assay: RNA (2000 features, 1147 variable features)

Neighbors were identified for 14121 out of 14124 spots.
Neighbors were identified for 19593 out of 19594 spots.
Neighbors were identified for 14098 out of 14098 spots.
Neighbors were identified for 8659 out of 8659 spots.
Neighbors were identified for 14358 out of 14358 spots.
Neighbors were identified for 18676 out of 18676 spots.
Neighbors were identified for 20570 out of 20573 spots.
Neighbors were identified for 8387 out of 8387 spots.
Neighbors were identified for 17969 out of 17973 spots.
Neighbors were identified for 15310 out of 15310 spots.
Intergrative data info.: 10 samples, 2000 genes X 151752 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= 136951120.000000, dloglik=1.063773 
predict Y and V! 
diff Energy = 85.989431 
diff Energy = 6.697684 
diff Energy = 99.906476 
diff Energy = 5.987762 
diff Energy = 2.009664 
diff Energy = 60.458117 
diff Energy = 45.257109 
Finish ICM step! 
iter = 3, loglik= 138177920.000000, dloglik=0.008958 
predict Y and V! 
diff Energy = 50.258691 
diff Energy = 101.731213 
diff Energy = 20.667298 
diff Energy = 48.932080 
diff Energy = 157.500043 
diff Energy = 53.255138 
diff Energy = 48.145531 
diff Energy = 23.874551 
diff Energy = 155.627094 
diff Energy = 68.824472 
Finish ICM step! 
iter = 4, loglik= 138645072.000000, dloglik=0.003381 
predict Y and V! 
diff Energy = 45.335395 
diff Energy = 140.340710 
diff Energy = 10.474232 
diff Energy = 10.276307 
diff Energy = 126.907930 
diff Energy = 10.438665 
diff Energy = 17.169117 
diff Energy = 7.196750 
diff Energy = 139.687749 
diff Energy = 124.975601 
Finish ICM step! 
iter = 5, loglik= 138896224.000000, dloglik=0.001811 
predict Y and V! 
diff Energy = 47.341688 
diff Energy = 115.155085 
diff Energy = 2.722814 
diff Energy = 28.413614 
diff Energy = 135.129968 
diff Energy = 38.305218 
diff Energy = 36.478375 
diff Energy = 42.106585 
diff Energy = 182.495728 
diff Energy = 123.967114 
Finish ICM step! 
iter = 6, loglik= 139031280.000000, dloglik=0.000972 
predict Y and V! 
diff Energy = 35.474026 
diff Energy = 1.533801 
diff Energy = 15.317340 
diff Energy = 39.175012 
diff Energy = 111.592260 
diff Energy = 16.113721 
diff Energy = 6.118619 
diff Energy = 0.531908 
diff Energy = 67.898083 
diff Energy = 139.763745 
Finish ICM step! 
iter = 7, loglik= 139118640.000000, dloglik=0.000628 
predict Y and V! 
diff Energy = 14.957420 
diff Energy = 40.875057 
diff Energy = 13.726026 
diff Energy = 85.477661 
diff Energy = 71.589726 
diff Energy = 5.157026 
diff Energy = 53.423504 
diff Energy = 102.169737 
diff Energy = 9.816610 
Finish ICM step! 
iter = 8, loglik= 139180352.000000, dloglik=0.000444 
predict Y and V! 
diff Energy = 7.019616 
diff Energy = 79.789340 
diff Energy = 5.042854 
diff Energy = 37.567686 
diff Energy = 27.462365 
diff Energy = 2.498710 
diff Energy = 63.227960 
diff Energy = 20.660707 
diff Energy = 26.277545 
diff Energy = 24.709909 
Finish ICM step! 
iter = 9, loglik= 139225920.000000, dloglik=0.000327 
predict Y and V! 
diff Energy = 8.000939 
diff Energy = 15.263183 
diff Energy = 9.487950 
diff Energy = 49.743068 
diff Energy = 10.872509 
diff Energy = 2.736094 
diff Energy = 31.677564 
diff Energy = 6.694437 
diff Energy = 15.205159 
Finish ICM step! 
iter = 10, loglik= 139259648.000000, dloglik=0.000242 
predict Y and V! 
diff Energy = 24.696552 
diff Energy = 2.636835 
diff Energy = 0.484217 
diff Energy = 21.747878 
diff Energy = 7.154809 
diff Energy = 2.518798 
diff Energy = 7.936264 
diff Energy = 50.654556 
diff Energy = 14.196215 
Finish ICM step! 
iter = 11, loglik= 139285568.000000, dloglik=0.000186 
predict Y and V! 
diff Energy = 8.853464 
diff Energy = 7.183664 
diff Energy = 3.481995 
diff Energy = 31.706837 
diff Energy = 5.660246 
diff Energy = 6.349127 
diff Energy = 8.813807 
diff Energy = 6.671444 
diff Energy = 37.295016 
Finish ICM step! 
iter = 12, loglik= 139306112.000000, dloglik=0.000147 
predict Y and V! 
diff Energy = 0.104476 
diff Energy = 0.989848 
diff Energy = 3.598805 
diff Energy = 74.245516 
diff Energy = 4.469768 
diff Energy = 1.307671 
diff Energy = 11.683874 
diff Energy = 27.357716 
diff Energy = 2.013260 
Finish ICM step! 
iter = 13, loglik= 139322528.000000, dloglik=0.000118 
predict Y and V! 
diff Energy = 3.439821 
diff Energy = 1.330884 
diff Energy = 0.072821 
diff Energy = 16.427615 
diff Energy = 7.823058 
diff Energy = 4.424026 
diff Energy = 9.900134 
diff Energy = 8.846233 
diff Energy = 35.957262 
Finish ICM step! 
iter = 14, loglik= 139336160.000000, dloglik=0.000098 
predict Y and V! 
diff Energy = 0.095947 
diff Energy = 0.828862 
diff Energy = 0.204590 
diff Energy = 30.141871 
diff Energy = 1.474474 
diff Energy = 14.397366 
diff Energy = 19.516421 
diff Energy = 1.255723 
Finish ICM step! 
iter = 15, loglik= 139347552.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 6.120712 
diff Energy = 3.257986 
diff Energy = 27.143465 
diff Energy = 11.171908 
diff Energy = 3.759095 
diff Energy = 0.654366 
diff Energy = 9.592325 
diff Energy = 0.680406 
diff Energy = 23.564468 
Finish ICM step! 
iter = 16, loglik= 139357104.000000, dloglik=0.000069 
predict Y and V! 
diff Energy = 1.305767 
diff Energy = 4.810617 
diff Energy = 5.720733 
diff Energy = 4.690240 
diff Energy = 12.969457 
diff Energy = 3.687835 
diff Energy = 1.343492 
diff Energy = 2.866962 
diff Energy = 82.818802 
diff Energy = 18.233382 
Finish ICM step! 
iter = 17, loglik= 139365504.000000, dloglik=0.000060 
predict Y and V! 
diff Energy = 1.908681 
diff Energy = 2.468589 
diff Energy = 44.639694 
diff Energy = 19.906048 
diff Energy = 6.209861 
diff Energy = 44.645767 
diff Energy = 6.986959 
Finish ICM step! 
iter = 18, loglik= 139373184.000000, dloglik=0.000055 
predict Y and V! 
diff Energy = 9.232070 
diff Energy = 2.173861 
diff Energy = 7.806158 
diff Energy = 16.239901 
diff Energy = 3.929656 
diff Energy = 15.353334 
diff Energy = 0.033703 
Finish ICM step! 
iter = 19, loglik= 139380080.000000, dloglik=0.000049 
predict Y and V! 
diff Energy = 11.085408 
diff Energy = 3.780602 
diff Energy = 0.417357 
diff Energy = 15.531385 
diff Energy = 0.672158 
diff Energy = 5.078118 
diff Energy = 10.750027 
diff Energy = 1.957689 
diff Energy = 6.797000 
Finish ICM step! 
iter = 20, loglik= 139386448.000000, dloglik=0.000046 
predict Y and V! 
diff Energy = 0.660686 
diff Energy = 1.324588 
diff Energy = 20.086982 
diff Energy = 3.119200 
diff Energy = 14.777099 
diff Energy = 18.954755 
diff Energy = 4.593730 
diff Energy = 10.246928 
Finish ICM step! 
iter = 21, loglik= 139393040.000000, dloglik=0.000047 
predict Y and V! 
diff Energy = 4.297270 
diff Energy = 12.157158 
diff Energy = 1.844651 
diff Energy = 4.758007 
diff Energy = 13.228740 
diff Energy = 8.766954 
diff Energy = 17.862031 
diff Energy = 4.840214 
diff Energy = 18.762106 
Finish ICM step! 
iter = 22, loglik= 139399536.000000, dloglik=0.000047 
predict Y and V! 
diff Energy = 2.985864 
diff Energy = 7.961422 
diff Energy = 17.900239 
diff Energy = 0.489652 
diff Energy = 9.278686 
diff Energy = 12.118619 
Finish ICM step! 
iter = 23, loglik= 139406400.000000, dloglik=0.000049 
predict Y and V! 
diff Energy = 4.096816 
diff Energy = 0.382795 
diff Energy = 0.547991 
diff Energy = 1.623451 
diff Energy = 1.553014 
diff Energy = 16.057741 
diff Energy = 41.561570 
diff Energy = 3.062778 
diff Energy = 6.028979 
diff Energy = 2.088748 
Finish ICM step! 
iter = 24, loglik= 139413648.000000, dloglik=0.000052 
predict Y and V! 
diff Energy = 2.268703 
diff Energy = 1.105180 
diff Energy = 5.455649 
diff Energy = 3.718052 
diff Energy = 8.357020 
diff Energy = 32.059470 
diff Energy = 4.600176 
diff Energy = 9.813536 
diff Energy = 2.175179 
diff Energy = 18.356161 
Finish ICM step! 
iter = 25, loglik= 139421744.000000, dloglik=0.000058 
predict Y and V! 
diff Energy = 8.723538 
diff Energy = 1.303653 
diff Energy = 1.615468 
diff Energy = 14.463626 
diff Energy = 31.304142 
diff Energy = 0.928854 
diff Energy = 11.198858 
diff Energy = 7.931602 
Finish ICM step! 
iter = 26, loglik= 139430112.000000, dloglik=0.000060 
predict Y and V! 
diff Energy = 1.596212 
diff Energy = 0.174237 
diff Energy = 7.182369 
diff Energy = 20.136103 
diff Energy = 3.373934 
diff Energy = 9.302319 
diff Energy = 10.601276 
diff Energy = 3.912812 
Finish ICM step! 
iter = 27, loglik= 139438864.000000, dloglik=0.000063 
predict Y and V! 
diff Energy = 1.944427 
diff Energy = 6.651852 
diff Energy = 11.442145 
diff Energy = 0.366034 
diff Energy = 4.153240 
diff Energy = 19.385579 
diff Energy = 0.494073 
diff Energy = 1.190809 
diff Energy = 8.314004 
diff Energy = 15.181404 
Finish ICM step! 
iter = 28, loglik= 139447616.000000, dloglik=0.000063 
predict Y and V! 
diff Energy = 1.411474 
diff Energy = 0.997544 
diff Energy = 2.262997 
diff Energy = 8.930412 
diff Energy = 2.524554 
diff Energy = 14.055715 
diff Energy = 7.688302 
diff Energy = 3.300189 
diff Energy = 15.465298 
diff Energy = 14.726318 
Finish ICM step! 
iter = 29, loglik= 139456704.000000, dloglik=0.000065 
predict Y and V! 
diff Energy = 1.924672 
diff Energy = 2.420248 
diff Energy = 1.116777 
diff Energy = 8.070995 
diff Energy = 8.116137 
diff Energy = 7.687562 
diff Energy = 3.335147 
diff Energy = 18.368183 
diff Energy = 2.098254 
Finish ICM step! 
iter = 30, loglik= 139465648.000000, dloglik=0.000064 
24237.089 sec elapsed
**** Job ends ****
Thu May  4 12:25:37 EDT 2023
