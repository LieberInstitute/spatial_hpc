**** Job starts ****
Tue Mar 21 19:53:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 24
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:41 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:53 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 24
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:56 EDT 2023
**** Job starts ****
Wed Mar 22 08:51:10 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 24
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79845272.000000, dloglik=0.962819 
predict Y and V! 
diff Energy = 9.156241 
diff Energy = 26.130888 
diff Energy = 9.399127 
diff Energy = 2.019975 
diff Energy = 61.006284 
diff Energy = 1.396901 
diff Energy = 26.303795 
diff Energy = 13.829456 
diff Energy = 23.059736 
Finish ICM step! 
iter = 3, loglik= -78788232.000000, dloglik=0.013239 
predict Y and V! 
diff Energy = 107.354788 
diff Energy = 144.822046 
diff Energy = 94.885429 
diff Energy = 46.476802 
diff Energy = 81.036932 
diff Energy = 100.427532 
diff Energy = 112.958843 
diff Energy = 63.568594 
diff Energy = 172.670027 
diff Energy = 98.604007 
Finish ICM step! 
iter = 4, loglik= -78439768.000000, dloglik=0.004423 
predict Y and V! 
diff Energy = 144.062068 
diff Energy = 140.872383 
diff Energy = 73.045327 
diff Energy = 46.907270 
diff Energy = 141.875928 
diff Energy = 60.385543 
diff Energy = 121.762612 
diff Energy = 33.950954 
diff Energy = 200.564178 
diff Energy = 53.506645 
Finish ICM step! 
iter = 5, loglik= -78266200.000000, dloglik=0.002213 
predict Y and V! 
diff Energy = 92.122356 
diff Energy = 111.221626 
diff Energy = 83.310103 
diff Energy = 66.835132 
diff Energy = 25.015324 
diff Energy = 17.224012 
diff Energy = 91.397687 
diff Energy = 18.212479 
diff Energy = 109.500296 
diff Energy = 48.902842 
Finish ICM step! 
iter = 6, loglik= -78157928.000000, dloglik=0.001383 
predict Y and V! 
diff Energy = 32.985513 
diff Energy = 24.564981 
diff Energy = 46.467491 
diff Energy = 3.829461 
diff Energy = 58.341190 
diff Energy = 86.487703 
diff Energy = 106.220293 
diff Energy = 4.506913 
diff Energy = 75.286123 
diff Energy = 77.227659 
Finish ICM step! 
iter = 7, loglik= -78082912.000000, dloglik=0.000960 
predict Y and V! 
diff Energy = 51.868574 
diff Energy = 109.248810 
diff Energy = 28.053514 
diff Energy = 18.874110 
diff Energy = 12.484993 
diff Energy = 20.142454 
diff Energy = 21.618173 
diff Energy = 124.896683 
diff Energy = 25.438335 
Finish ICM step! 
iter = 8, loglik= -78027800.000000, dloglik=0.000706 
predict Y and V! 
diff Energy = 41.809229 
diff Energy = 9.136948 
diff Energy = 17.022443 
diff Energy = 6.584973 
diff Energy = 2.843081 
diff Energy = 50.978817 
diff Energy = 27.993326 
diff Energy = 36.575208 
diff Energy = 85.635699 
diff Energy = 17.297422 
Finish ICM step! 
iter = 9, loglik= -77986232.000000, dloglik=0.000533 
predict Y and V! 
diff Energy = 78.291620 
diff Energy = 27.586936 
diff Energy = 27.330664 
diff Energy = 14.864174 
diff Energy = 70.049303 
diff Energy = 10.835789 
diff Energy = 6.451002 
diff Energy = 1.839023 
diff Energy = 31.038035 
diff Energy = 37.979430 
Finish ICM step! 
iter = 10, loglik= -77954960.000000, dloglik=0.000401 
predict Y and V! 
diff Energy = 22.407172 
diff Energy = 9.789582 
diff Energy = 19.053372 
diff Energy = 7.765086 
diff Energy = 7.732053 
diff Energy = 61.983680 
diff Energy = 16.052242 
diff Energy = 12.996122 
diff Energy = 10.863680 
diff Energy = 1.048268 
Finish ICM step! 
iter = 11, loglik= -77931456.000000, dloglik=0.000302 
predict Y and V! 
diff Energy = 20.909953 
diff Energy = 11.405509 
diff Energy = 12.781140 
diff Energy = 13.780168 
diff Energy = 4.788881 
diff Energy = 1.661915 
diff Energy = 1.543452 
diff Energy = 24.508052 
diff Energy = 109.983659 
diff Energy = 0.653474 
Finish ICM step! 
iter = 12, loglik= -77913240.000000, dloglik=0.000234 
predict Y and V! 
diff Energy = 13.082507 
diff Energy = 3.312728 
diff Energy = 42.576212 
diff Energy = 61.520416 
diff Energy = 19.425690 
diff Energy = 15.742128 
diff Energy = 66.489694 
diff Energy = 2.726211 
diff Energy = 10.661335 
diff Energy = 6.412269 
Finish ICM step! 
iter = 13, loglik= -77898808.000000, dloglik=0.000185 
predict Y and V! 
diff Energy = 8.045423 
diff Energy = 3.469704 
diff Energy = 17.634840 
diff Energy = 13.039888 
diff Energy = 2.969816 
diff Energy = 2.935218 
diff Energy = 11.443877 
diff Energy = 0.696618 
diff Energy = 30.894980 
diff Energy = 10.914015 
Finish ICM step! 
iter = 14, loglik= -77886496.000000, dloglik=0.000158 
predict Y and V! 
diff Energy = 7.886902 
diff Energy = 24.250534 
diff Energy = 17.956336 
diff Energy = 3.846643 
diff Energy = 12.696429 
diff Energy = 3.117252 
diff Energy = 6.379370 
diff Energy = 20.000500 
diff Energy = 9.291819 
Finish ICM step! 
iter = 15, loglik= -77876872.000000, dloglik=0.000124 
predict Y and V! 
diff Energy = 3.967604 
diff Energy = 37.091939 
diff Energy = 24.113528 
diff Energy = 0.540384 
diff Energy = 22.023859 
diff Energy = 3.612712 
diff Energy = 18.659542 
diff Energy = 6.693508 
diff Energy = 16.930298 
Finish ICM step! 
iter = 16, loglik= -77868248.000000, dloglik=0.000111 
predict Y and V! 
diff Energy = 4.602183 
diff Energy = 121.193888 
diff Energy = 6.950149 
diff Energy = 13.556160 
diff Energy = 3.542310 
diff Energy = 21.699368 
diff Energy = 13.488277 
diff Energy = 2.759922 
diff Energy = 17.285342 
Finish ICM step! 
iter = 17, loglik= -77861016.000000, dloglik=0.000093 
predict Y and V! 
diff Energy = 12.606111 
diff Energy = 21.566784 
diff Energy = 7.594743 
diff Energy = 5.129394 
diff Energy = 27.603068 
diff Energy = 4.606212 
diff Energy = 2.668795 
diff Energy = 13.130667 
diff Energy = 24.957409 
diff Energy = 1.114786 
Finish ICM step! 
iter = 18, loglik= -77854496.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 5.954643 
diff Energy = 14.103023 
diff Energy = 2.149045 
diff Energy = 12.985242 
diff Energy = 19.892118 
diff Energy = 6.649507 
diff Energy = 3.444777 
diff Energy = 4.912377 
diff Energy = 25.003215 
diff Energy = 2.357291 
Finish ICM step! 
iter = 19, loglik= -77848488.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 10.574442 
diff Energy = 6.644066 
diff Energy = 21.933791 
diff Energy = 7.084368 
diff Energy = 23.225581 
diff Energy = 0.901978 
diff Energy = 12.479173 
diff Energy = 24.589966 
Finish ICM step! 
iter = 20, loglik= -77842880.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 2.561999 
diff Energy = 26.371414 
diff Energy = 3.282476 
diff Energy = 10.638994 
diff Energy = 21.020909 
diff Energy = 19.804526 
diff Energy = 9.446837 
diff Energy = 4.981806 
diff Energy = 18.840697 
diff Energy = 7.233095 
Finish ICM step! 
iter = 21, loglik= -77837296.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 7.945352 
diff Energy = 29.010410 
diff Energy = 16.115331 
diff Energy = 9.675524 
diff Energy = 11.274440 
diff Energy = 13.716728 
diff Energy = 4.209123 
diff Energy = 14.417242 
diff Energy = 31.394359 
diff Energy = 4.422085 
Finish ICM step! 
iter = 22, loglik= -77831400.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 11.957355 
diff Energy = 23.602247 
diff Energy = 5.652478 
diff Energy = 1.169296 
diff Energy = 9.672236 
diff Energy = 16.370858 
diff Energy = 12.853666 
diff Energy = 14.704016 
diff Energy = 5.976505 
diff Energy = 82.055918 
Finish ICM step! 
iter = 23, loglik= -77824696.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 5.146827 
diff Energy = 23.786367 
diff Energy = 13.564359 
diff Energy = 0.969895 
diff Energy = 7.629951 
diff Energy = 10.314029 
diff Energy = 8.548524 
diff Energy = 2.812469 
diff Energy = 2.800671 
diff Energy = 0.933767 
Finish ICM step! 
iter = 24, loglik= -77817456.000000, dloglik=0.000093 
predict Y and V! 
diff Energy = 7.691307 
diff Energy = 6.105954 
diff Energy = 1.722668 
diff Energy = 1.122042 
diff Energy = 1.408488 
diff Energy = 27.970747 
diff Energy = 1.021143 
diff Energy = 8.820786 
diff Energy = 36.551788 
Finish ICM step! 
iter = 25, loglik= -77809464.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 3.599114 
diff Energy = 1.914711 
diff Energy = 10.012227 
diff Energy = 8.376932 
diff Energy = 11.080677 
diff Energy = 9.547338 
diff Energy = 2.838474 
diff Energy = 18.002769 
diff Energy = 6.803064 
Finish ICM step! 
iter = 26, loglik= -77801136.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 70.415772 
diff Energy = 12.851542 
diff Energy = 12.511607 
diff Energy = 0.489902 
diff Energy = 3.425798 
diff Energy = 2.903703 
diff Energy = 1.113595 
diff Energy = 31.063344 
diff Energy = 15.459972 
Finish ICM step! 
iter = 27, loglik= -77792720.000000, dloglik=0.000108 
predict Y and V! 
diff Energy = 5.100091 
diff Energy = 9.151805 
diff Energy = 9.822017 
diff Energy = 0.235823 
diff Energy = 2.562047 
diff Energy = 6.579356 
diff Energy = 6.355166 
diff Energy = 2.588135 
diff Energy = 39.080401 
diff Energy = 24.523960 
Finish ICM step! 
iter = 28, loglik= -77784184.000000, dloglik=0.000110 
predict Y and V! 
diff Energy = 1.727991 
diff Energy = 3.433712 
diff Energy = 10.231174 
diff Energy = 1.860245 
diff Energy = 0.718258 
diff Energy = 3.531593 
diff Energy = 10.240979 
diff Energy = 7.508806 
diff Energy = 6.801678 
diff Energy = 0.965971 
Finish ICM step! 
iter = 29, loglik= -77775440.000000, dloglik=0.000112 
predict Y and V! 
diff Energy = 0.307376 
diff Energy = 3.888524 
diff Energy = 17.470041 
diff Energy = 1.853145 
diff Energy = 1.241714 
diff Energy = 17.757510 
diff Energy = 2.123066 
diff Energy = 21.201122 
diff Energy = 16.795455 
Finish ICM step! 
iter = 30, loglik= -77766336.000000, dloglik=0.000117 
27696.745 sec elapsed
**** Job ends ****
Wed Mar 22 16:43:09 EDT 2023
