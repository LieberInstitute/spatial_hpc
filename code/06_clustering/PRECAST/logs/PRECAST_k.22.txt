**** Job starts ****
Tue Mar 21 19:53:23 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 22
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:26 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 22
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:40 EDT 2023
**** Job starts ****
Wed Mar 22 06:21:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 22
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79847168.000000, dloglik=0.962818 
predict Y and V! 
diff Energy = 30.974036 
diff Energy = 43.019492 
diff Energy = 4.700531 
diff Energy = 60.917825 
diff Energy = 24.888376 
diff Energy = 4.793971 
diff Energy = 16.922629 
diff Energy = 16.972066 
Finish ICM step! 
iter = 3, loglik= -78791832.000000, dloglik=0.013217 
predict Y and V! 
diff Energy = 87.034407 
diff Energy = 152.851419 
diff Energy = 46.894055 
diff Energy = 74.127942 
diff Energy = 53.765430 
diff Energy = 80.107918 
diff Energy = 165.172600 
diff Energy = 51.826285 
diff Energy = 188.741872 
diff Energy = 121.650323 
Finish ICM step! 
iter = 4, loglik= -78448896.000000, dloglik=0.004352 
predict Y and V! 
diff Energy = 164.771345 
diff Energy = 151.099423 
diff Energy = 31.295759 
diff Energy = 82.221796 
diff Energy = 99.387145 
diff Energy = 64.179880 
diff Energy = 88.784958 
diff Energy = 14.052927 
diff Energy = 236.887798 
diff Energy = 125.650903 
Finish ICM step! 
iter = 5, loglik= -78271352.000000, dloglik=0.002263 
predict Y and V! 
diff Energy = 106.670625 
diff Energy = 71.489606 
diff Energy = 35.221474 
diff Energy = 53.931517 
diff Energy = 53.555457 
diff Energy = 82.927967 
diff Energy = 121.066384 
diff Energy = 36.743311 
diff Energy = 152.404793 
diff Energy = 149.927332 
Finish ICM step! 
iter = 6, loglik= -78160480.000000, dloglik=0.001417 
predict Y and V! 
diff Energy = 77.846589 
diff Energy = 45.190961 
diff Energy = 3.721825 
diff Energy = 39.458699 
diff Energy = 0.966853 
diff Energy = 63.584398 
diff Energy = 122.029169 
diff Energy = 27.652211 
diff Energy = 155.221946 
diff Energy = 51.493511 
Finish ICM step! 
iter = 7, loglik= -78083856.000000, dloglik=0.000980 
predict Y and V! 
diff Energy = 103.248088 
diff Energy = 61.151719 
diff Energy = 4.556816 
diff Energy = 33.877502 
diff Energy = 3.698768 
diff Energy = 39.054872 
diff Energy = 1.773864 
diff Energy = 31.907645 
diff Energy = 77.243871 
diff Energy = 51.238781 
Finish ICM step! 
iter = 8, loglik= -78027712.000000, dloglik=0.000719 
predict Y and V! 
diff Energy = 42.632007 
diff Energy = 9.040166 
diff Energy = 7.684119 
diff Energy = 10.514418 
diff Energy = 27.012075 
diff Energy = 97.215969 
diff Energy = 9.153359 
diff Energy = 28.936374 
diff Energy = 66.225469 
diff Energy = 94.748987 
Finish ICM step! 
iter = 9, loglik= -77986016.000000, dloglik=0.000534 
predict Y and V! 
diff Energy = 35.922204 
diff Energy = 8.960223 
diff Energy = 33.211288 
diff Energy = 33.604817 
diff Energy = 23.267220 
diff Energy = 4.064269 
diff Energy = 55.379046 
diff Energy = 74.997287 
diff Energy = 27.159956 
Finish ICM step! 
iter = 10, loglik= -77954592.000000, dloglik=0.000403 
predict Y and V! 
diff Energy = 36.783390 
diff Energy = 35.463887 
diff Energy = 29.543232 
diff Energy = 14.531583 
diff Energy = 10.680955 
diff Energy = 0.277849 
diff Energy = 29.320119 
diff Energy = 18.687738 
diff Energy = 11.165664 
diff Energy = 4.110418 
Finish ICM step! 
iter = 11, loglik= -77930928.000000, dloglik=0.000304 
predict Y and V! 
diff Energy = 4.987535 
diff Energy = 4.860104 
diff Energy = 7.384839 
diff Energy = 17.992502 
diff Energy = 18.024659 
diff Energy = 13.172551 
diff Energy = 17.970490 
diff Energy = 2.190943 
diff Energy = 32.299829 
diff Energy = 25.905155 
Finish ICM step! 
iter = 12, loglik= -77912712.000000, dloglik=0.000234 
predict Y and V! 
diff Energy = 21.662282 
diff Energy = 3.518324 
diff Energy = 36.280290 
diff Energy = 5.949211 
diff Energy = 28.064334 
diff Energy = 0.405878 
diff Energy = 29.541733 
diff Energy = 14.022752 
diff Energy = 7.642787 
Finish ICM step! 
iter = 13, loglik= -77898136.000000, dloglik=0.000187 
predict Y and V! 
diff Energy = 6.028579 
diff Energy = 15.438512 
diff Energy = 9.606483 
diff Energy = 10.914475 
diff Energy = 1.850436 
diff Energy = 3.948698 
diff Energy = 47.999631 
diff Energy = 1.719367 
diff Energy = 18.976064 
diff Energy = 40.324950 
Finish ICM step! 
iter = 14, loglik= -77886336.000000, dloglik=0.000151 
predict Y and V! 
diff Energy = 7.868518 
diff Energy = 7.618791 
diff Energy = 9.763028 
diff Energy = 4.591859 
diff Energy = 3.241671 
diff Energy = 1.409801 
diff Energy = 15.157751 
diff Energy = 5.878388 
diff Energy = 51.027493 
diff Energy = 9.788886 
Finish ICM step! 
iter = 15, loglik= -77876712.000000, dloglik=0.000124 
predict Y and V! 
diff Energy = 11.643737 
diff Energy = 21.697358 
diff Energy = 17.163214 
diff Energy = 4.435202 
diff Energy = 18.730115 
diff Energy = 22.846098 
diff Energy = 13.669195 
diff Energy = 8.589029 
Finish ICM step! 
iter = 16, loglik= -77868200.000000, dloglik=0.000109 
predict Y and V! 
diff Energy = 5.709761 
diff Energy = 9.812538 
diff Energy = 19.920882 
diff Energy = 5.679562 
diff Energy = 0.931069 
diff Energy = 13.665581 
diff Energy = 3.117110 
diff Energy = 16.341343 
diff Energy = 48.956199 
Finish ICM step! 
iter = 17, loglik= -77861104.000000, dloglik=0.000091 
predict Y and V! 
diff Energy = 7.925552 
diff Energy = 4.750004 
diff Energy = 8.327698 
diff Energy = 2.655088 
diff Energy = 1.219605 
diff Energy = 2.054397 
diff Energy = 16.188066 
diff Energy = 15.510761 
diff Energy = 33.677097 
Finish ICM step! 
iter = 18, loglik= -77854544.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 46.835741 
diff Energy = 0.470021 
diff Energy = 16.365076 
diff Energy = 5.022068 
diff Energy = 25.767496 
diff Energy = 7.980907 
diff Energy = 3.687906 
diff Energy = 6.807181 
diff Energy = 31.082502 
diff Energy = 19.136121 
Finish ICM step! 
iter = 19, loglik= -77848616.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 5.449598 
diff Energy = 8.853338 
diff Energy = 34.939737 
diff Energy = 6.096013 
diff Energy = 6.391241 
diff Energy = 2.513349 
diff Energy = 3.416513 
diff Energy = 0.801700 
diff Energy = 25.414876 
diff Energy = 17.946234 
Finish ICM step! 
iter = 20, loglik= -77842792.000000, dloglik=0.000075 
predict Y and V! 
diff Energy = 21.672817 
diff Energy = 2.569310 
diff Energy = 19.758276 
diff Energy = 9.864585 
diff Energy = 9.908635 
diff Energy = 22.325164 
diff Energy = 7.887966 
diff Energy = 3.770031 
diff Energy = 33.211768 
diff Energy = 11.876902 
Finish ICM step! 
iter = 21, loglik= -77837352.000000, dloglik=0.000070 
predict Y and V! 
diff Energy = 7.196125 
diff Energy = 2.261184 
diff Energy = 15.777384 
diff Energy = 11.241884 
diff Energy = 13.409435 
diff Energy = 3.894178 
diff Energy = 15.258592 
diff Energy = 17.778292 
diff Energy = 42.140802 
diff Energy = 29.815506 
Finish ICM step! 
iter = 22, loglik= -77831784.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 8.752502 
diff Energy = 12.148202 
diff Energy = 16.227831 
diff Energy = 40.254898 
diff Energy = 0.955664 
diff Energy = 24.437474 
diff Energy = 5.135686 
diff Energy = 16.248344 
diff Energy = 19.353650 
Finish ICM step! 
iter = 23, loglik= -77825752.000000, dloglik=0.000078 
predict Y and V! 
diff Energy = 5.592143 
diff Energy = 0.361537 
diff Energy = 15.600356 
diff Energy = 12.339223 
diff Energy = 18.383633 
diff Energy = 12.162230 
diff Energy = 1.918576 
diff Energy = 6.281372 
diff Energy = 19.896967 
Finish ICM step! 
iter = 24, loglik= -77818752.000000, dloglik=0.000090 
predict Y and V! 
diff Energy = 3.391927 
diff Energy = 4.291817 
diff Energy = 15.124031 
diff Energy = 6.264196 
diff Energy = 6.854674 
diff Energy = 100.313126 
diff Energy = 1.737089 
diff Energy = 13.391121 
diff Energy = 8.907204 
diff Energy = 44.824255 
Finish ICM step! 
iter = 25, loglik= -77811112.000000, dloglik=0.000098 
predict Y and V! 
diff Energy = 3.389649 
diff Energy = 9.657769 
diff Energy = 20.727350 
diff Energy = 64.785022 
diff Energy = 2.271278 
diff Energy = 0.062132 
diff Energy = 12.639711 
diff Energy = 7.542606 
diff Energy = 6.801968 
diff Energy = 19.282637 
Finish ICM step! 
iter = 26, loglik= -77802768.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 15.527320 
diff Energy = 1.046467 
diff Energy = 6.766710 
diff Energy = 3.849976 
diff Energy = 1.503371 
diff Energy = 1.358864 
diff Energy = 21.489663 
diff Energy = 23.924462 
Finish ICM step! 
iter = 27, loglik= -77794032.000000, dloglik=0.000112 
predict Y and V! 
diff Energy = 1.375292 
diff Energy = 8.152016 
diff Energy = 3.349155 
diff Energy = 7.654106 
diff Energy = 2.483012 
diff Energy = 12.783207 
diff Energy = 9.112280 
diff Energy = 98.366192 
diff Energy = 11.265112 
Finish ICM step! 
iter = 28, loglik= -77785072.000000, dloglik=0.000115 
predict Y and V! 
diff Energy = 7.520401 
diff Energy = 2.634654 
diff Energy = 23.045799 
diff Energy = 4.154048 
diff Energy = 3.727619 
diff Energy = 1.355581 
diff Energy = 3.105989 
diff Energy = 18.567220 
diff Energy = 21.815483 
diff Energy = 25.572678 
Finish ICM step! 
iter = 29, loglik= -77775824.000000, dloglik=0.000119 
predict Y and V! 
diff Energy = 1.308554 
diff Energy = 10.259561 
diff Energy = 3.503963 
diff Energy = 10.173555 
diff Energy = 2.548919 
diff Energy = 0.632277 
diff Energy = 0.052091 
diff Energy = 12.940993 
diff Energy = 27.028490 
Finish ICM step! 
iter = 30, loglik= -77766512.000000, dloglik=0.000120 
34574.377 sec elapsed
**** Job ends ****
Wed Mar 22 16:09:43 EDT 2023
