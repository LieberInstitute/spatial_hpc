**** Job starts ****
Tue Mar 21 19:53:23 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 22
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:26 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 22
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:40 EDT 2023
**** Job starts ****
Wed Mar 22 06:21:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 22
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79847168.000000, dloglik=0.962818 
predict Y and V! 
diff Energy = 30.974036 
diff Energy = 43.019492 
diff Energy = 4.700531 
diff Energy = 60.917825 
diff Energy = 24.888376 
diff Energy = 4.793971 
diff Energy = 16.922629 
diff Energy = 16.972066 
Finish ICM step! 
iter = 3, loglik= -78791832.000000, dloglik=0.013217 
predict Y and V! 
diff Energy = 87.034407 
diff Energy = 152.851419 
diff Energy = 46.894055 
diff Energy = 74.127942 
diff Energy = 53.765430 
diff Energy = 80.107918 
diff Energy = 165.172600 
diff Energy = 51.826285 
diff Energy = 188.741872 
diff Energy = 121.650323 
Finish ICM step! 
iter = 4, loglik= -78448896.000000, dloglik=0.004352 
predict Y and V! 
diff Energy = 164.771345 
diff Energy = 151.099423 
diff Energy = 31.295759 
diff Energy = 82.221796 
diff Energy = 99.387145 
diff Energy = 64.179880 
diff Energy = 88.784958 
diff Energy = 14.052927 
diff Energy = 236.887798 
diff Energy = 125.650903 
Finish ICM step! 
iter = 5, loglik= -78271352.000000, dloglik=0.002263 
predict Y and V! 
diff Energy = 106.670625 
diff Energy = 71.489606 
diff Energy = 35.221474 
diff Energy = 53.931517 
diff Energy = 53.555457 
diff Energy = 82.927967 
diff Energy = 121.066384 
diff Energy = 36.743311 
diff Energy = 152.404793 
diff Energy = 149.927332 
Finish ICM step! 
iter = 6, loglik= -78160480.000000, dloglik=0.001417 
predict Y and V! 
diff Energy = 77.846589 
diff Energy = 45.190961 
diff Energy = 3.721825 
diff Energy = 39.458699 
diff Energy = 0.966853 
diff Energy = 63.584398 
diff Energy = 122.029169 
diff Energy = 27.652211 
diff Energy = 155.221946 
diff Energy = 51.493511 
Finish ICM step! 
iter = 7, loglik= -78083856.000000, dloglik=0.000980 
predict Y and V! 
diff Energy = 103.248088 
diff Energy = 61.151719 
diff Energy = 4.556816 
diff Energy = 33.877502 
diff Energy = 3.698768 
diff Energy = 39.054872 
diff Energy = 1.773864 
diff Energy = 31.907645 
diff Energy = 77.243871 
diff Energy = 51.238781 
Finish ICM step! 
iter = 8, loglik= -78027712.000000, dloglik=0.000719 
predict Y and V! 
diff Energy = 42.632007 
diff Energy = 9.040166 
diff Energy = 7.684119 
diff Energy = 10.514418 
diff Energy = 27.012075 
diff Energy = 97.215969 
diff Energy = 9.153359 
diff Energy = 28.936374 
diff Energy = 66.225469 
diff Energy = 94.748987 
Finish ICM step! 
iter = 9, loglik= -77986016.000000, dloglik=0.000534 
predict Y and V! 
diff Energy = 35.922204 
diff Energy = 8.960223 
diff Energy = 33.211288 
diff Energy = 33.604817 
diff Energy = 23.267220 
diff Energy = 4.064269 
diff Energy = 55.379046 
diff Energy = 74.997287 
diff Energy = 27.159956 
Finish ICM step! 
iter = 10, loglik= -77954592.000000, dloglik=0.000403 
predict Y and V! 
diff Energy = 36.783390 
diff Energy = 35.463887 
diff Energy = 29.543232 
diff Energy = 14.531583 
diff Energy = 10.680955 
diff Energy = 0.277849 
diff Energy = 29.320119 
diff Energy = 18.687738 
diff Energy = 11.165664 
diff Energy = 4.110418 
Finish ICM step! 
iter = 11, loglik= -77930928.000000, dloglik=0.000304 
predict Y and V! 
diff Energy = 4.987535 
diff Energy = 4.860104 
diff Energy = 7.384839 
diff Energy = 17.992502 
diff Energy = 18.024659 
diff Energy = 13.172551 
diff Energy = 17.970490 
diff Energy = 2.190943 
diff Energy = 32.299829 
diff Energy = 25.905155 
Finish ICM step! 
iter = 12, loglik= -77912712.000000, dloglik=0.000234 
predict Y and V! 
diff Energy = 21.662282 
diff Energy = 3.518324 
diff Energy = 36.280290 
diff Energy = 5.949211 
diff Energy = 28.064334 
diff Energy = 0.405878 
diff Energy = 29.541733 
diff Energy = 14.022752 
diff Energy = 7.642787 
Finish ICM step! 
iter = 13, loglik= -77898136.000000, dloglik=0.000187 
predict Y and V! 
diff Energy = 6.028579 
diff Energy = 15.438512 
diff Energy = 9.606483 
diff Energy = 10.914475 
diff Energy = 1.850436 
diff Energy = 3.948698 
diff Energy = 47.999631 
diff Energy = 1.719367 
diff Energy = 18.976064 
diff Energy = 40.324950 
Finish ICM step! 
iter = 14, loglik= -77886336.000000, dloglik=0.000151 
predict Y and V! 
diff Energy = 7.868518 
diff Energy = 7.618791 
diff Energy = 9.763028 
diff Energy = 4.591859 
diff Energy = 3.241671 
diff Energy = 1.409801 
diff Energy = 15.157751 
diff Energy = 5.878388 
diff Energy = 51.027493 
diff Energy = 9.788886 
Finish ICM step! 
iter = 15, loglik= -77876712.000000, dloglik=0.000124 
predict Y and V! 
diff Energy = 11.643737 
diff Energy = 21.697358 
diff Energy = 17.163214 
diff Energy = 4.435202 
diff Energy = 18.730115 
diff Energy = 22.846098 
diff Energy = 13.669195 
diff Energy = 8.589029 
Finish ICM step! 
iter = 16, loglik= -77868200.000000, dloglik=0.000109 
predict Y and V! 
diff Energy = 5.709761 
diff Energy = 9.812538 
diff Energy = 19.920882 
diff Energy = 5.679562 
diff Energy = 0.931069 
diff Energy = 13.665581 
diff Energy = 3.117110 
diff Energy = 16.341343 
diff Energy = 48.956199 
Finish ICM step! 
iter = 17, loglik= -77861104.000000, dloglik=0.000091 
predict Y and V! 
diff Energy = 7.925552 
diff Energy = 4.750004 
diff Energy = 8.327698 
diff Energy = 2.655088 
diff Energy = 1.219605 
diff Energy = 2.054397 
diff Energy = 16.188066 
diff Energy = 15.510761 
diff Energy = 33.677097 
Finish ICM step! 
iter = 18, loglik= -77854544.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 46.835741 
diff Energy = 0.470021 
diff Energy = 16.365076 
diff Energy = 5.022068 
diff Energy = 25.767496 
diff Energy = 7.980907 
diff Energy = 3.687906 
diff Energy = 6.807181 
diff Energy = 31.082502 
diff Energy = 19.136121 
Finish ICM step! 
iter = 19, loglik= -77848616.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 5.449598 
diff Energy = 8.853338 
diff Energy = 34.939737 
diff Energy = 6.096013 
diff Energy = 6.391241 
diff Energy = 2.513349 
diff Energy = 3.416513 
diff Energy = 0.801700 
diff Energy = 25.414876 
diff Energy = 17.946234 
Finish ICM step! 
iter = 20, loglik= -77842792.000000, dloglik=0.000075 
predict Y and V! 
diff Energy = 21.672817 
diff Energy = 2.569310 
diff Energy = 19.758276 
diff Energy = 9.864585 
diff Energy = 9.908635 
diff Energy = 22.325164 
diff Energy = 7.887966 
diff Energy = 3.770031 
diff Energy = 33.211768 
diff Energy = 11.876902 
Finish ICM step! 
iter = 21, loglik= -77837352.000000, dloglik=0.000070 
predict Y and V! 
diff Energy = 7.196125 
diff Energy = 2.261184 
diff Energy = 15.777384 
diff Energy = 11.241884 
diff Energy = 13.409435 
diff Energy = 3.894178 
diff Energy = 15.258592 
diff Energy = 17.778292 
diff Energy = 42.140802 
diff Energy = 29.815506 
Finish ICM step! 
iter = 22, loglik= -77831784.000000, dloglik=0.000072 
predict Y and V! 
diff Energy = 8.752502 
diff Energy = 12.148202 
diff Energy = 16.227831 
diff Energy = 40.254898 
diff Energy = 0.955664 
diff Energy = 24.437474 
diff Energy = 5.135686 
diff Energy = 16.248344 
diff Energy = 19.353650 
Finish ICM step! 
iter = 23, loglik= -77825752.000000, dloglik=0.000078 
predict Y and V! 
diff Energy = 5.592143 
diff Energy = 0.361537 
diff Energy = 15.600356 
diff Energy = 12.339223 
diff Energy = 18.383633 
diff Energy = 12.162230 
diff Energy = 1.918576 
diff Energy = 6.281372 
diff Energy = 19.896967 
Finish ICM step! 
iter = 24, loglik= -77818752.000000, dloglik=0.000090 
predict Y and V! 
diff Energy = 3.391927 
diff Energy = 4.291817 
diff Energy = 15.124031 
diff Energy = 6.264196 
diff Energy = 6.854674 
diff Energy = 100.313126 
diff Energy = 1.737089 
diff Energy = 13.391121 
diff Energy = 8.907204 
diff Energy = 44.824255 
Finish ICM step! 
iter = 25, loglik= -77811112.000000, dloglik=0.000098 
predict Y and V! 
diff Energy = 3.389649 
diff Energy = 9.657769 
diff Energy = 20.727350 
diff Energy = 64.785022 
diff Energy = 2.271278 
diff Energy = 0.062132 
diff Energy = 12.639711 
diff Energy = 7.542606 
diff Energy = 6.801968 
diff Energy = 19.282637 
Finish ICM step! 
iter = 26, loglik= -77802768.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 15.527320 
diff Energy = 1.046467 
diff Energy = 6.766710 
diff Energy = 3.849976 
diff Energy = 1.503371 
diff Energy = 1.358864 
diff Energy = 21.489663 
diff Energy = 23.924462 
Finish ICM step! 
iter = 27, loglik= -77794032.000000, dloglik=0.000112 
predict Y and V! 
diff Energy = 1.375292 
diff Energy = 8.152016 
diff Energy = 3.349155 
diff Energy = 7.654106 
diff Energy = 2.483012 
diff Energy = 12.783207 
diff Energy = 9.112280 
diff Energy = 98.366192 
diff Energy = 11.265112 
Finish ICM step! 
iter = 28, loglik= -77785072.000000, dloglik=0.000115 
predict Y and V! 
diff Energy = 7.520401 
diff Energy = 2.634654 
diff Energy = 23.045799 
diff Energy = 4.154048 
diff Energy = 3.727619 
diff Energy = 1.355581 
diff Energy = 3.105989 
diff Energy = 18.567220 
diff Energy = 21.815483 
diff Energy = 25.572678 
Finish ICM step! 
iter = 29, loglik= -77775824.000000, dloglik=0.000119 
predict Y and V! 
diff Energy = 1.308554 
diff Energy = 10.259561 
diff Energy = 3.503963 
diff Energy = 10.173555 
diff Energy = 2.548919 
diff Energy = 0.632277 
diff Energy = 0.052091 
diff Energy = 12.940993 
diff Energy = 27.028490 
Finish ICM step! 
iter = 30, loglik= -77766512.000000, dloglik=0.000120 
34574.377 sec elapsed
**** Job ends ****
Wed Mar 22 16:09:43 EDT 2023
**** Job starts ****
Thu Mar 30 11:18:40 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3084530
Job name: PRECAST_k16-25
Hostname: compute-098.cm.cluster
Task id: 22
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 7569
## number of total genes: 23689
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8089
## number of total genes: 24208
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 16334
## number of total genes: 25336
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14105
## number of total genes: 26447
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 24039
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 6071
## number of total genes: 23183
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 9895
## number of total genes: 24035
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 17222
## number of total genes: 26256
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15785
## number of total genes: 25978
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 12039
## number of total genes: 24495
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 13970
## number of total genes: 24879
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
There were 24 warnings (use warnings() to see them)
[[1]]
An object of class Seurat 
2000 features across 7538 samples within 1 assay 
Active assay: RNA (2000 features, 467 variable features)

[[2]]
An object of class Seurat 
2000 features across 8079 samples within 1 assay 
Active assay: RNA (2000 features, 458 variable features)

[[3]]
An object of class Seurat 
2000 features across 16022 samples within 1 assay 
Active assay: RNA (2000 features, 459 variable features)

[[4]]
An object of class Seurat 
2000 features across 14065 samples within 1 assay 
Active assay: RNA (2000 features, 449 variable features)

[[5]]
An object of class Seurat 
2000 features across 8637 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[6]]
An object of class Seurat 
2000 features across 5952 samples within 1 assay 
Active assay: RNA (2000 features, 453 variable features)

[[7]]
An object of class Seurat 
2000 features across 9490 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[8]]
An object of class Seurat 
2000 features across 16998 samples within 1 assay 
Active assay: RNA (2000 features, 457 variable features)

[[9]]
An object of class Seurat 
2000 features across 15390 samples within 1 assay 
Active assay: RNA (2000 features, 420 variable features)

[[10]]
An object of class Seurat 
2000 features across 11862 samples within 1 assay 
Active assay: RNA (2000 features, 461 variable features)

[[11]]
An object of class Seurat 
2000 features across 13539 samples within 1 assay 
Active assay: RNA (2000 features, 444 variable features)

Neighbors were identified for 7538 out of 7538 spots.
Neighbors were identified for 8079 out of 8079 spots.
Neighbors were identified for 16022 out of 16022 spots.
Neighbors were identified for 14065 out of 14065 spots.
Neighbors were identified for 8637 out of 8637 spots.
Neighbors were identified for 5951 out of 5952 spots.
Neighbors were identified for 9489 out of 9490 spots.
Neighbors were identified for 16998 out of 16998 spots.
Neighbors were identified for 15390 out of 15390 spots.
Neighbors were identified for 11862 out of 11862 spots.
Neighbors were identified for 13539 out of 13539 spots.
Intergrative data info.: 11 samples, 2000 genes X 127572 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 392.480402 
diff Energy = 189.966831 
diff Energy = 34.732186 
diff Energy = 376.448921 
diff Energy = 228.994352 
diff Energy = 237.028468 
Finish ICM step! 
iter = 2, loglik= 75894824.000000, dloglik=1.035341 
predict Y and V! 
diff Energy = 132.518761 
diff Energy = 48.781810 
diff Energy = 72.241722 
diff Energy = 16.038152 
diff Energy = 15.551920 
diff Energy = 106.066038 
diff Energy = 20.196095 
diff Energy = 23.524160 
diff Energy = 106.331449 
Finish ICM step! 
iter = 3, loglik= 76349664.000000, dloglik=0.005993 
predict Y and V! 
diff Energy = 103.338155 
diff Energy = 76.840833 
diff Energy = 18.071633 
diff Energy = 228.980766 
diff Energy = 88.975351 
diff Energy = 22.782995 
diff Energy = 3.011161 
diff Energy = 246.851694 
diff Energy = 61.926321 
diff Energy = 49.612854 
diff Energy = 87.189845 
Finish ICM step! 
iter = 4, loglik= 76472400.000000, dloglik=0.001608 
predict Y and V! 
diff Energy = 52.523999 
diff Energy = 65.002311 
diff Energy = 22.355104 
diff Energy = 55.131057 
diff Energy = 79.171642 
diff Energy = 11.373142 
diff Energy = 8.305078 
diff Energy = 162.903521 
diff Energy = 57.687975 
diff Energy = 44.255178 
diff Energy = 27.624535 
Finish ICM step! 
iter = 5, loglik= 76532376.000000, dloglik=0.000784 
predict Y and V! 
diff Energy = 45.504472 
diff Energy = 69.413759 
diff Energy = 12.700413 
diff Energy = 10.859338 
diff Energy = 80.534105 
diff Energy = 5.480302 
diff Energy = 48.516810 
diff Energy = 88.491705 
diff Energy = 18.119193 
diff Energy = 8.574084 
diff Energy = 3.357570 
Finish ICM step! 
iter = 6, loglik= 76571392.000000, dloglik=0.000510 
predict Y and V! 
diff Energy = 27.049045 
diff Energy = 69.860749 
diff Energy = 1.937242 
diff Energy = 22.549308 
diff Energy = 44.007020 
diff Energy = 6.428377 
diff Energy = 12.221538 
diff Energy = 46.260855 
diff Energy = 17.623150 
diff Energy = 70.446208 
diff Energy = 11.234150 
Finish ICM step! 
iter = 7, loglik= 76601232.000000, dloglik=0.000390 
predict Y and V! 
diff Energy = 5.898044 
diff Energy = 46.195605 
diff Energy = 18.784438 
diff Energy = 40.381369 
diff Energy = 21.124205 
diff Energy = 6.373015 
diff Energy = 7.953808 
diff Energy = 3.353935 
diff Energy = 21.907506 
diff Energy = 25.100169 
diff Energy = 7.750765 
Finish ICM step! 
iter = 8, loglik= 76625840.000000, dloglik=0.000321 
predict Y and V! 
diff Energy = 17.868701 
diff Energy = 37.944256 
diff Energy = 6.357294 
diff Energy = 159.429783 
diff Energy = 32.062439 
diff Energy = 15.401053 
diff Energy = 6.151936 
diff Energy = 13.052285 
diff Energy = 13.114116 
diff Energy = 7.197376 
Finish ICM step! 
iter = 9, loglik= 76648336.000000, dloglik=0.000294 
predict Y and V! 
diff Energy = 20.429526 
diff Energy = 28.756680 
diff Energy = 6.677717 
diff Energy = 66.778645 
diff Energy = 17.560776 
diff Energy = 6.923605 
diff Energy = 10.386740 
Finish ICM step! 
iter = 10, loglik= 76670136.000000, dloglik=0.000284 
predict Y and V! 
diff Energy = 30.561584 
diff Energy = 18.155720 
diff Energy = 11.331802 
diff Energy = 32.090053 
diff Energy = 7.635388 
diff Energy = 0.081285 
diff Energy = 14.551903 
diff Energy = 12.228525 
diff Energy = 9.864798 
Finish ICM step! 
iter = 11, loglik= 76692392.000000, dloglik=0.000290 
predict Y and V! 
diff Energy = 25.194976 
diff Energy = 36.832320 
diff Energy = 9.291160 
diff Energy = 57.593410 
diff Energy = 14.485425 
diff Energy = 74.247663 
diff Energy = 0.891430 
diff Energy = 229.205037 
diff Energy = 4.195625 
Finish ICM step! 
iter = 12, loglik= 76714792.000000, dloglik=0.000292 
predict Y and V! 
diff Energy = 21.102195 
diff Energy = 23.730608 
diff Energy = 4.778557 
diff Energy = 26.953454 
diff Energy = 20.219615 
diff Energy = 2.218609 
diff Energy = 6.639739 
diff Energy = 1.011217 
diff Energy = 9.513262 
Finish ICM step! 
iter = 13, loglik= 76733184.000000, dloglik=0.000240 
predict Y and V! 
diff Energy = 39.256146 
diff Energy = 5.063680 
diff Energy = 12.035920 
diff Energy = 14.739417 
diff Energy = 14.473988 
diff Energy = 15.534728 
diff Energy = 114.629620 
diff Energy = 3.535887 
diff Energy = 177.788293 
diff Energy = 4.629489 
Finish ICM step! 
iter = 14, loglik= 76748752.000000, dloglik=0.000203 
predict Y and V! 
diff Energy = 12.571976 
diff Energy = 21.480424 
diff Energy = 201.012823 
diff Energy = 11.933457 
diff Energy = 0.177382 
diff Energy = 0.830617 
diff Energy = 2.520407 
diff Energy = 6.152443 
diff Energy = 45.262362 
diff Energy = 0.547223 
Finish ICM step! 
iter = 15, loglik= 76763192.000000, dloglik=0.000188 
predict Y and V! 
diff Energy = 57.554404 
diff Energy = 11.593737 
diff Energy = 5.025156 
diff Energy = 3.115947 
diff Energy = 52.160910 
Finish ICM step! 
iter = 16, loglik= 76776768.000000, dloglik=0.000177 
predict Y and V! 
diff Energy = 57.211410 
diff Energy = 7.272072 
diff Energy = 157.220146 
diff Energy = 0.421613 
diff Energy = 1.773365 
diff Energy = 2.445720 
diff Energy = 54.500687 
Finish ICM step! 
iter = 17, loglik= 76790288.000000, dloglik=0.000176 
predict Y and V! 
diff Energy = 28.876521 
diff Energy = 7.095185 
diff Energy = 50.742295 
diff Energy = 12.409665 
diff Energy = 0.464397 
diff Energy = 23.202414 
diff Energy = 177.419215 
Finish ICM step! 
iter = 18, loglik= 76804600.000000, dloglik=0.000186 
predict Y and V! 
diff Energy = 1.198530 
diff Energy = 14.816893 
diff Energy = 20.501047 
diff Energy = 4.143947 
diff Energy = 6.764500 
diff Energy = 54.663318 
Finish ICM step! 
iter = 19, loglik= 76819240.000000, dloglik=0.000191 
predict Y and V! 
diff Energy = 7.720535 
diff Energy = 6.127647 
diff Energy = 44.431812 
diff Energy = 23.879365 
diff Energy = 47.600941 
Finish ICM step! 
iter = 20, loglik= 76834872.000000, dloglik=0.000203 
predict Y and V! 
diff Energy = 6.521489 
diff Energy = 4.143786 
diff Energy = 33.742892 
Finish ICM step! 
iter = 21, loglik= 76851944.000000, dloglik=0.000222 
predict Y and V! 
diff Energy = 3.316896 
diff Energy = 45.881180 
Finish ICM step! 
iter = 22, loglik= 76870848.000000, dloglik=0.000246 
predict Y and V! 
diff Energy = 3.106498 
diff Energy = 37.318525 
Finish ICM step! 
iter = 23, loglik= 76892360.000000, dloglik=0.000280 
predict Y and V! 
diff Energy = 4.392821 
diff Energy = 16.836962 
Finish ICM step! 
iter = 24, loglik= 76916368.000000, dloglik=0.000312 
predict Y and V! 
diff Energy = 32.565997 
diff Energy = 15.180706 
Finish ICM step! 
iter = 25, loglik= 76943968.000000, dloglik=0.000359 
predict Y and V! 
diff Energy = 20.346421 
diff Energy = 4.434546 
Finish ICM step! 
iter = 26, loglik= 76979104.000000, dloglik=0.000457 
predict Y and V! 
diff Energy = 10.972066 
diff Energy = 14.883736 
diff Energy = 24.125907 
Finish ICM step! 
iter = 27, loglik= 77024464.000000, dloglik=0.000589 
predict Y and V! 
diff Energy = 30.150633 
diff Energy = 26.312405 
diff Energy = 22.493534 
Finish ICM step! 
iter = 28, loglik= 77081632.000000, dloglik=0.000742 
predict Y and V! 
diff Energy = 14.756107 
diff Energy = 10.085785 
diff Energy = 19.772232 
diff Energy = 8.015918 
Finish ICM step! 
iter = 29, loglik= 77146112.000000, dloglik=0.000837 
predict Y and V! 
diff Energy = 7.698752 
diff Energy = 5.215656 
diff Energy = 4.890027 
Finish ICM step! 
iter = 30, loglik= 77212944.000000, dloglik=0.000866 
21201.204 sec elapsed
**** Job ends ****
Thu Mar 30 17:34:34 EDT 2023
**** Job starts ****
Thu May  4 12:02:34 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3133844
Job name: PRECAST_k10-30
Hostname: compute-100.cm.cluster
Task id: 22
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[[1]]
An object of class Seurat 
2000 features across 14124 samples within 1 assay 
Active assay: RNA (2000 features, 1065 variable features)

[[2]]
An object of class Seurat 
2000 features across 19594 samples within 1 assay 
Active assay: RNA (2000 features, 1233 variable features)

[[3]]
An object of class Seurat 
2000 features across 14098 samples within 1 assay 
Active assay: RNA (2000 features, 1067 variable features)

[[4]]
An object of class Seurat 
2000 features across 8659 samples within 1 assay 
Active assay: RNA (2000 features, 988 variable features)

[[5]]
An object of class Seurat 
2000 features across 14358 samples within 1 assay 
Active assay: RNA (2000 features, 1105 variable features)

[[6]]
An object of class Seurat 
2000 features across 18676 samples within 1 assay 
Active assay: RNA (2000 features, 1039 variable features)

[[7]]
An object of class Seurat 
2000 features across 20573 samples within 1 assay 
Active assay: RNA (2000 features, 1179 variable features)

[[8]]
An object of class Seurat 
2000 features across 8387 samples within 1 assay 
Active assay: RNA (2000 features, 984 variable features)

[[9]]
An object of class Seurat 
2000 features across 17973 samples within 1 assay 
Active assay: RNA (2000 features, 1096 variable features)

[[10]]
An object of class Seurat 
2000 features across 15310 samples within 1 assay 
Active assay: RNA (2000 features, 1147 variable features)

Neighbors were identified for 14121 out of 14124 spots.
Neighbors were identified for 19593 out of 19594 spots.
Neighbors were identified for 14098 out of 14098 spots.
Neighbors were identified for 8659 out of 8659 spots.
Neighbors were identified for 14358 out of 14358 spots.
Neighbors were identified for 18676 out of 18676 spots.
Neighbors were identified for 20570 out of 20573 spots.
Neighbors were identified for 8387 out of 8387 spots.
Neighbors were identified for 17969 out of 17973 spots.
Neighbors were identified for 15310 out of 15310 spots.
Intergrative data info.: 10 samples, 2000 genes X 151752 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= 136954288.000000, dloglik=1.063774 
predict Y and V! 
diff Energy = 9.084504 
diff Energy = 22.605903 
diff Energy = 98.118290 
diff Energy = 5.518472 
diff Energy = 38.233639 
diff Energy = 52.178551 
Finish ICM step! 
iter = 3, loglik= 138182512.000000, dloglik=0.008968 
predict Y and V! 
diff Energy = 36.674750 
diff Energy = 127.199294 
diff Energy = 63.504797 
diff Energy = 65.043649 
diff Energy = 179.466436 
diff Energy = 82.259010 
diff Energy = 84.591012 
diff Energy = 40.436971 
diff Energy = 154.134042 
diff Energy = 140.220693 
Finish ICM step! 
iter = 4, loglik= 138646736.000000, dloglik=0.003359 
predict Y and V! 
diff Energy = 120.793280 
diff Energy = 160.482675 
diff Energy = 25.061635 
diff Energy = 44.637090 
diff Energy = 172.551651 
diff Energy = 17.648845 
diff Energy = 43.001793 
diff Energy = 63.693500 
diff Energy = 138.176902 
diff Energy = 177.371290 
Finish ICM step! 
iter = 5, loglik= 138897712.000000, dloglik=0.001810 
predict Y and V! 
diff Energy = 58.795085 
diff Energy = 117.691179 
diff Energy = 41.546063 
diff Energy = 171.605971 
diff Energy = 59.325131 
diff Energy = 21.108048 
diff Energy = 75.328149 
diff Energy = 96.477487 
diff Energy = 183.103596 
Finish ICM step! 
iter = 6, loglik= 139034480.000000, dloglik=0.000985 
predict Y and V! 
diff Energy = 52.502913 
diff Energy = 104.640747 
diff Energy = 6.865529 
diff Energy = 69.682198 
diff Energy = 65.111430 
diff Energy = 4.269722 
diff Energy = 9.541308 
diff Energy = 26.515908 
diff Energy = 143.603492 
diff Energy = 104.567272 
Finish ICM step! 
iter = 7, loglik= 139121840.000000, dloglik=0.000628 
predict Y and V! 
diff Energy = 79.428048 
diff Energy = 15.204281 
diff Energy = 17.925926 
diff Energy = 50.183277 
diff Energy = 128.400293 
diff Energy = 60.111318 
diff Energy = 6.636518 
diff Energy = 47.704987 
diff Energy = 53.185091 
diff Energy = 98.116919 
Finish ICM step! 
iter = 8, loglik= 139183248.000000, dloglik=0.000441 
predict Y and V! 
diff Energy = 37.604616 
diff Energy = 1.242358 
diff Energy = 36.625225 
diff Energy = 10.087753 
diff Energy = 45.903194 
diff Energy = 73.093182 
diff Energy = 0.339850 
diff Energy = 40.027094 
diff Energy = 15.605828 
diff Energy = 21.973772 
Finish ICM step! 
iter = 9, loglik= 139228496.000000, dloglik=0.000325 
predict Y and V! 
diff Energy = 27.248110 
diff Energy = 17.130464 
diff Energy = 17.479523 
diff Energy = 30.521245 
diff Energy = 42.864598 
diff Energy = 9.180152 
diff Energy = 38.400104 
diff Energy = 120.516170 
diff Energy = 20.532326 
Finish ICM step! 
iter = 10, loglik= 139262112.000000, dloglik=0.000241 
predict Y and V! 
diff Energy = 8.544234 
diff Energy = 25.911376 
diff Energy = 0.649454 
diff Energy = 18.177410 
diff Energy = 12.598173 
diff Energy = 11.316970 
diff Energy = 15.684886 
diff Energy = 5.995368 
diff Energy = 27.180143 
Finish ICM step! 
iter = 11, loglik= 139287856.000000, dloglik=0.000185 
