**** Job starts ****
Tue Mar 21 19:53:23 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 23
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:26 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:38 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 23
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:40 EDT 2023
**** Job starts ****
Wed Mar 22 08:10:17 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-096.cm.cluster
Task id: 23
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79846400.000000, dloglik=0.962819 
predict Y and V! 
diff Energy = 44.974548 
diff Energy = 27.069767 
diff Energy = 19.568627 
diff Energy = 1.251388 
diff Energy = 67.819491 
diff Energy = 28.615783 
diff Energy = 7.877431 
diff Energy = 4.747930 
diff Energy = 19.561569 
Finish ICM step! 
iter = 3, loglik= -78788728.000000, dloglik=0.013246 
predict Y and V! 
diff Energy = 87.814090 
diff Energy = 162.884599 
diff Energy = 43.743773 
diff Energy = 26.638569 
diff Energy = 92.837626 
diff Energy = 92.736929 
diff Energy = 103.455676 
diff Energy = 88.257760 
diff Energy = 151.070618 
diff Energy = 153.362334 
Finish ICM step! 
iter = 4, loglik= -78444112.000000, dloglik=0.004374 
predict Y and V! 
diff Energy = 128.256271 
diff Energy = 160.197513 
diff Energy = 22.231942 
diff Energy = 22.317226 
diff Energy = 150.377819 
diff Energy = 57.837662 
diff Energy = 105.225177 
diff Energy = 118.408750 
diff Energy = 219.517653 
diff Energy = 110.162946 
Finish ICM step! 
iter = 5, loglik= -78267176.000000, dloglik=0.002256 
predict Y and V! 
diff Energy = 59.700715 
diff Energy = 53.044196 
diff Energy = 13.755798 
diff Energy = 59.057871 
diff Energy = 61.303774 
diff Energy = 75.273636 
diff Energy = 90.206205 
diff Energy = 98.234916 
diff Energy = 144.582528 
diff Energy = 141.254918 
Finish ICM step! 
iter = 6, loglik= -78156672.000000, dloglik=0.001412 
predict Y and V! 
diff Energy = 35.187922 
diff Energy = 124.863718 
diff Energy = 7.527260 
diff Energy = 34.878474 
diff Energy = 72.107030 
diff Energy = 52.602387 
diff Energy = 117.847559 
diff Energy = 104.894414 
diff Energy = 151.466754 
diff Energy = 42.873826 
Finish ICM step! 
iter = 7, loglik= -78080448.000000, dloglik=0.000975 
predict Y and V! 
diff Energy = 27.653237 
diff Energy = 17.432325 
diff Energy = 17.940212 
diff Energy = 33.952036 
diff Energy = 63.346660 
diff Energy = 13.600564 
diff Energy = 25.656402 
diff Energy = 34.630018 
diff Energy = 82.282149 
diff Energy = 38.433102 
Finish ICM step! 
iter = 8, loglik= -78024568.000000, dloglik=0.000716 
predict Y and V! 
diff Energy = 95.878962 
diff Energy = 39.813479 
diff Energy = 6.001917 
diff Energy = 40.803637 
diff Energy = 22.699506 
diff Energy = 91.255489 
diff Energy = 16.938072 
diff Energy = 35.149916 
diff Energy = 87.454656 
diff Energy = 61.741597 
Finish ICM step! 
iter = 9, loglik= -77983176.000000, dloglik=0.000530 
predict Y and V! 
diff Energy = 9.425425 
diff Energy = 9.965520 
diff Energy = 4.743901 
diff Energy = 12.181157 
diff Energy = 23.244515 
diff Energy = 15.007354 
diff Energy = 13.222705 
diff Energy = 19.838055 
diff Energy = 114.499421 
diff Energy = 21.154405 
Finish ICM step! 
iter = 10, loglik= -77951928.000000, dloglik=0.000401 
predict Y and V! 
diff Energy = 13.848310 
diff Energy = 104.056226 
diff Energy = 27.252353 
diff Energy = 69.706431 
diff Energy = 13.867625 
diff Energy = 19.937847 
diff Energy = 44.214152 
diff Energy = 57.742699 
diff Energy = 26.440985 
Finish ICM step! 
iter = 11, loglik= -77927824.000000, dloglik=0.000309 
predict Y and V! 
diff Energy = 7.283018 
diff Energy = 30.888526 
diff Energy = 20.148469 
diff Energy = 27.151575 
diff Energy = 7.347840 
diff Energy = 1.382843 
diff Energy = 18.826684 
diff Energy = 7.258255 
diff Energy = 56.724097 
diff Energy = 10.187471 
Finish ICM step! 
iter = 12, loglik= -77909232.000000, dloglik=0.000239 
predict Y and V! 
diff Energy = 21.744024 
diff Energy = 12.881117 
diff Energy = 3.019160 
diff Energy = 20.032439 
diff Energy = 58.229242 
diff Energy = 6.223581 
diff Energy = 14.196709 
diff Energy = 10.561585 
diff Energy = 7.041395 
diff Energy = 9.579025 
Finish ICM step! 
iter = 13, loglik= -77894336.000000, dloglik=0.000191 
predict Y and V! 
diff Energy = 0.190599 
diff Energy = 3.426905 
diff Energy = 7.707973 
diff Energy = 2.371717 
diff Energy = 20.820052 
diff Energy = 12.228339 
diff Energy = 8.521055 
diff Energy = 29.792429 
diff Energy = 21.243984 
Finish ICM step! 
iter = 14, loglik= -77882040.000000, dloglik=0.000158 
predict Y and V! 
diff Energy = 5.831215 
diff Energy = 0.779465 
diff Energy = 2.488208 
diff Energy = 1.286970 
diff Energy = 5.280418 
diff Energy = 7.089318 
diff Energy = 9.951527 
diff Energy = 5.637098 
diff Energy = 17.361770 
diff Energy = 1.590628 
Finish ICM step! 
iter = 15, loglik= -77871952.000000, dloglik=0.000130 
predict Y and V! 
diff Energy = 2.654754 
diff Energy = 5.097003 
diff Energy = 1.751893 
diff Energy = 3.212928 
diff Energy = 21.695647 
diff Energy = 1.259396 
diff Energy = 1.897227 
diff Energy = 4.704273 
diff Energy = 33.531344 
Finish ICM step! 
iter = 16, loglik= -77863320.000000, dloglik=0.000111 
predict Y and V! 
diff Energy = 5.163922 
diff Energy = 11.078067 
diff Energy = 1.922372 
diff Energy = 11.017082 
diff Energy = 14.336558 
diff Energy = 13.782387 
diff Energy = 5.244783 
diff Energy = 53.060531 
diff Energy = 48.211730 
Finish ICM step! 
iter = 17, loglik= -77855928.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 3.976096 
diff Energy = 37.609002 
diff Energy = 4.813269 
diff Energy = 10.537750 
diff Energy = 16.428855 
diff Energy = 5.091390 
diff Energy = 12.806560 
diff Energy = 6.202272 
diff Energy = 11.762563 
diff Energy = 9.334101 
Finish ICM step! 
iter = 18, loglik= -77849336.000000, dloglik=0.000085 
predict Y and V! 
diff Energy = 36.675762 
diff Energy = 7.486598 
diff Energy = 15.023167 
diff Energy = 2.314235 
diff Energy = 15.114804 
diff Energy = 4.953619 
diff Energy = 21.212163 
diff Energy = 11.834574 
Finish ICM step! 
iter = 19, loglik= -77843280.000000, dloglik=0.000078 
predict Y and V! 
diff Energy = 3.600065 
diff Energy = 3.882732 
diff Energy = 5.335582 
diff Energy = 33.447485 
diff Energy = 12.036176 
diff Energy = 7.841471 
diff Energy = 16.177410 
diff Energy = 3.881907 
Finish ICM step! 
iter = 20, loglik= -77837368.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 1.502069 
diff Energy = 11.384639 
diff Energy = 5.723436 
diff Energy = 7.731967 
diff Energy = 1.122858 
diff Energy = 7.467594 
diff Energy = 6.696062 
diff Energy = 20.451791 
Finish ICM step! 
iter = 21, loglik= -77831480.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 2.832957 
diff Energy = 7.606748 
diff Energy = 2.990106 
diff Energy = 2.268639 
diff Energy = 8.881168 
diff Energy = 5.206928 
diff Energy = 15.820956 
diff Energy = 21.751317 
diff Energy = 21.253427 
Finish ICM step! 
iter = 22, loglik= -77825448.000000, dloglik=0.000078 
predict Y and V! 
diff Energy = 0.721416 
diff Energy = 6.234395 
diff Energy = 0.678199 
diff Energy = 11.430035 
diff Energy = 15.587397 
diff Energy = 25.511574 
diff Energy = 7.770232 
diff Energy = 1.773731 
diff Energy = 18.318496 
Finish ICM step! 
iter = 23, loglik= -77819104.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 5.871683 
diff Energy = 7.097793 
diff Energy = 0.662758 
diff Energy = 10.871700 
diff Energy = 0.781583 
diff Energy = 6.233113 
diff Energy = 4.051101 
diff Energy = 4.026852 
Finish ICM step! 
iter = 24, loglik= -77811712.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 1.655693 
diff Energy = 1.296935 
diff Energy = 0.196764 
diff Energy = 3.921206 
diff Energy = 13.632507 
diff Energy = 111.337860 
diff Energy = 0.376101 
diff Energy = 13.007746 
diff Energy = 7.522260 
Finish ICM step! 
iter = 25, loglik= -77804176.000000, dloglik=0.000097 
predict Y and V! 
diff Energy = 2.898416 
diff Energy = 6.614017 
diff Energy = 0.249665 
diff Energy = 41.185764 
diff Energy = 2.645917 
diff Energy = 2.268390 
diff Energy = 15.363360 
diff Energy = 10.444205 
diff Energy = 6.161708 
Finish ICM step! 
iter = 26, loglik= -77796232.000000, dloglik=0.000102 
predict Y and V! 
diff Energy = 0.746270 
diff Energy = 4.538788 
diff Energy = 0.477765 
diff Energy = 0.883500 
diff Energy = 14.479493 
diff Energy = 13.097458 
diff Energy = 4.961881 
diff Energy = 12.677118 
diff Energy = 0.307342 
Finish ICM step! 
iter = 27, loglik= -77787992.000000, dloglik=0.000106 
predict Y and V! 
diff Energy = 11.658890 
diff Energy = 0.355680 
diff Energy = 2.091424 
diff Energy = 4.494983 
diff Energy = 12.841290 
diff Energy = 1.201278 
diff Energy = 86.408756 
diff Energy = 18.051907 
Finish ICM step! 
iter = 28, loglik= -77779568.000000, dloglik=0.000108 
predict Y and V! 
diff Energy = 2.355523 
diff Energy = 5.216700 
diff Energy = 1.023980 
diff Energy = 9.391924 
diff Energy = 4.606376 
Finish ICM step! 
iter = 29, loglik= -77770296.000000, dloglik=0.000119 
predict Y and V! 
diff Energy = 14.790437 
diff Energy = 0.302433 
diff Energy = 1.616463 
diff Energy = 7.169907 
diff Energy = 2.709825 
diff Energy = 12.745743 
diff Energy = 5.228382 
diff Energy = 21.937891 
Finish ICM step! 
iter = 30, loglik= -77760696.000000, dloglik=0.000123 
36446.723 sec elapsed
**** Job ends ****
Wed Mar 22 18:30:01 EDT 2023
