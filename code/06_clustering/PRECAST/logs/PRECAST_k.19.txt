Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.1.x
**** Job starts ****
Wed Nov  2 16:10:28 EDT 2022
**** JHPCE info ****
User: mtippani
Job id: 621925
Job name: PRECAST_k16-20
Hostname: compute-097.cm.cluster
Task id: 19
Unloading conda_R/4.1.x
Loading conda_R/devel

The following have been reloaded with a version change:
  1) conda_R/4.1.x => conda_R/devel


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.6.14
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/devel
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14143 samples within 1 assay 
Active assay: RNA (2000 features, 1397 variable features)

[[2]]
An object of class Seurat 
2000 features across 19678 samples within 1 assay 
Active assay: RNA (2000 features, 1541 variable features)

[[3]]
An object of class Seurat 
2000 features across 14104 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8662 samples within 1 assay 
Active assay: RNA (2000 features, 1374 variable features)

[[5]]
An object of class Seurat 
2000 features across 14390 samples within 1 assay 
Active assay: RNA (2000 features, 1495 variable features)

[[6]]
An object of class Seurat 
2000 features across 18709 samples within 1 assay 
Active assay: RNA (2000 features, 1159 variable features)

[[7]]
An object of class Seurat 
2000 features across 20614 samples within 1 assay 
Active assay: RNA (2000 features, 1612 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1200 variable features)

[[9]]
An object of class Seurat 
2000 features across 18041 samples within 1 assay 
Active assay: RNA (2000 features, 1385 variable features)

Neighbors were identified for 14143 out of 14143 spots.
Neighbors were identified for 19678 out of 19678 spots.
Neighbors were identified for 14104 out of 14104 spots.
Neighbors were identified for 8662 out of 8662 spots.
Neighbors were identified for 14390 out of 14390 spots.
Neighbors were identified for 18709 out of 18709 spots.
Neighbors were identified for 20611 out of 20614 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18038 out of 18041 spots.
Intergrative data info.: 9 samples, 2000 genes X 136730 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 10.588395 
diff Energy = 10.169071 
diff Energy = 0.985143 
Finish ICM step! 
iter = 2, loglik= -69740888.000000, dloglik=0.967524 
predict Y and V! 
diff Energy = 73.635553 
diff Energy = 39.907963 
diff Energy = 26.251321 
diff Energy = 85.859673 
diff Energy = 2.075605 
diff Energy = 43.968213 
diff Energy = 82.632985 
diff Energy = 23.686028 
Finish ICM step! 
iter = 3, loglik= -68935584.000000, dloglik=0.011547 
predict Y and V! 
diff Energy = 289.896142 
diff Energy = 374.516060 
diff Energy = 55.504270 
diff Energy = 259.039998 
diff Energy = 349.806785 
diff Energy = 99.551964 
diff Energy = 417.838386 
diff Energy = 170.276301 
diff Energy = 519.139039 
Finish ICM step! 
iter = 4, loglik= -68631880.000000, dloglik=0.004406 
predict Y and V! 
diff Energy = 138.574638 
diff Energy = 175.822532 
diff Energy = 74.102663 
diff Energy = 80.840068 
diff Energy = 134.199596 
diff Energy = 197.037120 
diff Energy = 209.668928 
diff Energy = 109.212461 
diff Energy = 234.447367 
Finish ICM step! 
iter = 5, loglik= -68462176.000000, dloglik=0.002473 
predict Y and V! 
diff Energy = 123.770643 
diff Energy = 61.208961 
diff Energy = 100.396948 
diff Energy = 78.720888 
diff Energy = 124.327473 
diff Energy = 113.401046 
diff Energy = 159.791103 
diff Energy = 62.472667 
diff Energy = 188.920367 
Finish ICM step! 
iter = 6, loglik= -68358248.000000, dloglik=0.001518 
predict Y and V! 
diff Energy = 85.505447 
diff Energy = 48.068130 
diff Energy = 43.045140 
diff Energy = 66.227843 
diff Energy = 101.347508 
diff Energy = 97.467924 
diff Energy = 72.877244 
diff Energy = 72.777613 
diff Energy = 110.152355 
Finish ICM step! 
iter = 7, loglik= -68289384.000000, dloglik=0.001007 
predict Y and V! 
diff Energy = 77.676406 
diff Energy = 120.801801 
diff Energy = 92.201961 
diff Energy = 65.128418 
diff Energy = 28.789634 
diff Energy = 35.440761 
diff Energy = 86.668299 
diff Energy = 63.068419 
diff Energy = 123.183209 
Finish ICM step! 
iter = 8, loglik= -68239496.000000, dloglik=0.000731 
predict Y and V! 
diff Energy = 10.470289 
diff Energy = 4.018676 
diff Energy = 36.907458 
diff Energy = 15.645416 
diff Energy = 15.414818 
diff Energy = 16.315075 
diff Energy = 29.570149 
diff Energy = 54.065227 
diff Energy = 44.700997 
Finish ICM step! 
iter = 9, loglik= -68201928.000000, dloglik=0.000551 
predict Y and V! 
diff Energy = 70.747977 
diff Energy = 1.002334 
diff Energy = 16.829545 
diff Energy = 10.764572 
diff Energy = 12.473701 
diff Energy = 12.425187 
diff Energy = 6.919513 
diff Energy = 35.068369 
diff Energy = 20.366552 
Finish ICM step! 
iter = 10, loglik= -68173392.000000, dloglik=0.000418 
predict Y and V! 
diff Energy = 2.274426 
diff Energy = 6.136076 
diff Energy = 23.872938 
diff Energy = 21.309434 
diff Energy = 18.530335 
diff Energy = 14.364295 
diff Energy = 40.898026 
diff Energy = 10.796254 
diff Energy = 4.349720 
Finish ICM step! 
iter = 11, loglik= -68151608.000000, dloglik=0.000320 
predict Y and V! 
diff Energy = 3.587632 
diff Energy = 0.553523 
diff Energy = 21.181158 
diff Energy = 5.194754 
diff Energy = 8.965812 
diff Energy = 8.689801 
diff Energy = 13.662682 
diff Energy = 7.354985 
diff Energy = 8.818955 
Finish ICM step! 
iter = 12, loglik= -68134568.000000, dloglik=0.000250 
predict Y and V! 
diff Energy = 25.632833 
diff Energy = 4.722115 
diff Energy = 5.051696 
diff Energy = 7.051686 
diff Energy = 73.982969 
diff Energy = 67.461301 
diff Energy = 34.830202 
diff Energy = 100.810212 
Finish ICM step! 
iter = 13, loglik= -68120976.000000, dloglik=0.000199 
predict Y and V! 
diff Energy = 1.388574 
diff Energy = 6.157237 
diff Energy = 7.155938 
diff Energy = 6.645331 
diff Energy = 15.776175 
diff Energy = 8.663691 
diff Energy = 24.774426 
diff Energy = 2.180503 
Finish ICM step! 
iter = 14, loglik= -68109488.000000, dloglik=0.000169 
predict Y and V! 
diff Energy = 13.150317 
diff Energy = 4.829249 
diff Energy = 26.977756 
diff Energy = 6.533671 
diff Energy = 17.728646 
diff Energy = 1.454233 
diff Energy = 3.251429 
Finish ICM step! 
iter = 15, loglik= -68099472.000000, dloglik=0.000147 
predict Y and V! 
diff Energy = 6.777329 
diff Energy = 4.587538 
diff Energy = 12.303013 
diff Energy = 37.099591 
diff Energy = 21.404016 
diff Energy = 26.377405 
diff Energy = 13.982450 
diff Energy = 12.777131 
diff Energy = 1.108322 
Finish ICM step! 
iter = 16, loglik= -68091144.000000, dloglik=0.000122 
predict Y and V! 
diff Energy = 2.502014 
diff Energy = 2.914881 
diff Energy = 0.607462 
diff Energy = 6.045366 
diff Energy = 4.267571 
diff Energy = 7.114131 
diff Energy = 0.818203 
diff Energy = 8.369221 
Finish ICM step! 
iter = 17, loglik= -68083328.000000, dloglik=0.000115 
predict Y and V! 
diff Energy = 9.026831 
diff Energy = 9.223897 
diff Energy = 2.064780 
diff Energy = 19.883106 
diff Energy = 0.255120 
diff Energy = 18.806353 
diff Energy = 5.698783 
diff Energy = 28.287826 
Finish ICM step! 
iter = 18, loglik= -68076568.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 2.539274 
diff Energy = 11.482324 
diff Energy = 6.160981 
diff Energy = 37.441481 
diff Energy = 9.158143 
diff Energy = 6.152342 
diff Energy = 55.833793 
diff Energy = 23.520770 
Finish ICM step! 
iter = 19, loglik= -68070016.000000, dloglik=0.000096 
predict Y and V! 
diff Energy = 10.652469 
diff Energy = 4.024335 
diff Energy = 15.169948 
diff Energy = 9.619748 
diff Energy = 51.650887 
diff Energy = 10.602493 
diff Energy = 9.499606 
Finish ICM step! 
iter = 20, loglik= -68063936.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 5.307451 
diff Energy = 0.232942 
diff Energy = 0.199011 
diff Energy = 6.604477 
diff Energy = 10.932463 
diff Energy = 33.140896 
diff Energy = 2.400191 
diff Energy = 1.486238 
diff Energy = 6.635382 
Finish ICM step! 
iter = 21, loglik= -68058040.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 1.640825 
diff Energy = 9.841177 
diff Energy = 5.952238 
diff Energy = 6.041269 
diff Energy = 3.515213 
diff Energy = 0.752871 
diff Energy = 3.897702 
Finish ICM step! 
iter = 22, loglik= -68052152.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 1.300326 
diff Energy = 2.400619 
diff Energy = 1.980600 
diff Energy = 7.275939 
diff Energy = 32.523419 
diff Energy = 16.783914 
diff Energy = 2.023666 
diff Energy = 11.764086 
Finish ICM step! 
iter = 23, loglik= -68046152.000000, dloglik=0.000088 
predict Y and V! 
diff Energy = 1.259669 
diff Energy = 0.627300 
diff Energy = 12.543236 
diff Energy = 2.015701 
diff Energy = 15.535690 
diff Energy = 1.948905 
Finish ICM step! 
iter = 24, loglik= -68039496.000000, dloglik=0.000098 
predict Y and V! 
diff Energy = 11.466491 
diff Energy = 11.800729 
diff Energy = 1.207035 
diff Energy = 9.464240 
diff Energy = 10.314638 
diff Energy = 12.555626 
diff Energy = 8.212891 
diff Energy = 1.450158 
diff Energy = 4.953981 
Finish ICM step! 
iter = 25, loglik= -68032968.000000, dloglik=0.000096 
predict Y and V! 
diff Energy = 0.141033 
diff Energy = 3.530036 
diff Energy = 8.748499 
diff Energy = 4.012137 
diff Energy = 0.377588 
diff Energy = 5.950748 
Finish ICM step! 
iter = 26, loglik= -68025824.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 1.697130 
diff Energy = 2.564315 
diff Energy = 0.312586 
diff Energy = 2.273572 
diff Energy = 4.919872 
diff Energy = 6.174803 
diff Energy = 13.429368 
Finish ICM step! 
iter = 27, loglik= -68018792.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 0.587973 
diff Energy = 4.601427 
diff Energy = 0.829703 
diff Energy = 12.240967 
diff Energy = 1.777614 
diff Energy = 2.078835 
diff Energy = 3.132640 
diff Energy = 25.854709 
Finish ICM step! 
iter = 28, loglik= -68011472.000000, dloglik=0.000108 
predict Y and V! 
diff Energy = 2.872036 
diff Energy = 2.559477 
diff Energy = 2.169642 
diff Energy = 2.100632 
diff Energy = 18.557622 
diff Energy = 33.709589 
diff Energy = 5.094135 
diff Energy = 13.376965 
Finish ICM step! 
iter = 29, loglik= -68004016.000000, dloglik=0.000110 
predict Y and V! 
diff Energy = 7.012514 
diff Energy = 2.391509 
diff Energy = 4.679202 
diff Energy = 6.865575 
diff Energy = 1.976074 
diff Energy = 63.497095 
diff Energy = 0.423772 
diff Energy = 4.841882 
Finish ICM step! 
iter = 30, loglik= -67996552.000000, dloglik=0.000110 
28148.098 sec elapsed
**** Job ends ****
Thu Nov  3 00:12:39 EDT 2022
**** Job starts ****
Tue Mar 21 19:52:53 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 19
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:52:58 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:08 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 19
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:10 EDT 2023
**** Job starts ****
Wed Mar 22 02:22:43 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 19
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79861584.000000, dloglik=0.962812 
predict Y and V! 
diff Energy = 48.859678 
diff Energy = 22.125822 
diff Energy = 1.255045 
diff Energy = 0.492895 
diff Energy = 85.147765 
diff Energy = 67.105665 
diff Energy = 21.704123 
diff Energy = 41.521952 
Finish ICM step! 
iter = 3, loglik= -78809632.000000, dloglik=0.013172 
predict Y and V! 
diff Energy = 53.457253 
diff Energy = 120.748397 
diff Energy = 99.261150 
diff Energy = 41.570284 
diff Energy = 116.640212 
diff Energy = 35.887445 
diff Energy = 101.032210 
diff Energy = 49.023840 
diff Energy = 185.414530 
diff Energy = 169.663532 
Finish ICM step! 
iter = 4, loglik= -78470312.000000, dloglik=0.004306 
predict Y and V! 
diff Energy = 102.549110 
diff Energy = 130.884767 
diff Energy = 111.160899 
diff Energy = 48.209401 
diff Energy = 160.185854 
diff Energy = 135.182345 
diff Energy = 32.456463 
diff Energy = 192.763880 
diff Energy = 197.121809 
Finish ICM step! 
iter = 5, loglik= -78293488.000000, dloglik=0.002253 
predict Y and V! 
diff Energy = 31.906698 
diff Energy = 79.302458 
diff Energy = 84.753073 
diff Energy = 48.142698 
diff Energy = 110.224333 
diff Energy = 12.817143 
diff Energy = 96.427787 
diff Energy = 51.026907 
diff Energy = 254.424688 
diff Energy = 95.648930 
Finish ICM step! 
iter = 6, loglik= -78184608.000000, dloglik=0.001391 
predict Y and V! 
diff Energy = 61.258473 
diff Energy = 131.316346 
diff Energy = 29.155678 
diff Energy = 31.725827 
diff Energy = 105.237313 
diff Energy = 16.060116 
diff Energy = 88.419861 
diff Energy = 2.569360 
diff Energy = 118.474196 
diff Energy = 90.069144 
Finish ICM step! 
iter = 7, loglik= -78112552.000000, dloglik=0.000922 
predict Y and V! 
diff Energy = 6.078047 
diff Energy = 23.818200 
diff Energy = 29.067317 
diff Energy = 119.270673 
diff Energy = 0.281948 
diff Energy = 8.958707 
diff Energy = 8.965495 
diff Energy = 67.878187 
diff Energy = 29.456460 
Finish ICM step! 
iter = 8, loglik= -78060816.000000, dloglik=0.000662 
predict Y and V! 
diff Energy = 38.536998 
diff Energy = 26.025360 
diff Energy = 18.331259 
diff Energy = 21.529066 
diff Energy = 30.985628 
diff Energy = 7.387291 
diff Energy = 23.396766 
diff Energy = 19.491572 
diff Energy = 93.704927 
diff Energy = 6.278100 
Finish ICM step! 
iter = 9, loglik= -78020424.000000, dloglik=0.000517 
predict Y and V! 
diff Energy = 10.228314 
diff Energy = 27.376488 
diff Energy = 25.154349 
diff Energy = 17.349489 
diff Energy = 1.300994 
diff Energy = 7.654301 
diff Energy = 0.500888 
diff Energy = 23.388902 
diff Energy = 0.534791 
Finish ICM step! 
iter = 10, loglik= -77988168.000000, dloglik=0.000413 
predict Y and V! 
diff Energy = 10.118176 
diff Energy = 2.436604 
diff Energy = 23.207878 
diff Energy = 39.236188 
diff Energy = 9.595962 
diff Energy = 2.759294 
diff Energy = 14.574254 
diff Energy = 23.207253 
diff Energy = 23.618751 
diff Energy = 68.949068 
Finish ICM step! 
iter = 11, loglik= -77962008.000000, dloglik=0.000335 
predict Y and V! 
diff Energy = 3.075377 
diff Energy = 16.184804 
diff Energy = 25.520415 
diff Energy = 3.577469 
diff Energy = 6.319468 
diff Energy = 19.230977 
diff Energy = 2.684811 
diff Energy = 10.748536 
diff Energy = 11.694030 
Finish ICM step! 
iter = 12, loglik= -77940584.000000, dloglik=0.000275 
predict Y and V! 
diff Energy = 7.065174 
diff Energy = 9.254764 
diff Energy = 1.773510 
diff Energy = 6.772911 
diff Energy = 10.288542 
diff Energy = 4.102256 
diff Energy = 24.649463 
diff Energy = 18.712110 
Finish ICM step! 
iter = 13, loglik= -77923648.000000, dloglik=0.000217 
predict Y and V! 
diff Energy = 4.904555 
diff Energy = 11.253297 
diff Energy = 7.458621 
diff Energy = 5.092652 
diff Energy = 5.864017 
diff Energy = 7.040890 
diff Energy = 19.826318 
diff Energy = 4.234471 
Finish ICM step! 
iter = 14, loglik= -77910144.000000, dloglik=0.000173 
predict Y and V! 
diff Energy = 4.308447 
diff Energy = 7.522602 
diff Energy = 5.207719 
diff Energy = 4.071270 
diff Energy = 5.997928 
diff Energy = 14.477766 
diff Energy = 12.514482 
diff Energy = 20.398705 
diff Energy = 9.493600 
Finish ICM step! 
iter = 15, loglik= -77899176.000000, dloglik=0.000141 
predict Y and V! 
diff Energy = 3.917682 
diff Energy = 11.197436 
diff Energy = 16.351374 
diff Energy = 8.088321 
diff Energy = 38.735518 
diff Energy = 14.960011 
diff Energy = 5.371170 
diff Energy = 12.667769 
diff Energy = 1.675992 
Finish ICM step! 
iter = 16, loglik= -77889904.000000, dloglik=0.000119 
predict Y and V! 
diff Energy = 15.476874 
diff Energy = 8.877299 
diff Energy = 3.027560 
diff Energy = 7.298703 
diff Energy = 6.676297 
diff Energy = 6.339756 
diff Energy = 99.961324 
diff Energy = 21.132806 
Finish ICM step! 
iter = 17, loglik= -77881584.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 1.731082 
diff Energy = 5.322561 
diff Energy = 8.895904 
diff Energy = 4.344654 
diff Energy = 2.603900 
diff Energy = 3.087575 
diff Energy = 14.945669 
diff Energy = 11.187896 
diff Energy = 3.266429 
Finish ICM step! 
iter = 18, loglik= -77874680.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 3.678625 
diff Energy = 8.498253 
diff Energy = 1.410379 
diff Energy = 7.226795 
diff Energy = 0.166438 
diff Energy = 54.435608 
diff Energy = 1.942459 
diff Energy = 9.544351 
Finish ICM step! 
iter = 19, loglik= -77868152.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 0.400934 
diff Energy = 1.500789 
diff Energy = 35.638940 
diff Energy = 6.590646 
diff Energy = 12.993429 
diff Energy = 3.428602 
diff Energy = 6.877941 
diff Energy = 9.233466 
diff Energy = 8.964253 
diff Energy = 8.981135 
Finish ICM step! 
iter = 20, loglik= -77862424.000000, dloglik=0.000074 
predict Y and V! 
diff Energy = 0.714601 
diff Energy = 5.677706 
diff Energy = 13.133774 
diff Energy = 27.195013 
diff Energy = 4.586904 
diff Energy = 3.504488 
diff Energy = 5.513472 
diff Energy = 19.511824 
diff Energy = 20.219002 
diff Energy = 1.694998 
Finish ICM step! 
iter = 21, loglik= -77856400.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 3.102689 
diff Energy = 2.758845 
diff Energy = 15.311669 
diff Energy = 5.369461 
diff Energy = 12.628519 
diff Energy = 3.016745 
diff Energy = 49.238934 
diff Energy = 3.741093 
diff Energy = 4.196952 
diff Energy = 11.543037 
Finish ICM step! 
iter = 22, loglik= -77850400.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 1.927321 
diff Energy = 13.433897 
diff Energy = 9.968241 
diff Energy = 12.605896 
diff Energy = 13.814815 
diff Energy = 0.176234 
diff Energy = 13.994858 
diff Energy = 30.841624 
diff Energy = 22.992550 
Finish ICM step! 
iter = 23, loglik= -77844584.000000, dloglik=0.000075 
predict Y and V! 
diff Energy = 0.056406 
diff Energy = 6.716351 
diff Energy = 13.201982 
diff Energy = 4.103346 
diff Energy = 7.134729 
diff Energy = 11.851045 
diff Energy = 2.033896 
diff Energy = 11.427963 
Finish ICM step! 
iter = 24, loglik= -77838176.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 2.482709 
diff Energy = 5.158507 
diff Energy = 12.814958 
diff Energy = 7.072223 
diff Energy = 31.946186 
diff Energy = 4.645611 
diff Energy = 26.089702 
diff Energy = 9.762359 
diff Energy = 0.234661 
Finish ICM step! 
iter = 25, loglik= -77831560.000000, dloglik=0.000085 
predict Y and V! 
diff Energy = 3.943777 
diff Energy = 1.463275 
diff Energy = 4.173060 
diff Energy = 6.731164 
diff Energy = 2.172258 
diff Energy = 21.864331 
diff Energy = 2.003107 
diff Energy = 37.515091 
diff Energy = 5.175084 
Finish ICM step! 
iter = 26, loglik= -77824248.000000, dloglik=0.000094 
predict Y and V! 
diff Energy = 6.913119 
diff Energy = 2.665600 
diff Energy = 11.122293 
diff Energy = 5.680483 
diff Energy = 2.818023 
diff Energy = 4.487773 
diff Energy = 6.130418 
diff Energy = 0.666668 
diff Energy = 3.468264 
diff Energy = 0.426752 
Finish ICM step! 
iter = 27, loglik= -77816512.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 2.734556 
diff Energy = 0.863943 
diff Energy = 14.491763 
diff Energy = 2.321029 
diff Energy = 19.888985 
diff Energy = 20.377992 
diff Energy = 0.209107 
diff Energy = 31.752969 
diff Energy = 2.448599 
Finish ICM step! 
iter = 28, loglik= -77808208.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 12.251571 
diff Energy = 9.728317 
diff Energy = 0.418957 
diff Energy = 15.254892 
diff Energy = 24.931044 
diff Energy = 1.198646 
diff Energy = 23.051145 
diff Energy = 6.044362 
Finish ICM step! 
iter = 29, loglik= -77799368.000000, dloglik=0.000114 
predict Y and V! 
diff Energy = 3.554123 
diff Energy = 5.762230 
diff Energy = 3.244752 
diff Energy = 2.118849 
diff Energy = 6.927250 
diff Energy = 2.248634 
diff Energy = 20.334977 
diff Energy = 6.203805 
diff Energy = 6.246127 
Finish ICM step! 
iter = 30, loglik= -77790184.000000, dloglik=0.000118 
22649.523 sec elapsed
**** Job ends ****
Wed Mar 22 08:50:33 EDT 2023
**** Job starts ****
Thu Mar 30 05:44:07 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3084530
Job name: PRECAST_k16-25
Hostname: compute-098.cm.cluster
Task id: 19
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 7569
## number of total genes: 23689
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8089
## number of total genes: 24208
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 16334
## number of total genes: 25336
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14105
## number of total genes: 26447
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 24039
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 6071
## number of total genes: 23183
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 9895
## number of total genes: 24035
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 17222
## number of total genes: 26256
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15785
## number of total genes: 25978
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 12039
## number of total genes: 24495
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 13970
## number of total genes: 24879
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
There were 24 warnings (use warnings() to see them)
[[1]]
An object of class Seurat 
2000 features across 7538 samples within 1 assay 
Active assay: RNA (2000 features, 467 variable features)

[[2]]
An object of class Seurat 
2000 features across 8079 samples within 1 assay 
Active assay: RNA (2000 features, 458 variable features)

[[3]]
An object of class Seurat 
2000 features across 16022 samples within 1 assay 
Active assay: RNA (2000 features, 459 variable features)

[[4]]
An object of class Seurat 
2000 features across 14065 samples within 1 assay 
Active assay: RNA (2000 features, 449 variable features)

[[5]]
An object of class Seurat 
2000 features across 8637 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[6]]
An object of class Seurat 
2000 features across 5952 samples within 1 assay 
Active assay: RNA (2000 features, 453 variable features)

[[7]]
An object of class Seurat 
2000 features across 9490 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[8]]
An object of class Seurat 
2000 features across 16998 samples within 1 assay 
Active assay: RNA (2000 features, 457 variable features)

[[9]]
An object of class Seurat 
2000 features across 15390 samples within 1 assay 
Active assay: RNA (2000 features, 420 variable features)

[[10]]
An object of class Seurat 
2000 features across 11862 samples within 1 assay 
Active assay: RNA (2000 features, 461 variable features)

[[11]]
An object of class Seurat 
2000 features across 13539 samples within 1 assay 
Active assay: RNA (2000 features, 444 variable features)

Neighbors were identified for 7538 out of 7538 spots.
Neighbors were identified for 8079 out of 8079 spots.
Neighbors were identified for 16022 out of 16022 spots.
Neighbors were identified for 14065 out of 14065 spots.
Neighbors were identified for 8637 out of 8637 spots.
Neighbors were identified for 5951 out of 5952 spots.
Neighbors were identified for 9489 out of 9490 spots.
Neighbors were identified for 16998 out of 16998 spots.
Neighbors were identified for 15390 out of 15390 spots.
Neighbors were identified for 11862 out of 11862 spots.
Neighbors were identified for 13539 out of 13539 spots.
Intergrative data info.: 11 samples, 2000 genes X 127572 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 375.503741 
diff Energy = 224.449256 
diff Energy = 638.475295 
diff Energy = 207.302548 
diff Energy = 5.722558 
diff Energy = 219.274932 
Finish ICM step! 
iter = 2, loglik= 75895360.000000, dloglik=1.035342 
predict Y and V! 
diff Energy = 134.755460 
diff Energy = 2.595332 
diff Energy = 20.562440 
diff Energy = 205.288422 
diff Energy = 28.270403 
diff Energy = 18.113654 
diff Energy = 6.731567 
diff Energy = 59.018964 
diff Energy = 81.716702 
diff Energy = 38.136517 
diff Energy = 35.388552 
Finish ICM step! 
iter = 3, loglik= 76347936.000000, dloglik=0.005963 
predict Y and V! 
diff Energy = 71.423515 
diff Energy = 64.449205 
diff Energy = 10.281595 
diff Energy = 146.635021 
diff Energy = 49.061824 
diff Energy = 48.656113 
diff Energy = 0.139800 
diff Energy = 205.662102 
diff Energy = 35.448942 
diff Energy = 71.638565 
diff Energy = 9.660667 
Finish ICM step! 
iter = 4, loglik= 76470856.000000, dloglik=0.001610 
predict Y and V! 
diff Energy = 34.029124 
diff Energy = 56.784080 
diff Energy = 10.196205 
diff Energy = 128.431485 
diff Energy = 68.807348 
diff Energy = 62.150436 
diff Energy = 1.420768 
diff Energy = 124.121030 
diff Energy = 26.535994 
diff Energy = 64.671439 
diff Energy = 44.896784 
Finish ICM step! 
iter = 5, loglik= 76529512.000000, dloglik=0.000767 
predict Y and V! 
diff Energy = 2.887697 
diff Energy = 83.742590 
diff Energy = 26.914274 
diff Energy = 130.252936 
diff Energy = 38.339967 
diff Energy = 34.451904 
diff Energy = 11.905235 
diff Energy = 111.447682 
diff Energy = 52.140263 
diff Energy = 9.228650 
diff Energy = 2.250907 
Finish ICM step! 
iter = 6, loglik= 76566016.000000, dloglik=0.000477 
predict Y and V! 
diff Energy = 28.042145 
diff Energy = 65.680221 
diff Energy = 16.258245 
diff Energy = 63.771311 
diff Energy = 14.899117 
diff Energy = 48.774866 
diff Energy = 9.651865 
diff Energy = 61.921516 
diff Energy = 6.434883 
diff Energy = 28.456807 
Finish ICM step! 
iter = 7, loglik= 76592240.000000, dloglik=0.000343 
predict Y and V! 
diff Energy = 31.757153 
diff Energy = 43.132416 
diff Energy = 13.864817 
diff Energy = 40.621236 
diff Energy = 1.706785 
diff Energy = 26.015382 
diff Energy = 14.416882 
diff Energy = 15.083030 
diff Energy = 10.338879 
diff Energy = 27.061717 
Finish ICM step! 
iter = 8, loglik= 76613192.000000, dloglik=0.000274 
predict Y and V! 
diff Energy = 16.265016 
diff Energy = 13.066718 
diff Energy = 37.357267 
diff Energy = 8.521328 
diff Energy = 22.172333 
diff Energy = 1.609799 
diff Energy = 2.602738 
diff Energy = 7.796022 
diff Energy = 13.025779 
diff Energy = 5.150519 
Finish ICM step! 
iter = 9, loglik= 76631632.000000, dloglik=0.000241 
predict Y and V! 
diff Energy = 4.932277 
diff Energy = 2.387181 
diff Energy = 6.242615 
diff Energy = 8.824675 
diff Energy = 21.154335 
diff Energy = 3.494840 
diff Energy = 2.346602 
diff Energy = 5.552720 
diff Energy = 1.748557 
Finish ICM step! 
iter = 10, loglik= 76649256.000000, dloglik=0.000230 
predict Y and V! 
diff Energy = 5.126035 
diff Energy = 24.709115 
diff Energy = 17.126017 
diff Energy = 28.146739 
diff Energy = 0.017330 
diff Energy = 7.927785 
diff Energy = 10.941095 
diff Energy = 3.448559 
Finish ICM step! 
iter = 11, loglik= 76667840.000000, dloglik=0.000242 
predict Y and V! 
diff Energy = 1.237156 
diff Energy = 15.913245 
diff Energy = 6.073785 
diff Energy = 30.502801 
diff Energy = 21.012688 
diff Energy = 2.668541 
diff Energy = 0.618623 
diff Energy = 18.893511 
diff Energy = 6.338376 
diff Energy = 6.490353 
Finish ICM step! 
iter = 12, loglik= 76687040.000000, dloglik=0.000250 
predict Y and V! 
diff Energy = 14.265019 
diff Energy = 15.854744 
diff Energy = 3.120372 
diff Energy = 25.549570 
diff Energy = 86.209063 
diff Energy = 94.400430 
diff Energy = 1.683272 
diff Energy = 165.413286 
diff Energy = 165.081852 
Finish ICM step! 
iter = 13, loglik= 76706448.000000, dloglik=0.000253 
predict Y and V! 
diff Energy = 20.213468 
diff Energy = 19.507666 
diff Energy = 3.069798 
diff Energy = 14.071855 
diff Energy = 149.921309 
diff Energy = 7.154282 
diff Energy = 8.624695 
diff Energy = 11.338354 
diff Energy = 41.204583 
diff Energy = 4.728807 
Finish ICM step! 
iter = 14, loglik= 76722520.000000, dloglik=0.000210 
predict Y and V! 
diff Energy = 0.766324 
diff Energy = 1.459027 
diff Energy = 20.110345 
diff Energy = 35.181109 
diff Energy = 2.136107 
diff Energy = 0.918156 
diff Energy = 5.331527 
diff Energy = 32.581323 
Finish ICM step! 
iter = 15, loglik= 76737056.000000, dloglik=0.000189 
predict Y and V! 
diff Energy = 24.178116 
diff Energy = 9.701029 
diff Energy = 2.297350 
diff Energy = 9.112485 
diff Energy = 29.370464 
diff Energy = 20.028012 
diff Energy = 0.035708 
diff Energy = 24.155057 
Finish ICM step! 
iter = 16, loglik= 76750616.000000, dloglik=0.000177 
predict Y and V! 
diff Energy = 3.983733 
diff Energy = 4.073287 
diff Energy = 0.547513 
diff Energy = 15.497054 
diff Energy = 21.061156 
diff Energy = 2.103121 
diff Energy = 29.861371 
diff Energy = 198.635012 
Finish ICM step! 
iter = 17, loglik= 76764544.000000, dloglik=0.000181 
predict Y and V! 
diff Energy = 10.252276 
diff Energy = 128.497620 
diff Energy = 8.700154 
diff Energy = 13.510801 
diff Energy = 74.198498 
diff Energy = 34.887956 
diff Energy = 42.675511 
Finish ICM step! 
iter = 18, loglik= 76779320.000000, dloglik=0.000192 
predict Y and V! 
diff Energy = 12.962644 
diff Energy = 128.889794 
diff Energy = 20.531102 
diff Energy = 2.826734 
diff Energy = 20.279784 
diff Energy = 1.214462 
diff Energy = 24.880825 
diff Energy = 50.123161 
Finish ICM step! 
iter = 19, loglik= 76794024.000000, dloglik=0.000192 
predict Y and V! 
diff Energy = 10.253858 
diff Energy = 1.654843 
diff Energy = 49.155392 
diff Energy = 30.143031 
diff Energy = 4.533943 
diff Energy = 21.585603 
Finish ICM step! 
iter = 20, loglik= 76810072.000000, dloglik=0.000209 
predict Y and V! 
diff Energy = 1.030010 
diff Energy = 22.681496 
diff Energy = 10.153423 
diff Energy = 23.587285 
Finish ICM step! 
iter = 21, loglik= 76827088.000000, dloglik=0.000222 
predict Y and V! 
diff Energy = 8.236266 
diff Energy = 4.970268 
Finish ICM step! 
iter = 22, loglik= 76845360.000000, dloglik=0.000238 
predict Y and V! 
diff Energy = 10.649382 
diff Energy = 3.429979 
diff Energy = 19.546034 
Finish ICM step! 
iter = 23, loglik= 76864536.000000, dloglik=0.000250 
predict Y and V! 
diff Energy = 11.503572 
diff Energy = 4.708123 
diff Energy = 3.231870 
Finish ICM step! 
iter = 24, loglik= 76884904.000000, dloglik=0.000265 
predict Y and V! 
diff Energy = 20.738789 
diff Energy = 2.652416 
Finish ICM step! 
iter = 25, loglik= 76907456.000000, dloglik=0.000293 
predict Y and V! 
diff Energy = 22.921612 
diff Energy = 10.934665 
diff Energy = 7.718694 
Finish ICM step! 
iter = 26, loglik= 76932616.000000, dloglik=0.000327 
predict Y and V! 
diff Energy = 10.545915 
diff Energy = 10.604785 
diff Energy = 15.325334 
diff Energy = 8.673755 
Finish ICM step! 
iter = 27, loglik= 76960224.000000, dloglik=0.000359 
predict Y and V! 
diff Energy = 17.784128 
diff Energy = 4.118419 
diff Energy = 39.899878 
diff Energy = 3.522127 
Finish ICM step! 
iter = 28, loglik= 76990824.000000, dloglik=0.000398 
predict Y and V! 
diff Energy = 23.773301 
diff Energy = 13.761967 
diff Energy = 31.990023 
diff Energy = 17.928942 
diff Energy = 2.139299 
Finish ICM step! 
iter = 29, loglik= 77024200.000000, dloglik=0.000434 
predict Y and V! 
diff Energy = 12.538760 
diff Energy = 16.355363 
diff Energy = 27.906026 
diff Energy = 0.705047 
diff Energy = 15.474683 
diff Energy = 22.753965 
diff Energy = 14.421136 
Finish ICM step! 
iter = 30, loglik= 77059360.000000, dloglik=0.000456 
18696.976 sec elapsed
**** Job ends ****
Thu Mar 30 11:18:19 EDT 2023
**** Job starts ****
Thu May  4 04:35:55 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3133844
Job name: PRECAST_k10-30
Hostname: compute-100.cm.cluster
Task id: 19
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[[1]]
An object of class Seurat 
2000 features across 14124 samples within 1 assay 
Active assay: RNA (2000 features, 1065 variable features)

[[2]]
An object of class Seurat 
2000 features across 19594 samples within 1 assay 
Active assay: RNA (2000 features, 1233 variable features)

[[3]]
An object of class Seurat 
2000 features across 14098 samples within 1 assay 
Active assay: RNA (2000 features, 1067 variable features)

[[4]]
An object of class Seurat 
2000 features across 8659 samples within 1 assay 
Active assay: RNA (2000 features, 988 variable features)

[[5]]
An object of class Seurat 
2000 features across 14358 samples within 1 assay 
Active assay: RNA (2000 features, 1105 variable features)

[[6]]
An object of class Seurat 
2000 features across 18676 samples within 1 assay 
Active assay: RNA (2000 features, 1039 variable features)

[[7]]
An object of class Seurat 
2000 features across 20573 samples within 1 assay 
Active assay: RNA (2000 features, 1179 variable features)

[[8]]
An object of class Seurat 
2000 features across 8387 samples within 1 assay 
Active assay: RNA (2000 features, 984 variable features)

[[9]]
An object of class Seurat 
2000 features across 17973 samples within 1 assay 
Active assay: RNA (2000 features, 1096 variable features)

[[10]]
An object of class Seurat 
2000 features across 15310 samples within 1 assay 
Active assay: RNA (2000 features, 1147 variable features)

Neighbors were identified for 14121 out of 14124 spots.
Neighbors were identified for 19593 out of 19594 spots.
Neighbors were identified for 14098 out of 14098 spots.
Neighbors were identified for 8659 out of 8659 spots.
Neighbors were identified for 14358 out of 14358 spots.
Neighbors were identified for 18676 out of 18676 spots.
Neighbors were identified for 20570 out of 20573 spots.
Neighbors were identified for 8387 out of 8387 spots.
Neighbors were identified for 17969 out of 17973 spots.
Neighbors were identified for 15310 out of 15310 spots.
Intergrative data info.: 10 samples, 2000 genes X 151752 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= 136941168.000000, dloglik=1.063768 
predict Y and V! 
diff Energy = 0.830826 
diff Energy = 53.232198 
diff Energy = 17.933091 
diff Energy = 117.332446 
diff Energy = 33.826880 
diff Energy = 91.670953 
diff Energy = 28.650061 
Finish ICM step! 
iter = 3, loglik= 138171888.000000, dloglik=0.008987 
predict Y and V! 
diff Energy = 49.045028 
diff Energy = 104.155595 
diff Energy = 22.352044 
diff Energy = 65.136575 
diff Energy = 194.797700 
diff Energy = 68.404552 
diff Energy = 75.032107 
diff Energy = 109.223915 
diff Energy = 252.016206 
diff Energy = 147.779925 
Finish ICM step! 
iter = 4, loglik= 138644896.000000, dloglik=0.003423 
predict Y and V! 
diff Energy = 74.578988 
diff Energy = 101.377873 
diff Energy = 48.701550 
diff Energy = 36.747401 
diff Energy = 175.613942 
diff Energy = 21.324269 
diff Energy = 51.715278 
diff Energy = 266.192480 
diff Energy = 199.343725 
Finish ICM step! 
iter = 5, loglik= 138893072.000000, dloglik=0.001790 
predict Y and V! 
diff Energy = 59.482722 
diff Energy = 22.878338 
diff Energy = 52.382020 
diff Energy = 63.233526 
diff Energy = 153.334974 
diff Energy = 39.558307 
diff Energy = 33.174847 
diff Energy = 65.957361 
diff Energy = 75.239975 
diff Energy = 115.350448 
Finish ICM step! 
iter = 6, loglik= 139027536.000000, dloglik=0.000968 
predict Y and V! 
diff Energy = 11.024321 
diff Energy = 25.653935 
diff Energy = 53.475826 
diff Energy = 91.265642 
diff Energy = 12.154589 
diff Energy = 10.053829 
diff Energy = 47.236427 
diff Energy = 91.819413 
diff Energy = 141.383747 
Finish ICM step! 
iter = 7, loglik= 139114656.000000, dloglik=0.000627 
predict Y and V! 
diff Energy = 12.496777 
diff Energy = 26.103645 
diff Energy = 35.046051 
diff Energy = 58.753302 
diff Energy = 55.629874 
diff Energy = 53.167219 
diff Energy = 62.447409 
diff Energy = 152.581309 
diff Energy = 34.472741 
Finish ICM step! 
iter = 8, loglik= 139177392.000000, dloglik=0.000451 
predict Y and V! 
diff Energy = 4.980686 
diff Energy = 17.036775 
diff Energy = 3.892663 
diff Energy = 77.555951 
diff Energy = 35.155335 
diff Energy = 4.395468 
diff Energy = 25.321558 
diff Energy = 35.108700 
diff Energy = 20.356422 
diff Energy = 15.701547 
Finish ICM step! 
iter = 9, loglik= 139223216.000000, dloglik=0.000329 
predict Y and V! 
diff Energy = 28.645912 
diff Energy = 2.149546 
diff Energy = 21.760443 
diff Energy = 21.053086 
diff Energy = 1.153084 
diff Energy = 3.138064 
diff Energy = 28.189961 
diff Energy = 38.793369 
Finish ICM step! 
iter = 10, loglik= 139257232.000000, dloglik=0.000244 
predict Y and V! 
diff Energy = 1.482103 
diff Energy = 7.362973 
diff Energy = 2.542053 
diff Energy = 27.721781 
diff Energy = 18.925757 
diff Energy = 22.966240 
diff Energy = 1.601672 
diff Energy = 7.278250 
diff Energy = 3.076452 
diff Energy = 47.545133 
Finish ICM step! 
iter = 11, loglik= 139283424.000000, dloglik=0.000188 
predict Y and V! 
diff Energy = 1.887336 
diff Energy = 4.620303 
diff Energy = 2.972127 
diff Energy = 37.181059 
diff Energy = 81.436683 
diff Energy = 1.175414 
diff Energy = 1.191526 
diff Energy = 2.116341 
diff Energy = 0.104530 
diff Energy = 20.871017 
Finish ICM step! 
iter = 12, loglik= 139303760.000000, dloglik=0.000146 
predict Y and V! 
diff Energy = 2.726554 
diff Energy = 4.510019 
diff Energy = 1.357530 
diff Energy = 33.409461 
diff Energy = 3.950385 
diff Energy = 2.527382 
diff Energy = 27.090958 
diff Energy = 13.649274 
diff Energy = 1.621386 
diff Energy = 18.760231 
Finish ICM step! 
iter = 13, loglik= 139319936.000000, dloglik=0.000116 
predict Y and V! 
diff Energy = 7.351030 
diff Energy = 27.174129 
diff Energy = 37.556443 
diff Energy = 2.560615 
diff Energy = 0.096150 
diff Energy = 19.502592 
diff Energy = 4.036755 
diff Energy = 2.694820 
Finish ICM step! 
iter = 14, loglik= 139333376.000000, dloglik=0.000096 
predict Y and V! 
diff Energy = 1.786082 
diff Energy = 30.195095 
diff Energy = 7.430164 
diff Energy = 4.152856 
diff Energy = 1.515100 
diff Energy = 11.677433 
diff Energy = 1.501892 
diff Energy = 3.761219 
Finish ICM step! 
iter = 15, loglik= 139344304.000000, dloglik=0.000078 
predict Y and V! 
diff Energy = 12.757755 
diff Energy = 2.159696 
diff Energy = 31.877834 
diff Energy = 7.240987 
diff Energy = 1.942341 
diff Energy = 2.361845 
diff Energy = 1.816666 
diff Energy = 69.017887 
diff Energy = 0.195232 
Finish ICM step! 
iter = 16, loglik= 139353936.000000, dloglik=0.000069 
predict Y and V! 
diff Energy = 0.878797 
diff Energy = 4.894152 
diff Energy = 39.354603 
diff Energy = 23.296638 
diff Energy = 4.367170 
diff Energy = 21.770001 
diff Energy = 17.248262 
diff Energy = 8.349861 
diff Energy = 3.919953 
Finish ICM step! 
iter = 17, loglik= 139362048.000000, dloglik=0.000058 
predict Y and V! 
diff Energy = 0.669111 
diff Energy = 11.814005 
diff Energy = 0.250763 
diff Energy = 67.044900 
diff Energy = 13.241518 
diff Energy = 2.240228 
diff Energy = 12.930349 
diff Energy = 0.816174 
diff Energy = 18.717959 
Finish ICM step! 
iter = 18, loglik= 139369712.000000, dloglik=0.000055 
predict Y and V! 
diff Energy = 0.150689 
diff Energy = 6.747385 
diff Energy = 0.371383 
diff Energy = 27.071716 
diff Energy = 3.569755 
diff Energy = 5.092046 
diff Energy = 1.101626 
diff Energy = 10.516120 
diff Energy = 7.135262 
Finish ICM step! 
iter = 19, loglik= 139376160.000000, dloglik=0.000046 
predict Y and V! 
diff Energy = 0.271375 
diff Energy = 21.427686 
diff Energy = 21.284845 
diff Energy = 52.499627 
diff Energy = 0.156636 
diff Energy = 18.092578 
Finish ICM step! 
iter = 20, loglik= 139382864.000000, dloglik=0.000048 
predict Y and V! 
diff Energy = 6.680213 
diff Energy = 7.182944 
diff Energy = 12.578596 
diff Energy = 4.350709 
diff Energy = 0.816422 
diff Energy = 3.508218 
diff Energy = 16.403959 
diff Energy = 1.456686 
diff Energy = 0.120466 
Finish ICM step! 
iter = 21, loglik= 139389552.000000, dloglik=0.000048 
predict Y and V! 
diff Energy = 0.389062 
diff Energy = 0.313107 
diff Energy = 2.353564 
diff Energy = 13.563934 
diff Energy = 2.256032 
diff Energy = 1.269368 
diff Energy = 3.132061 
diff Energy = 16.182636 
Finish ICM step! 
iter = 22, loglik= 139396832.000000, dloglik=0.000052 
predict Y and V! 
diff Energy = 2.561918 
diff Energy = 0.989667 
diff Energy = 21.337993 
diff Energy = 3.196534 
diff Energy = 9.897781 
diff Energy = 6.709386 
diff Energy = 3.277394 
diff Energy = 9.992235 
diff Energy = 21.669969 
Finish ICM step! 
iter = 23, loglik= 139404624.000000, dloglik=0.000056 
predict Y and V! 
diff Energy = 2.820962 
diff Energy = 2.467088 
diff Energy = 27.463752 
diff Energy = 0.897261 
diff Energy = 10.367794 
diff Energy = 1.592307 
diff Energy = 7.871924 
diff Energy = 1.715343 
diff Energy = 0.529060 
Finish ICM step! 
iter = 24, loglik= 139412992.000000, dloglik=0.000060 
predict Y and V! 
diff Energy = 4.851891 
diff Energy = 7.146748 
diff Energy = 26.318186 
diff Energy = 6.241606 
diff Energy = 60.022656 
diff Energy = 2.744611 
diff Energy = 0.548953 
diff Energy = 10.889957 
diff Energy = 1.616013 
Finish ICM step! 
iter = 25, loglik= 139421520.000000, dloglik=0.000061 
predict Y and V! 
diff Energy = 7.539250 
diff Energy = 9.759180 
diff Energy = 1.284206 
Finish ICM step! 
iter = 26, loglik= 139430784.000000, dloglik=0.000066 
predict Y and V! 
diff Energy = 1.244842 
diff Energy = 2.156553 
diff Energy = 18.064978 
diff Energy = 6.560390 
diff Energy = 9.736007 
diff Energy = 10.499290 
diff Energy = 1.275451 
Finish ICM step! 
iter = 27, loglik= 139439824.000000, dloglik=0.000065 
predict Y and V! 
diff Energy = 0.377608 
diff Energy = 0.944402 
diff Energy = 5.551519 
diff Energy = 17.944122 
diff Energy = 0.501145 
diff Energy = 12.948831 
diff Energy = 3.130551 
diff Energy = 1.101596 
diff Energy = 6.915240 
diff Energy = 14.576419 
Finish ICM step! 
iter = 28, loglik= 139449328.000000, dloglik=0.000068 
predict Y and V! 
diff Energy = 2.955867 
diff Energy = 2.799920 
diff Energy = 22.160770 
diff Energy = 0.555261 
diff Energy = 7.088745 
diff Energy = 13.265100 
diff Energy = 2.534576 
Finish ICM step! 
iter = 29, loglik= 139458736.000000, dloglik=0.000067 
predict Y and V! 
diff Energy = 0.482278 
diff Energy = 7.332948 
diff Energy = 0.585900 
diff Energy = 14.830725 
diff Energy = 0.652428 
diff Energy = 0.697756 
diff Energy = 13.885258 
Finish ICM step! 
iter = 30, loglik= 139467984.000000, dloglik=0.000066 
26358.3 sec elapsed
**** Job ends ****
Thu May  4 12:02:12 EDT 2023
