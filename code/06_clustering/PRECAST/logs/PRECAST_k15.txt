Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.1.x
**** Job starts ****
Tue Nov  1 15:50:34 EDT 2022
**** JHPCE info ****
User: mtippani
Job id: 617492
Job name: PRECAST_k15
Hostname: compute-095.cm.cluster
Task id: undefined
Unloading conda_R/4.1.x
Loading conda_R/devel

The following have been reloaded with a version change:
  1) conda_R/4.1.x => conda_R/devel


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.6.14
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/devel
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14143 samples within 1 assay 
Active assay: RNA (2000 features, 1397 variable features)

[[2]]
An object of class Seurat 
2000 features across 19678 samples within 1 assay 
Active assay: RNA (2000 features, 1541 variable features)

[[3]]
An object of class Seurat 
2000 features across 14104 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8662 samples within 1 assay 
Active assay: RNA (2000 features, 1374 variable features)

[[5]]
An object of class Seurat 
2000 features across 14390 samples within 1 assay 
Active assay: RNA (2000 features, 1495 variable features)

[[6]]
An object of class Seurat 
2000 features across 18709 samples within 1 assay 
Active assay: RNA (2000 features, 1159 variable features)

[[7]]
An object of class Seurat 
2000 features across 20614 samples within 1 assay 
Active assay: RNA (2000 features, 1612 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1200 variable features)

[[9]]
An object of class Seurat 
2000 features across 18041 samples within 1 assay 
Active assay: RNA (2000 features, 1385 variable features)

Neighbors were identified for 14143 out of 14143 spots.
Neighbors were identified for 19678 out of 19678 spots.
Neighbors were identified for 14104 out of 14104 spots.
Neighbors were identified for 8662 out of 8662 spots.
Neighbors were identified for 14390 out of 14390 spots.
Neighbors were identified for 18709 out of 18709 spots.
Neighbors were identified for 20611 out of 20614 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18038 out of 18041 spots.
Intergrative data info.: 9 samples, 2000 genes X 136730 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 3.984400 
diff Energy = 10.324248 
diff Energy = 2.575838 
diff Energy = 16.371940 
Finish ICM step! 
iter = 2, loglik= -69761264.000000, dloglik=0.967515 
predict Y and V! 
diff Energy = 69.362615 
diff Energy = 25.366534 
diff Energy = 52.623123 
diff Energy = 68.187018 
diff Energy = 27.222731 
diff Energy = 5.419403 
diff Energy = 37.015689 
diff Energy = 24.377941 
diff Energy = 19.546926 
Finish ICM step! 
iter = 3, loglik= -68958224.000000, dloglik=0.011511 
predict Y and V! 
diff Energy = 315.348295 
diff Energy = 288.401399 
diff Energy = 280.341809 
diff Energy = 187.201594 
diff Energy = 318.345146 
diff Energy = 276.459584 
diff Energy = 413.375368 
diff Energy = 161.379488 
diff Energy = 480.609840 
Finish ICM step! 
iter = 4, loglik= -68657272.000000, dloglik=0.004364 
predict Y and V! 
diff Energy = 93.785441 
diff Energy = 144.272875 
diff Energy = 129.596251 
diff Energy = 92.649574 
diff Energy = 148.458844 
diff Energy = 147.875184 
diff Energy = 212.295043 
diff Energy = 72.426216 
diff Energy = 168.164902 
Finish ICM step! 
iter = 5, loglik= -68483840.000000, dloglik=0.002526 
predict Y and V! 
diff Energy = 52.923692 
diff Energy = 55.602931 
diff Energy = 70.635803 
diff Energy = 83.920378 
diff Energy = 140.243025 
diff Energy = 66.278433 
diff Energy = 123.968275 
diff Energy = 46.258097 
diff Energy = 147.836627 
Finish ICM step! 
iter = 6, loglik= -68377832.000000, dloglik=0.001548 
predict Y and V! 
diff Energy = 74.132982 
diff Energy = 68.435848 
diff Energy = 59.357960 
diff Energy = 57.171440 
diff Energy = 102.629172 
diff Energy = 43.860522 
diff Energy = 116.003020 
diff Energy = 29.718318 
diff Energy = 68.224764 
Finish ICM step! 
iter = 7, loglik= -68308144.000000, dloglik=0.001019 
predict Y and V! 
diff Energy = 4.178714 
diff Energy = 24.833738 
diff Energy = 40.102461 
diff Energy = 32.912828 
diff Energy = 29.553729 
diff Energy = 13.431157 
diff Energy = 48.177363 
diff Energy = 24.237939 
diff Energy = 33.860001 
Finish ICM step! 
iter = 8, loglik= -68257912.000000, dloglik=0.000735 
predict Y and V! 
diff Energy = 9.523190 
diff Energy = 70.833240 
diff Energy = 50.351201 
diff Energy = 28.129193 
diff Energy = 59.577389 
diff Energy = 24.796261 
diff Energy = 25.934941 
diff Energy = 60.933952 
Finish ICM step! 
iter = 9, loglik= -68220752.000000, dloglik=0.000544 
predict Y and V! 
diff Energy = 52.496806 
diff Energy = 32.081269 
diff Energy = 6.927062 
diff Energy = 12.414007 
diff Energy = 12.043730 
diff Energy = 8.324869 
diff Energy = 54.570589 
diff Energy = 30.678579 
Finish ICM step! 
iter = 10, loglik= -68192824.000000, dloglik=0.000409 
predict Y and V! 
diff Energy = 8.029003 
diff Energy = 1.135009 
diff Energy = 5.100192 
diff Energy = 17.624825 
diff Energy = 40.320171 
diff Energy = 30.599177 
diff Energy = 75.423841 
diff Energy = 26.948118 
diff Energy = 13.155424 
Finish ICM step! 
iter = 11, loglik= -68171776.000000, dloglik=0.000309 
predict Y and V! 
diff Energy = 6.765248 
diff Energy = 0.251478 
diff Energy = 6.858187 
diff Energy = 1.958182 
diff Energy = 28.690846 
diff Energy = 7.060933 
diff Energy = 22.251654 
diff Energy = 17.763074 
diff Energy = 13.336350 
Finish ICM step! 
iter = 12, loglik= -68154712.000000, dloglik=0.000250 
predict Y and V! 
diff Energy = 10.439031 
diff Energy = 14.689507 
diff Energy = 1.250246 
diff Energy = 9.040958 
diff Energy = 3.689760 
diff Energy = 20.390742 
diff Energy = 20.094580 
diff Energy = 5.851611 
Finish ICM step! 
iter = 13, loglik= -68141296.000000, dloglik=0.000197 
predict Y and V! 
diff Energy = 47.967432 
diff Energy = 1.129192 
diff Energy = 5.851852 
diff Energy = 33.035128 
diff Energy = 1.118693 
diff Energy = 25.497521 
diff Energy = 2.061894 
diff Energy = 0.917072 
Finish ICM step! 
iter = 14, loglik= -68130232.000000, dloglik=0.000162 
predict Y and V! 
diff Energy = 6.413730 
diff Energy = 5.560519 
diff Energy = 25.334171 
diff Energy = 7.314677 
diff Energy = 1.603619 
diff Energy = 7.453800 
diff Energy = 3.735865 
Finish ICM step! 
iter = 15, loglik= -68120528.000000, dloglik=0.000142 
predict Y and V! 
diff Energy = 0.920011 
diff Energy = 4.121418 
diff Energy = 0.394230 
diff Energy = 19.545116 
diff Energy = 16.916129 
diff Energy = 23.166948 
diff Energy = 1.818550 
diff Energy = 24.941873 
Finish ICM step! 
iter = 16, loglik= -68112360.000000, dloglik=0.000120 
predict Y and V! 
diff Energy = 1.287209 
diff Energy = 2.989460 
diff Energy = 0.866304 
diff Energy = 1.163501 
diff Energy = 19.608092 
diff Energy = 7.095961 
diff Energy = 24.173832 
diff Energy = 25.481225 
diff Energy = 2.554786 
Finish ICM step! 
iter = 17, loglik= -68105536.000000, dloglik=0.000100 
predict Y and V! 
diff Energy = 0.203685 
diff Energy = 0.909868 
diff Energy = 3.175443 
diff Energy = 9.112975 
diff Energy = 14.803503 
diff Energy = 10.326687 
diff Energy = 2.435453 
Finish ICM step! 
iter = 18, loglik= -68099080.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 4.995699 
diff Energy = 0.609618 
diff Energy = 1.683766 
diff Energy = 1.792887 
diff Energy = 26.454093 
diff Energy = 0.868406 
diff Energy = 20.609754 
diff Energy = 10.749368 
diff Energy = 9.249645 
Finish ICM step! 
iter = 19, loglik= -68093016.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 1.657681 
diff Energy = 1.911449 
diff Energy = 12.291496 
diff Energy = 30.672896 
diff Energy = 16.271701 
diff Energy = 24.555863 
diff Energy = 3.521348 
Finish ICM step! 
iter = 20, loglik= -68087272.000000, dloglik=0.000084 
predict Y and V! 
diff Energy = 1.374470 
diff Energy = 0.845015 
diff Energy = 1.107946 
diff Energy = 47.328253 
diff Energy = 16.930246 
diff Energy = 18.818902 
diff Energy = 19.572992 
diff Energy = 29.462649 
Finish ICM step! 
iter = 21, loglik= -68081656.000000, dloglik=0.000082 
predict Y and V! 
diff Energy = 4.922001 
diff Energy = 1.422546 
diff Energy = 14.647253 
diff Energy = 42.867530 
diff Energy = 17.424798 
diff Energy = 0.468859 
diff Energy = 22.950334 
Finish ICM step! 
iter = 22, loglik= -68075752.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 0.402272 
diff Energy = 0.986254 
diff Energy = 3.417372 
diff Energy = 29.013874 
diff Energy = 13.036496 
diff Energy = 15.294876 
diff Energy = 1.606325 
diff Energy = 1.668306 
Finish ICM step! 
iter = 23, loglik= -68069504.000000, dloglik=0.000092 
predict Y and V! 
diff Energy = 2.155387 
diff Energy = 0.372474 
diff Energy = 5.983010 
diff Energy = 11.784294 
diff Energy = 32.697825 
diff Energy = 2.997699 
diff Energy = 11.331130 
diff Energy = 1.481233 
diff Energy = 4.097593 
Finish ICM step! 
iter = 24, loglik= -68063136.000000, dloglik=0.000094 
predict Y and V! 
diff Energy = 0.826820 
diff Energy = 0.551287 
diff Energy = 1.699618 
diff Energy = 26.747079 
diff Energy = 8.272857 
diff Energy = 12.941025 
diff Energy = 14.993747 
diff Energy = 13.882375 
Finish ICM step! 
iter = 25, loglik= -68056408.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 9.702608 
diff Energy = 9.702596 
diff Energy = 13.651988 
diff Energy = 5.622496 
diff Energy = 6.372547 
diff Energy = 0.292403 
diff Energy = 5.359471 
Finish ICM step! 
iter = 26, loglik= -68049464.000000, dloglik=0.000102 
predict Y and V! 
diff Energy = 0.692622 
diff Energy = 1.712903 
diff Energy = 8.345016 
diff Energy = 25.342582 
diff Energy = 5.207380 
diff Energy = 14.018669 
diff Energy = 0.366853 
diff Energy = 29.541688 
Finish ICM step! 
iter = 27, loglik= -68042568.000000, dloglik=0.000101 
predict Y and V! 
diff Energy = 1.266204 
diff Energy = 5.322478 
diff Energy = 19.129710 
diff Energy = 1.291225 
diff Energy = 11.417274 
diff Energy = 67.874103 
Finish ICM step! 
iter = 28, loglik= -68035536.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 0.724075 
diff Energy = 6.204745 
diff Energy = 0.577509 
diff Energy = 30.166954 
diff Energy = 1.493327 
diff Energy = 12.915371 
Finish ICM step! 
iter = 29, loglik= -68028304.000000, dloglik=0.000106 
predict Y and V! 
diff Energy = 10.662856 
diff Energy = 3.921566 
diff Energy = 2.525798 
diff Energy = 9.211169 
diff Energy = 8.807039 
diff Energy = 1.744578 
diff Energy = 7.023263 
diff Energy = 1.899900 
Finish ICM step! 
iter = 30, loglik= -68020768.000000, dloglik=0.000111 
17178.034 sec elapsed
Error in here("processed-data", "06_clustering", "PRECAST", "PRECASTObj.Rdata") : 
  could not find function "here"
Calls: save
Execution halted
**** Job ends ****
Tue Nov  1 20:45:49 EDT 2022
