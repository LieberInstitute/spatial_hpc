**** Job starts ****
Tue Mar 21 19:53:08 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 21
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:53:11 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:23 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-097.cm.cluster
Task id: 21
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:25 EDT 2023
**** Job starts ****
Wed Mar 22 05:12:30 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-093.cm.cluster
Task id: 21
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79853504.000000, dloglik=0.962815 
predict Y and V! 
diff Energy = 48.248186 
diff Energy = 72.149291 
diff Energy = 3.179299 
diff Energy = 79.642635 
diff Energy = 57.843656 
diff Energy = 2.625096 
diff Energy = 4.294596 
diff Energy = 60.751393 
Finish ICM step! 
iter = 3, loglik= -78798400.000000, dloglik=0.013213 
predict Y and V! 
diff Energy = 129.072683 
diff Energy = 111.426536 
diff Energy = 87.678898 
diff Energy = 61.860441 
diff Energy = 102.432407 
diff Energy = 63.992806 
diff Energy = 134.013167 
diff Energy = 76.116398 
diff Energy = 237.484987 
diff Energy = 148.606800 
Finish ICM step! 
iter = 4, loglik= -78456544.000000, dloglik=0.004338 
predict Y and V! 
diff Energy = 85.561048 
diff Energy = 138.930512 
diff Energy = 55.514531 
diff Energy = 26.030688 
diff Energy = 100.884312 
diff Energy = 28.951646 
diff Energy = 104.388700 
diff Energy = 45.414840 
diff Energy = 219.198914 
diff Energy = 168.462162 
Finish ICM step! 
iter = 5, loglik= -78280128.000000, dloglik=0.002249 
predict Y and V! 
diff Energy = 63.033116 
diff Energy = 67.070898 
diff Energy = 42.127117 
diff Energy = 53.778190 
diff Energy = 96.675871 
diff Energy = 0.819213 
diff Energy = 66.100485 
diff Energy = 51.514254 
diff Energy = 156.348817 
diff Energy = 156.551284 
Finish ICM step! 
iter = 6, loglik= -78170400.000000, dloglik=0.001402 
predict Y and V! 
diff Energy = 53.122145 
diff Energy = 14.361281 
diff Energy = 16.574560 
diff Energy = 47.061562 
diff Energy = 38.023345 
diff Energy = 15.000270 
diff Energy = 64.030218 
diff Energy = 9.923978 
diff Energy = 114.993386 
diff Energy = 41.799307 
Finish ICM step! 
iter = 7, loglik= -78095096.000000, dloglik=0.000963 
predict Y and V! 
diff Energy = 74.615172 
diff Energy = 21.747919 
diff Energy = 4.269600 
diff Energy = 19.985601 
diff Energy = 44.238470 
diff Energy = 17.560564 
diff Energy = 7.681412 
diff Energy = 23.601434 
diff Energy = 5.267719 
diff Energy = 63.203572 
Finish ICM step! 
iter = 8, loglik= -78039208.000000, dloglik=0.000716 
predict Y and V! 
diff Energy = 49.539165 
diff Energy = 1.525303 
diff Energy = 14.823690 
diff Energy = 13.276985 
diff Energy = 6.022369 
diff Energy = 57.054682 
diff Energy = 14.975623 
diff Energy = 54.736005 
diff Energy = 14.759051 
Finish ICM step! 
iter = 9, loglik= -77995560.000000, dloglik=0.000559 
predict Y and V! 
diff Energy = 5.446052 
diff Energy = 6.621051 
diff Energy = 34.978008 
diff Energy = 0.311652 
diff Energy = 2.169544 
diff Energy = 6.138396 
diff Energy = 0.692382 
diff Energy = 93.860422 
Finish ICM step! 
iter = 10, loglik= -77961128.000000, dloglik=0.000441 
predict Y and V! 
diff Energy = 27.704943 
diff Energy = 21.077313 
diff Energy = 13.762584 
diff Energy = 6.348255 
diff Energy = 4.351472 
diff Energy = 1.114110 
diff Energy = 17.413694 
diff Energy = 5.680222 
diff Energy = 10.882349 
diff Energy = 14.165915 
Finish ICM step! 
iter = 11, loglik= -77935120.000000, dloglik=0.000334 
predict Y and V! 
diff Energy = 5.721920 
diff Energy = 20.122344 
diff Energy = 0.498311 
diff Energy = 32.117123 
diff Energy = 11.232901 
diff Energy = 9.580865 
diff Energy = 3.154552 
diff Energy = 21.214686 
diff Energy = 5.020086 
Finish ICM step! 
iter = 12, loglik= -77915128.000000, dloglik=0.000257 
predict Y and V! 
diff Energy = 20.077127 
diff Energy = 10.243665 
diff Energy = 4.855079 
diff Energy = 13.102604 
diff Energy = 7.729318 
diff Energy = 4.377307 
diff Energy = 0.000286 
diff Energy = 0.591330 
diff Energy = 6.620652 
diff Energy = 88.887671 
Finish ICM step! 
iter = 13, loglik= -77899544.000000, dloglik=0.000200 
predict Y and V! 
diff Energy = 1.706256 
diff Energy = 15.314518 
diff Energy = 10.375391 
diff Energy = 8.512142 
diff Energy = 11.739540 
diff Energy = 7.199574 
diff Energy = 1.332033 
diff Energy = 32.544508 
diff Energy = 3.779944 
Finish ICM step! 
iter = 14, loglik= -77886752.000000, dloglik=0.000164 
predict Y and V! 
diff Energy = 9.077364 
diff Energy = 2.367859 
diff Energy = 13.954128 
diff Energy = 2.836489 
diff Energy = 4.594211 
diff Energy = 4.159170 
diff Energy = 22.100288 
diff Energy = 1.635019 
Finish ICM step! 
iter = 15, loglik= -77876432.000000, dloglik=0.000133 
predict Y and V! 
diff Energy = 10.476312 
diff Energy = 1.746081 
diff Energy = 16.888907 
diff Energy = 1.581922 
diff Energy = 7.702058 
diff Energy = 13.378105 
diff Energy = 2.462904 
diff Energy = 9.651909 
diff Energy = 0.508816 
Finish ICM step! 
iter = 16, loglik= -77867648.000000, dloglik=0.000113 
predict Y and V! 
diff Energy = 2.249315 
diff Energy = 0.950354 
diff Energy = 11.835313 
diff Energy = 3.019700 
diff Energy = 1.471832 
diff Energy = 1.644634 
diff Energy = 19.388676 
diff Energy = 4.207042 
Finish ICM step! 
iter = 17, loglik= -77859832.000000, dloglik=0.000100 
predict Y and V! 
diff Energy = 1.206044 
diff Energy = 4.061701 
diff Energy = 12.362810 
diff Energy = 4.066391 
diff Energy = 28.674795 
diff Energy = 0.962240 
diff Energy = 0.982281 
diff Energy = 17.704442 
diff Energy = 12.589360 
diff Energy = 3.916626 
Finish ICM step! 
iter = 18, loglik= -77853496.000000, dloglik=0.000081 
predict Y and V! 
diff Energy = 0.752981 
diff Energy = 2.998472 
diff Energy = 3.264553 
diff Energy = 15.830019 
diff Energy = 102.592608 
diff Energy = 8.751825 
diff Energy = 9.544329 
diff Energy = 18.374021 
diff Energy = 3.656691 
Finish ICM step! 
iter = 19, loglik= -77847312.000000, dloglik=0.000079 
predict Y and V! 
diff Energy = 16.436369 
diff Energy = 9.118147 
diff Energy = 0.275043 
diff Energy = 8.082984 
diff Energy = 69.732800 
diff Energy = 7.993377 
diff Energy = 7.333319 
diff Energy = 36.224164 
Finish ICM step! 
iter = 20, loglik= -77841320.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 0.619692 
diff Energy = 4.116556 
diff Energy = 14.153747 
diff Energy = 1.656793 
diff Energy = 1.465527 
diff Energy = 3.708803 
diff Energy = 5.023632 
diff Energy = 4.761570 
Finish ICM step! 
iter = 21, loglik= -77835200.000000, dloglik=0.000079 
predict Y and V! 
diff Energy = 4.163158 
diff Energy = 41.816859 
diff Energy = 2.736368 
diff Energy = 5.508270 
diff Energy = 5.650934 
diff Energy = 6.904614 
diff Energy = 74.170139 
diff Energy = 27.534005 
Finish ICM step! 
iter = 22, loglik= -77828904.000000, dloglik=0.000081 
predict Y and V! 
diff Energy = 2.823850 
diff Energy = 21.160825 
diff Energy = 4.589732 
diff Energy = 1.355729 
diff Energy = 20.210432 
diff Energy = 0.200607 
diff Energy = 1.611309 
diff Energy = 11.225122 
diff Energy = 15.882851 
Finish ICM step! 
iter = 23, loglik= -77821648.000000, dloglik=0.000093 
predict Y and V! 
diff Energy = 6.115844 
diff Energy = 19.412208 
diff Energy = 1.048333 
diff Energy = 0.912585 
diff Energy = 22.146264 
diff Energy = 4.311843 
diff Energy = 0.019058 
diff Energy = 17.331273 
Finish ICM step! 
iter = 24, loglik= -77813928.000000, dloglik=0.000099 
predict Y and V! 
diff Energy = 1.723615 
diff Energy = 3.792340 
diff Energy = 1.836872 
diff Energy = 3.345647 
diff Energy = 11.176416 
diff Energy = 22.904948 
diff Energy = 1.489083 
diff Energy = 4.122931 
diff Energy = 6.247892 
diff Energy = 3.820599 
Finish ICM step! 
iter = 25, loglik= -77805992.000000, dloglik=0.000102 
predict Y and V! 
diff Energy = 0.301959 
diff Energy = 1.347108 
diff Energy = 1.444984 
diff Energy = 1.982625 
diff Energy = 4.336618 
diff Energy = 6.596155 
diff Energy = 3.635812 
diff Energy = 8.377856 
diff Energy = 17.444624 
diff Energy = 7.703385 
Finish ICM step! 
iter = 26, loglik= -77797624.000000, dloglik=0.000108 
predict Y and V! 
diff Energy = 10.296702 
diff Energy = 15.750060 
diff Energy = 4.768535 
diff Energy = 2.994627 
diff Energy = 3.342640 
diff Energy = 1.181512 
diff Energy = 23.837999 
diff Energy = 7.454931 
diff Energy = 14.377027 
Finish ICM step! 
iter = 27, loglik= -77789592.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 1.002285 
diff Energy = 5.226237 
diff Energy = 1.494572 
diff Energy = 0.930954 
diff Energy = 1.511135 
diff Energy = 0.312317 
diff Energy = 9.550820 
diff Energy = 0.912535 
diff Energy = 5.338922 
Finish ICM step! 
iter = 28, loglik= -77781256.000000, dloglik=0.000107 
predict Y and V! 
diff Energy = 0.202810 
diff Energy = 2.814899 
diff Energy = 5.966067 
diff Energy = 0.793263 
diff Energy = 12.869282 
diff Energy = 0.119642 
diff Energy = 11.588267 
diff Energy = 1.873990 
diff Energy = 22.212107 
diff Energy = 11.435945 
Finish ICM step! 
iter = 29, loglik= -77772768.000000, dloglik=0.000109 
predict Y and V! 
diff Energy = 0.881618 
diff Energy = 2.293677 
diff Energy = 1.952725 
diff Energy = 0.546029 
diff Energy = 9.667518 
diff Energy = 18.484035 
diff Energy = 7.715201 
diff Energy = 3.845219 
diff Energy = 17.526392 
Finish ICM step! 
iter = 30, loglik= -77763704.000000, dloglik=0.000117 
27943.787 sec elapsed
**** Job ends ****
Wed Mar 22 13:08:16 EDT 2023
