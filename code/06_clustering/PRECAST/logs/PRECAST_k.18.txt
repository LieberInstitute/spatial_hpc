Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.1.x
**** Job starts ****
Wed Nov  2 15:33:33 EDT 2022
**** JHPCE info ****
User: mtippani
Job id: 621925
Job name: PRECAST_k16-20
Hostname: compute-093.cm.cluster
Task id: 18
Unloading conda_R/4.1.x
Loading conda_R/devel

The following have been reloaded with a version change:
  1) conda_R/4.1.x => conda_R/devel


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.6.14
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/devel
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14143 samples within 1 assay 
Active assay: RNA (2000 features, 1397 variable features)

[[2]]
An object of class Seurat 
2000 features across 19678 samples within 1 assay 
Active assay: RNA (2000 features, 1541 variable features)

[[3]]
An object of class Seurat 
2000 features across 14104 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8662 samples within 1 assay 
Active assay: RNA (2000 features, 1374 variable features)

[[5]]
An object of class Seurat 
2000 features across 14390 samples within 1 assay 
Active assay: RNA (2000 features, 1495 variable features)

[[6]]
An object of class Seurat 
2000 features across 18709 samples within 1 assay 
Active assay: RNA (2000 features, 1159 variable features)

[[7]]
An object of class Seurat 
2000 features across 20614 samples within 1 assay 
Active assay: RNA (2000 features, 1612 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1200 variable features)

[[9]]
An object of class Seurat 
2000 features across 18041 samples within 1 assay 
Active assay: RNA (2000 features, 1385 variable features)

Neighbors were identified for 14143 out of 14143 spots.
Neighbors were identified for 19678 out of 19678 spots.
Neighbors were identified for 14104 out of 14104 spots.
Neighbors were identified for 8662 out of 8662 spots.
Neighbors were identified for 14390 out of 14390 spots.
Neighbors were identified for 18709 out of 18709 spots.
Neighbors were identified for 20611 out of 20614 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18038 out of 18041 spots.
Intergrative data info.: 9 samples, 2000 genes X 136730 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 18.680519 
Finish ICM step! 
iter = 2, loglik= -69746280.000000, dloglik=0.967522 
predict Y and V! 
diff Energy = 107.658882 
diff Energy = 15.677408 
diff Energy = 20.701260 
diff Energy = 115.127933 
diff Energy = 45.962248 
diff Energy = 58.483207 
diff Energy = 56.516906 
Finish ICM step! 
iter = 3, loglik= -68943960.000000, dloglik=0.011503 
predict Y and V! 
diff Energy = 338.942790 
diff Energy = 33.227088 
diff Energy = 176.459917 
diff Energy = 178.489165 
diff Energy = 354.220280 
diff Energy = 55.545624 
diff Energy = 427.125859 
diff Energy = 225.978018 
diff Energy = 501.780696 
Finish ICM step! 
iter = 4, loglik= -68639480.000000, dloglik=0.004416 
predict Y and V! 
diff Energy = 139.446907 
diff Energy = 95.427499 
diff Energy = 102.123032 
diff Energy = 157.427465 
diff Energy = 3.308587 
diff Energy = 261.916972 
diff Energy = 134.120141 
diff Energy = 174.983311 
Finish ICM step! 
iter = 5, loglik= -68468240.000000, dloglik=0.002495 
predict Y and V! 
diff Energy = 83.688436 
diff Energy = 16.530561 
diff Energy = 77.532677 
diff Energy = 89.068283 
diff Energy = 135.974359 
diff Energy = 7.687874 
diff Energy = 170.229337 
diff Energy = 96.587060 
diff Energy = 138.898277 
Finish ICM step! 
iter = 6, loglik= -68364904.000000, dloglik=0.001509 
predict Y and V! 
diff Energy = 66.771981 
diff Energy = 84.590678 
diff Energy = 81.260836 
diff Energy = 78.657307 
diff Energy = 72.426225 
diff Energy = 124.870160 
diff Energy = 83.160533 
diff Energy = 92.086990 
Finish ICM step! 
iter = 7, loglik= -68296016.000000, dloglik=0.001008 
predict Y and V! 
diff Energy = 48.698275 
diff Energy = 15.594910 
diff Energy = 13.502760 
diff Energy = 91.141405 
diff Energy = 96.609980 
diff Energy = 26.941009 
diff Energy = 120.423067 
diff Energy = 53.446175 
diff Energy = 84.566997 
Finish ICM step! 
iter = 8, loglik= -68246192.000000, dloglik=0.000730 
predict Y and V! 
diff Energy = 31.018277 
diff Energy = 1.648019 
diff Energy = 3.848336 
diff Energy = 21.935654 
diff Energy = 9.588681 
diff Energy = 47.768412 
diff Energy = 3.486794 
diff Energy = 69.681324 
diff Energy = 24.072399 
Finish ICM step! 
iter = 9, loglik= -68208504.000000, dloglik=0.000552 
predict Y and V! 
diff Energy = 29.527251 
diff Energy = 3.966378 
diff Energy = 16.091646 
diff Energy = 20.091308 
diff Energy = 14.479461 
diff Energy = 5.333325 
diff Energy = 20.670940 
diff Energy = 21.913723 
Finish ICM step! 
iter = 10, loglik= -68179888.000000, dloglik=0.000420 
predict Y and V! 
diff Energy = 48.774299 
diff Energy = 2.301795 
diff Energy = 13.398931 
diff Energy = 17.281679 
diff Energy = 8.763845 
diff Energy = 15.737298 
diff Energy = 42.585965 
diff Energy = 8.324807 
diff Energy = 40.540302 
Finish ICM step! 
iter = 11, loglik= -68158368.000000, dloglik=0.000316 
predict Y and V! 
diff Energy = 32.371088 
diff Energy = 5.806026 
diff Energy = 5.323335 
diff Energy = 10.078075 
diff Energy = 17.738932 
diff Energy = 14.712798 
diff Energy = 1.002172 
diff Energy = 6.595713 
Finish ICM step! 
iter = 12, loglik= -68141480.000000, dloglik=0.000248 
predict Y and V! 
diff Energy = 20.426845 
diff Energy = 1.105622 
diff Energy = 1.874370 
diff Energy = 2.029309 
diff Energy = 21.474218 
diff Energy = 4.801257 
diff Energy = 33.267466 
diff Energy = 26.820209 
diff Energy = 66.713291 
Finish ICM step! 
iter = 13, loglik= -68127968.000000, dloglik=0.000198 
predict Y and V! 
diff Energy = 47.547781 
diff Energy = 1.039234 
diff Energy = 26.888457 
diff Energy = 20.215711 
diff Energy = 58.913718 
diff Energy = 43.105640 
diff Energy = 33.053674 
diff Energy = 15.727837 
diff Energy = 1.118475 
Finish ICM step! 
iter = 14, loglik= -68117104.000000, dloglik=0.000159 
predict Y and V! 
diff Energy = 11.037648 
diff Energy = 2.339025 
diff Energy = 1.644006 
diff Energy = 15.734951 
diff Energy = 13.278136 
diff Energy = 9.588408 
diff Energy = 31.237916 
diff Energy = 15.398305 
diff Energy = 3.200852 
Finish ICM step! 
iter = 15, loglik= -68107456.000000, dloglik=0.000142 
predict Y and V! 
diff Energy = 28.814444 
diff Energy = 1.028325 
diff Energy = 48.647282 
diff Energy = 5.346831 
diff Energy = 5.879867 
diff Energy = 8.253100 
diff Energy = 27.502424 
diff Energy = 2.422811 
Finish ICM step! 
iter = 16, loglik= -68099296.000000, dloglik=0.000120 
predict Y and V! 
diff Energy = 18.022301 
diff Energy = 1.001201 
diff Energy = 5.971658 
diff Energy = 16.122862 
diff Energy = 4.440041 
diff Energy = 1.026050 
diff Energy = 15.839449 
diff Energy = 0.451156 
Finish ICM step! 
iter = 17, loglik= -68092248.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 17.025813 
diff Energy = 0.823299 
diff Energy = 17.363192 
diff Energy = 10.167329 
diff Energy = 30.326849 
diff Energy = 14.993089 
diff Energy = 0.992441 
diff Energy = 1.274149 
Finish ICM step! 
iter = 18, loglik= -68085752.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 21.836681 
diff Energy = 1.269537 
diff Energy = 2.622475 
diff Energy = 2.542990 
diff Energy = 22.985338 
diff Energy = 13.935555 
diff Energy = 29.375933 
Finish ICM step! 
iter = 19, loglik= -68079616.000000, dloglik=0.000090 
predict Y and V! 
diff Energy = 15.834627 
diff Energy = 2.355128 
diff Energy = 2.835000 
diff Energy = 33.504486 
diff Energy = 1.637773 
diff Energy = 16.738388 
diff Energy = 15.567241 
diff Energy = 7.614498 
Finish ICM step! 
iter = 20, loglik= -68073792.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 24.685150 
diff Energy = 0.827732 
diff Energy = 4.985582 
diff Energy = 16.389797 
diff Energy = 1.744486 
diff Energy = 73.539481 
diff Energy = 33.722594 
diff Energy = 14.384795 
Finish ICM step! 
iter = 21, loglik= -68068032.000000, dloglik=0.000085 
predict Y and V! 
diff Energy = 7.825850 
diff Energy = 2.109858 
diff Energy = 0.794410 
diff Energy = 1.579187 
diff Energy = 7.976304 
diff Energy = 7.238543 
diff Energy = 0.343312 
diff Energy = 12.895159 
Finish ICM step! 
iter = 22, loglik= -68062088.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 1.053917 
diff Energy = 0.040518 
diff Energy = 1.968087 
diff Energy = 3.653560 
diff Energy = 1.793161 
diff Energy = 33.326207 
diff Energy = 2.252785 
Finish ICM step! 
iter = 23, loglik= -68056184.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 11.008854 
diff Energy = 81.918818 
diff Energy = 14.093312 
diff Energy = 2.469466 
diff Energy = 5.401604 
diff Energy = 3.971048 
diff Energy = 0.739762 
Finish ICM step! 
iter = 24, loglik= -68050136.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 6.259204 
diff Energy = 0.813967 
diff Energy = 6.776070 
diff Energy = 2.719269 
diff Energy = 23.150355 
diff Energy = 17.300865 
diff Energy = 21.822468 
Finish ICM step! 
iter = 25, loglik= -68043584.000000, dloglik=0.000096 
predict Y and V! 
diff Energy = 8.040377 
diff Energy = 1.267753 
diff Energy = 2.017965 
diff Energy = 2.213918 
diff Energy = 13.657040 
diff Energy = 10.485937 
diff Energy = 5.287929 
diff Energy = 6.478401 
diff Energy = 11.014860 
Finish ICM step! 
iter = 26, loglik= -68036592.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 2.851990 
diff Energy = 0.172673 
diff Energy = 4.332590 
diff Energy = 10.389534 
diff Energy = 8.984565 
diff Energy = 13.202097 
diff Energy = 2.582348 
diff Energy = 12.452289 
Finish ICM step! 
iter = 27, loglik= -68029592.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 9.566482 
diff Energy = 1.592038 
diff Energy = 6.054952 
diff Energy = 0.396328 
diff Energy = 1.282381 
diff Energy = 3.125935 
diff Energy = 9.995102 
Finish ICM step! 
iter = 28, loglik= -68022464.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 4.865740 
diff Energy = 0.020479 
diff Energy = 0.848419 
diff Energy = 9.732418 
diff Energy = 21.249516 
diff Energy = 0.911381 
diff Energy = 0.654525 
Finish ICM step! 
iter = 29, loglik= -68015288.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 7.057796 
diff Energy = 7.933291 
diff Energy = 2.009229 
diff Energy = 12.822152 
diff Energy = 3.506015 
diff Energy = 29.938319 
diff Energy = 2.727682 
diff Energy = 8.051660 
Finish ICM step! 
iter = 30, loglik= -68007648.000000, dloglik=0.000112 
22659.433 sec elapsed
**** Job ends ****
Wed Nov  2 22:02:13 EDT 2022
**** Job starts ****
Tue Mar 21 19:52:53 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066427
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 18
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library(Seurat) : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 19:52:58 EDT 2023
**** Job starts ****
Tue Mar 21 20:03:08 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066438
Job name: PRECAST_k16-24
Hostname: compute-098.cm.cluster
Task id: 18
Loading conda_R/devel

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.6.14
  4) sge/8.1.9         9) conda_R/devel
  5) gcc/4.4.7

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Tue Mar 21 20:03:10 EDT 2023
**** Job starts ****
Tue Mar 21 21:56:24 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3066458
Job name: PRECAST_k16-24
Hostname: compute-093.cm.cluster
Task id: 18
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15520
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14140 samples within 1 assay 
Active assay: RNA (2000 features, 1403 variable features)

[[2]]
An object of class Seurat 
2000 features across 19639 samples within 1 assay 
Active assay: RNA (2000 features, 1524 variable features)

[[3]]
An object of class Seurat 
2000 features across 14101 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8661 samples within 1 assay 
Active assay: RNA (2000 features, 1367 variable features)

[[5]]
An object of class Seurat 
2000 features across 14381 samples within 1 assay 
Active assay: RNA (2000 features, 1494 variable features)

[[6]]
An object of class Seurat 
2000 features across 18701 samples within 1 assay 
Active assay: RNA (2000 features, 1146 variable features)

[[7]]
An object of class Seurat 
2000 features across 20598 samples within 1 assay 
Active assay: RNA (2000 features, 1623 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1214 variable features)

[[9]]
An object of class Seurat 
2000 features across 18016 samples within 1 assay 
Active assay: RNA (2000 features, 1363 variable features)

[[10]]
An object of class Seurat 
2000 features across 15345 samples within 1 assay 
Active assay: RNA (2000 features, 1509 variable features)

Neighbors were identified for 14140 out of 14140 spots.
Neighbors were identified for 19639 out of 19639 spots.
Neighbors were identified for 14101 out of 14101 spots.
Neighbors were identified for 8661 out of 8661 spots.
Neighbors were identified for 14381 out of 14381 spots.
Neighbors were identified for 18701 out of 18701 spots.
Neighbors were identified for 20595 out of 20598 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18012 out of 18016 spots.
Neighbors were identified for 15343 out of 15345 spots.
Intergrative data info.: 10 samples, 2000 genes X 151971 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
Finish ICM step! 
iter = 2, loglik= -79863592.000000, dloglik=0.962811 
predict Y and V! 
diff Energy = 46.501996 
diff Energy = 25.933462 
diff Energy = 9.493857 
diff Energy = 12.150148 
diff Energy = 78.367233 
diff Energy = 8.297994 
diff Energy = 49.592315 
diff Energy = 0.300284 
diff Energy = 57.872702 
diff Energy = 92.135909 
Finish ICM step! 
iter = 3, loglik= -78812064.000000, dloglik=0.013167 
predict Y and V! 
diff Energy = 61.239874 
diff Energy = 136.548993 
diff Energy = 120.602983 
diff Energy = 43.816187 
diff Energy = 126.744049 
diff Energy = 73.499633 
diff Energy = 117.193021 
diff Energy = 60.816707 
diff Energy = 144.025182 
diff Energy = 111.664997 
Finish ICM step! 
iter = 4, loglik= -78470992.000000, dloglik=0.004328 
predict Y and V! 
diff Energy = 90.546253 
diff Energy = 91.026523 
diff Energy = 68.536956 
diff Energy = 75.460237 
diff Energy = 176.464084 
diff Energy = 132.704642 
diff Energy = 123.266187 
diff Energy = 64.273806 
diff Energy = 143.808370 
diff Energy = 169.182958 
Finish ICM step! 
iter = 5, loglik= -78295088.000000, dloglik=0.002242 
predict Y and V! 
diff Energy = 25.023429 
diff Energy = 56.076448 
diff Energy = 60.095385 
diff Energy = 90.468929 
diff Energy = 122.958250 
diff Energy = 91.895747 
diff Energy = 166.645069 
diff Energy = 108.114804 
diff Energy = 100.523069 
diff Energy = 128.430596 
Finish ICM step! 
iter = 6, loglik= -78186704.000000, dloglik=0.001384 
predict Y and V! 
diff Energy = 116.284983 
diff Energy = 83.909185 
diff Energy = 23.850864 
diff Energy = 29.156017 
diff Energy = 71.332595 
diff Energy = 33.954811 
diff Energy = 26.775280 
diff Energy = 8.611702 
diff Energy = 83.436277 
diff Energy = 103.502831 
Finish ICM step! 
iter = 7, loglik= -78114696.000000, dloglik=0.000921 
predict Y and V! 
diff Energy = 42.382311 
diff Energy = 17.785458 
diff Energy = 49.683455 
diff Energy = 51.597636 
diff Energy = 67.152780 
diff Energy = 37.245291 
diff Energy = 3.236341 
diff Energy = 17.255055 
diff Energy = 107.618454 
diff Energy = 35.219400 
Finish ICM step! 
iter = 8, loglik= -78062800.000000, dloglik=0.000664 
predict Y and V! 
diff Energy = 35.045508 
diff Energy = 64.942224 
diff Energy = 59.812263 
diff Energy = 22.294229 
diff Energy = 26.762195 
diff Energy = 53.268567 
diff Energy = 14.695285 
diff Energy = 18.348078 
diff Energy = 24.804395 
Finish ICM step! 
iter = 9, loglik= -78022744.000000, dloglik=0.000513 
predict Y and V! 
diff Energy = 38.242316 
diff Energy = 7.248079 
diff Energy = 13.770802 
diff Energy = 4.745027 
diff Energy = 21.994763 
diff Energy = 7.522810 
diff Energy = 12.241278 
diff Energy = 31.395893 
Finish ICM step! 
iter = 10, loglik= -77989848.000000, dloglik=0.000422 
predict Y and V! 
diff Energy = 27.426133 
diff Energy = 4.214519 
diff Energy = 1.927923 
diff Energy = 10.343102 
diff Energy = 14.387173 
diff Energy = 11.856969 
diff Energy = 4.544056 
diff Energy = 22.398281 
diff Energy = 1.836200 
Finish ICM step! 
iter = 11, loglik= -77962928.000000, dloglik=0.000345 
predict Y and V! 
diff Energy = 69.319580 
diff Energy = 2.540990 
diff Energy = 13.262646 
diff Energy = 6.028195 
diff Energy = 3.954348 
diff Energy = 12.423917 
diff Energy = 25.657791 
Finish ICM step! 
iter = 12, loglik= -77941208.000000, dloglik=0.000279 
predict Y and V! 
diff Energy = 16.510904 
diff Energy = 3.833361 
diff Energy = 3.597282 
diff Energy = 0.152627 
diff Energy = 8.570448 
diff Energy = 19.841717 
diff Energy = 92.721157 
diff Energy = 12.969885 
Finish ICM step! 
iter = 13, loglik= -77924032.000000, dloglik=0.000220 
predict Y and V! 
diff Energy = 2.839323 
diff Energy = 4.714954 
diff Energy = 8.113463 
diff Energy = 57.833256 
diff Energy = 4.434738 
diff Energy = 0.247140 
diff Energy = 6.777681 
diff Energy = 4.208506 
Finish ICM step! 
iter = 14, loglik= -77910336.000000, dloglik=0.000176 
predict Y and V! 
diff Energy = 11.373561 
diff Energy = 7.028114 
diff Energy = 2.116200 
diff Energy = 0.936572 
diff Energy = 1.063858 
diff Energy = 7.524998 
diff Energy = 4.071533 
Finish ICM step! 
iter = 15, loglik= -77898912.000000, dloglik=0.000147 
predict Y and V! 
diff Energy = 6.182770 
diff Energy = 5.042028 
diff Energy = 25.007358 
diff Energy = 1.187257 
diff Energy = 5.834968 
diff Energy = 0.094644 
diff Energy = 11.223907 
diff Energy = 4.044801 
Finish ICM step! 
iter = 16, loglik= -77889552.000000, dloglik=0.000120 
predict Y and V! 
diff Energy = 11.151363 
diff Energy = 5.421857 
diff Energy = 6.211887 
diff Energy = 2.227181 
diff Energy = 2.042675 
diff Energy = 38.071958 
diff Energy = 17.947113 
diff Energy = 4.999094 
diff Energy = 1.827930 
Finish ICM step! 
iter = 17, loglik= -77881128.000000, dloglik=0.000108 
predict Y and V! 
diff Energy = 2.169640 
diff Energy = 0.246385 
diff Energy = 25.151240 
diff Energy = 0.067990 
diff Energy = 4.234781 
diff Energy = 1.411129 
diff Energy = 4.029685 
diff Energy = 10.527651 
diff Energy = 5.683213 
Finish ICM step! 
iter = 18, loglik= -77873552.000000, dloglik=0.000097 
predict Y and V! 
diff Energy = 20.485989 
diff Energy = 6.149156 
diff Energy = 3.883675 
diff Energy = 0.071536 
diff Energy = 4.272071 
diff Energy = 2.932509 
diff Energy = 4.526034 
diff Energy = 6.466754 
diff Energy = 1.807001 
Finish ICM step! 
iter = 19, loglik= -77866824.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 4.767255 
diff Energy = 2.873526 
diff Energy = 9.785796 
diff Energy = 13.723866 
diff Energy = 1.024927 
diff Energy = 11.193277 
diff Energy = 13.238909 
diff Energy = 16.919469 
Finish ICM step! 
iter = 20, loglik= -77860848.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 2.756282 
diff Energy = 1.591002 
diff Energy = 10.908130 
diff Energy = 3.012713 
diff Energy = 5.196839 
diff Energy = 5.816353 
diff Energy = 9.347702 
diff Energy = 4.809104 
Finish ICM step! 
iter = 21, loglik= -77854864.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 11.998675 
diff Energy = 0.756035 
diff Energy = 3.487813 
diff Energy = 2.144900 
diff Energy = 4.220365 
diff Energy = 8.408756 
diff Energy = 0.084688 
diff Energy = 5.175791 
diff Energy = 23.570995 
Finish ICM step! 
iter = 22, loglik= -77848840.000000, dloglik=0.000077 
predict Y and V! 
diff Energy = 27.348148 
diff Energy = 2.669984 
diff Energy = 10.092318 
diff Energy = 0.808641 
diff Energy = 18.116196 
diff Energy = 12.716971 
diff Energy = 0.555225 
diff Energy = 15.189955 
diff Energy = 22.238443 
diff Energy = 54.268282 
Finish ICM step! 
iter = 23, loglik= -77842896.000000, dloglik=0.000076 
predict Y and V! 
diff Energy = 19.212934 
diff Energy = 2.240004 
diff Energy = 1.739412 
diff Energy = 16.067186 
diff Energy = 3.589895 
diff Energy = 6.945672 
diff Energy = 8.318539 
diff Energy = 4.344836 
diff Energy = 31.260989 
diff Energy = 0.152362 
Finish ICM step! 
iter = 24, loglik= -77836224.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 1.858685 
diff Energy = 77.220627 
diff Energy = 3.719307 
diff Energy = 4.039984 
diff Energy = 51.108417 
diff Energy = 0.018025 
diff Energy = 1.338746 
diff Energy = 14.798239 
diff Energy = 1.736826 
Finish ICM step! 
iter = 25, loglik= -77829336.000000, dloglik=0.000088 
predict Y and V! 
diff Energy = 13.444898 
diff Energy = 3.245780 
diff Energy = 0.435369 
diff Energy = 0.801965 
diff Energy = 0.635730 
diff Energy = 7.525652 
diff Energy = 6.311059 
diff Energy = 3.147969 
diff Energy = 1.674098 
Finish ICM step! 
iter = 26, loglik= -77821904.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 9.631156 
diff Energy = 0.444596 
diff Energy = 11.439476 
diff Energy = 7.469205 
diff Energy = 14.581038 
diff Energy = 0.024553 
diff Energy = 0.366126 
diff Energy = 4.329102 
diff Energy = 9.975297 
Finish ICM step! 
iter = 27, loglik= -77814040.000000, dloglik=0.000101 
predict Y and V! 
diff Energy = 2.054108 
diff Energy = 9.755644 
diff Energy = 0.381640 
diff Energy = 10.652821 
diff Energy = 3.962203 
diff Energy = 6.213394 
diff Energy = 10.876289 
diff Energy = 4.439901 
diff Energy = 4.255391 
Finish ICM step! 
iter = 28, loglik= -77805488.000000, dloglik=0.000110 
predict Y and V! 
diff Energy = 6.753163 
diff Energy = 2.493275 
diff Energy = 13.952595 
diff Energy = 1.157266 
diff Energy = 5.378791 
diff Energy = 3.279810 
diff Energy = 13.021408 
diff Energy = 6.577025 
diff Energy = 28.844718 
Finish ICM step! 
iter = 29, loglik= -77796488.000000, dloglik=0.000116 
predict Y and V! 
diff Energy = 1.835397 
diff Energy = 0.236148 
diff Energy = 0.214981 
diff Energy = 9.929240 
diff Energy = 5.812436 
diff Energy = 28.955744 
diff Energy = 8.655306 
diff Energy = 4.255351 
Finish ICM step! 
iter = 30, loglik= -77787208.000000, dloglik=0.000119 
25514.933 sec elapsed
**** Job ends ****
Wed Mar 22 05:12:15 EDT 2023
**** Job starts ****
Thu Mar 30 01:09:47 EDT 2023
**** JHPCE info ****
User: enelson
Job id: 3084530
Job name: PRECAST_k16-25
Hostname: compute-093.cm.cluster
Task id: 18
Loading conda_R/4.2.x

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV
  3) JHPCE_tools/1.0   8) conda/3-4.11.0
  4) sge/8.1.9         9) conda_R/4.2.x
  5) gcc/4.4.7

 

Filter spots and features from Raw count data...
 
 
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 7569
## number of total genes: 23689
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8089
## number of total genes: 24208
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 16334
## number of total genes: 25336
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14105
## number of total genes: 26447
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 24039
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 6071
## number of total genes: 23183
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 9895
## number of total genes: 24035
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 17222
## number of total genes: 26256
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 15785
## number of total genes: 25978
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 12039
## number of total genes: 24495
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 13970
## number of total genes: 24879
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
There were 24 warnings (use warnings() to see them)
[[1]]
An object of class Seurat 
2000 features across 7538 samples within 1 assay 
Active assay: RNA (2000 features, 467 variable features)

[[2]]
An object of class Seurat 
2000 features across 8079 samples within 1 assay 
Active assay: RNA (2000 features, 458 variable features)

[[3]]
An object of class Seurat 
2000 features across 16022 samples within 1 assay 
Active assay: RNA (2000 features, 459 variable features)

[[4]]
An object of class Seurat 
2000 features across 14065 samples within 1 assay 
Active assay: RNA (2000 features, 449 variable features)

[[5]]
An object of class Seurat 
2000 features across 8637 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[6]]
An object of class Seurat 
2000 features across 5952 samples within 1 assay 
Active assay: RNA (2000 features, 453 variable features)

[[7]]
An object of class Seurat 
2000 features across 9490 samples within 1 assay 
Active assay: RNA (2000 features, 482 variable features)

[[8]]
An object of class Seurat 
2000 features across 16998 samples within 1 assay 
Active assay: RNA (2000 features, 457 variable features)

[[9]]
An object of class Seurat 
2000 features across 15390 samples within 1 assay 
Active assay: RNA (2000 features, 420 variable features)

[[10]]
An object of class Seurat 
2000 features across 11862 samples within 1 assay 
Active assay: RNA (2000 features, 461 variable features)

[[11]]
An object of class Seurat 
2000 features across 13539 samples within 1 assay 
Active assay: RNA (2000 features, 444 variable features)

Neighbors were identified for 7538 out of 7538 spots.
Neighbors were identified for 8079 out of 8079 spots.
Neighbors were identified for 16022 out of 16022 spots.
Neighbors were identified for 14065 out of 14065 spots.
Neighbors were identified for 8637 out of 8637 spots.
Neighbors were identified for 5951 out of 5952 spots.
Neighbors were identified for 9489 out of 9490 spots.
Neighbors were identified for 16998 out of 16998 spots.
Neighbors were identified for 15390 out of 15390 spots.
Neighbors were identified for 11862 out of 11862 spots.
Neighbors were identified for 13539 out of 13539 spots.
Intergrative data info.: 11 samples, 2000 genes X 127572 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 376.247131 
diff Energy = 152.238229 
diff Energy = 31.875373 
diff Energy = 529.998363 
diff Energy = 319.409826 
diff Energy = 197.901045 
Finish ICM step! 
iter = 2, loglik= 75894920.000000, dloglik=1.035341 
predict Y and V! 
diff Energy = 174.341098 
diff Energy = 42.231152 
diff Energy = 43.115215 
diff Energy = 125.551437 
diff Energy = 1.106967 
diff Energy = 6.762517 
diff Energy = 10.043371 
diff Energy = 80.418085 
diff Energy = 47.437836 
diff Energy = 56.276264 
diff Energy = 137.170088 
Finish ICM step! 
iter = 3, loglik= 76347736.000000, dloglik=0.005966 
predict Y and V! 
diff Energy = 121.409332 
diff Energy = 76.067073 
diff Energy = 4.219100 
diff Energy = 245.977498 
diff Energy = 23.274556 
diff Energy = 31.252979 
diff Energy = 76.080786 
diff Energy = 196.127402 
diff Energy = 36.171733 
diff Energy = 91.300945 
diff Energy = 32.221700 
Finish ICM step! 
iter = 4, loglik= 76471176.000000, dloglik=0.001617 
predict Y and V! 
diff Energy = 44.474194 
diff Energy = 99.961906 
diff Energy = 9.389195 
diff Energy = 126.501151 
diff Energy = 16.612355 
diff Energy = 16.961538 
diff Energy = 31.173967 
diff Energy = 110.382822 
diff Energy = 67.580353 
diff Energy = 63.021801 
diff Energy = 2.358782 
Finish ICM step! 
iter = 5, loglik= 76529744.000000, dloglik=0.000766 
predict Y and V! 
diff Energy = 43.132848 
diff Energy = 75.165072 
diff Energy = 28.531607 
diff Energy = 52.125374 
diff Energy = 14.516129 
diff Energy = 27.507110 
diff Energy = 29.022335 
diff Energy = 70.650802 
diff Energy = 13.034438 
diff Energy = 52.080601 
diff Energy = 13.497948 
Finish ICM step! 
iter = 6, loglik= 76566296.000000, dloglik=0.000478 
predict Y and V! 
diff Energy = 33.085510 
diff Energy = 49.060175 
diff Energy = 3.261190 
diff Energy = 77.875765 
diff Energy = 6.767697 
diff Energy = 29.880219 
diff Energy = 23.293398 
diff Energy = 64.392509 
diff Energy = 11.865390 
diff Energy = 23.797015 
diff Energy = 5.539566 
Finish ICM step! 
iter = 7, loglik= 76592336.000000, dloglik=0.000340 
predict Y and V! 
diff Energy = 28.516507 
diff Energy = 53.823363 
diff Energy = 41.464954 
diff Energy = 9.433349 
diff Energy = 14.544723 
diff Energy = 26.340057 
diff Energy = 13.913437 
diff Energy = 16.542985 
diff Energy = 9.467925 
diff Energy = 0.451006 
Finish ICM step! 
iter = 8, loglik= 76613144.000000, dloglik=0.000272 
predict Y and V! 
diff Energy = 20.338344 
diff Energy = 10.022287 
diff Energy = 11.160002 
diff Energy = 2.245200 
diff Energy = 12.370263 
diff Energy = 17.324517 
diff Energy = 18.794373 
diff Energy = 7.617420 
diff Energy = 7.007142 
diff Energy = 5.834472 
diff Energy = 0.995471 
Finish ICM step! 
iter = 9, loglik= 76631576.000000, dloglik=0.000241 
predict Y and V! 
diff Energy = 0.061691 
diff Energy = 22.505713 
diff Energy = 8.112236 
diff Energy = 33.227614 
diff Energy = 15.046274 
diff Energy = 16.103335 
diff Energy = 9.566096 
diff Energy = 20.061825 
diff Energy = 14.859173 
diff Energy = 11.531528 
Finish ICM step! 
iter = 10, loglik= 76649184.000000, dloglik=0.000230 
predict Y and V! 
diff Energy = 6.018800 
diff Energy = 6.709324 
diff Energy = 7.189743 
diff Energy = 3.395745 
diff Energy = 6.892927 
diff Energy = 11.587900 
diff Energy = 3.740651 
diff Energy = 185.042826 
diff Energy = 5.408453 
diff Energy = 0.261383 
Finish ICM step! 
iter = 11, loglik= 76668792.000000, dloglik=0.000256 
predict Y and V! 
diff Energy = 18.024079 
diff Energy = 11.670998 
diff Energy = 0.558676 
diff Energy = 17.338347 
diff Energy = 14.089073 
diff Energy = 128.748446 
diff Energy = 4.718175 
diff Energy = 34.011495 
diff Energy = 3.392712 
diff Energy = 4.558369 
Finish ICM step! 
iter = 12, loglik= 76689056.000000, dloglik=0.000264 
predict Y and V! 
diff Energy = 24.679091 
diff Energy = 6.168723 
diff Energy = 3.123081 
diff Energy = 119.891325 
diff Energy = 56.474175 
diff Energy = 2.259768 
diff Energy = 15.232168 
diff Energy = 173.677189 
Finish ICM step! 
iter = 13, loglik= 76708680.000000, dloglik=0.000256 
predict Y and V! 
diff Energy = 9.592555 
diff Energy = 7.678537 
diff Energy = 0.236604 
diff Energy = 14.400588 
diff Energy = 11.057709 
diff Energy = 14.459351 
diff Energy = 2.370272 
diff Energy = 57.318443 
diff Energy = 15.375970 
Finish ICM step! 
iter = 14, loglik= 76725416.000000, dloglik=0.000218 
predict Y and V! 
diff Energy = 18.301065 
diff Energy = 7.999914 
diff Energy = 3.428008 
diff Energy = 16.583132 
diff Energy = 1.783371 
diff Energy = 3.045590 
diff Energy = 28.412913 
diff Energy = 2.111738 
Finish ICM step! 
iter = 15, loglik= 76739752.000000, dloglik=0.000187 
predict Y and V! 
diff Energy = 17.853007 
diff Energy = 2.377126 
diff Energy = 169.598777 
diff Energy = 29.914576 
diff Energy = 6.507609 
diff Energy = 38.486143 
diff Energy = 189.512486 
Finish ICM step! 
iter = 16, loglik= 76754496.000000, dloglik=0.000192 
predict Y and V! 
diff Energy = 19.151588 
diff Energy = 3.851175 
diff Energy = 61.547894 
diff Energy = 19.782887 
diff Energy = 19.705151 
diff Energy = 31.557197 
diff Energy = 50.270435 
Finish ICM step! 
iter = 17, loglik= 76767832.000000, dloglik=0.000174 
predict Y and V! 
diff Energy = 72.696670 
diff Energy = 154.830829 
diff Energy = 45.846063 
diff Energy = 11.344755 
diff Energy = 75.371307 
diff Energy = 0.592262 
diff Energy = 59.363600 
diff Energy = 50.695495 
Finish ICM step! 
iter = 18, loglik= 76781424.000000, dloglik=0.000177 
predict Y and V! 
diff Energy = 2.330027 
diff Energy = 17.609417 
diff Energy = 20.358856 
diff Energy = 27.276420 
diff Energy = 6.539130 
diff Energy = 29.880053 
diff Energy = 45.755458 
Finish ICM step! 
iter = 19, loglik= 76795176.000000, dloglik=0.000179 
predict Y and V! 
diff Energy = 8.640953 
diff Energy = 5.192619 
diff Energy = 34.343241 
diff Energy = 17.498683 
diff Energy = 12.425151 
diff Energy = 25.823545 
diff Energy = 18.507646 
Finish ICM step! 
iter = 20, loglik= 76809224.000000, dloglik=0.000183 
predict Y and V! 
diff Energy = 7.422844 
diff Energy = 6.284937 
diff Energy = 26.188868 
diff Energy = 1.552298 
diff Energy = 15.781350 
diff Energy = 31.732839 
Finish ICM step! 
iter = 21, loglik= 76823464.000000, dloglik=0.000185 
predict Y and V! 
diff Energy = 21.514676 
diff Energy = 7.204133 
diff Energy = 0.417933 
diff Energy = 17.491675 
diff Energy = 12.629443 
Finish ICM step! 
iter = 22, loglik= 76838640.000000, dloglik=0.000198 
predict Y and V! 
diff Energy = 7.659794 
diff Energy = 10.779817 
diff Energy = 19.579499 
diff Energy = 21.180015 
Finish ICM step! 
iter = 23, loglik= 76854912.000000, dloglik=0.000212 
predict Y and V! 
diff Energy = 9.169037 
diff Energy = 4.821938 
Finish ICM step! 
iter = 24, loglik= 76872808.000000, dloglik=0.000233 
predict Y and V! 
diff Energy = 23.693350 
diff Energy = 1.513360 
Finish ICM step! 
iter = 25, loglik= 76892896.000000, dloglik=0.000261 
predict Y and V! 
diff Energy = 25.181740 
diff Energy = 0.903043 
Finish ICM step! 
iter = 26, loglik= 76916096.000000, dloglik=0.000302 
predict Y and V! 
diff Energy = 8.158654 
diff Energy = 0.160466 
diff Energy = 1.131356 
Finish ICM step! 
iter = 27, loglik= 76943360.000000, dloglik=0.000354 
predict Y and V! 
diff Energy = 14.163979 
diff Energy = 2.045267 
diff Energy = 0.296406 
Finish ICM step! 
iter = 28, loglik= 76975264.000000, dloglik=0.000415 
predict Y and V! 
diff Energy = 12.915922 
diff Energy = 2.246875 
diff Energy = 7.371897 
diff Energy = 0.734022 
Finish ICM step! 
iter = 29, loglik= 77010680.000000, dloglik=0.000460 
predict Y and V! 
diff Energy = 3.575496 
diff Energy = 10.879161 
diff Energy = 4.378018 
diff Energy = 0.399425 
diff Energy = 7.147989 
Finish ICM step! 
iter = 30, loglik= 77048240.000000, dloglik=0.000488 
20010.651 sec elapsed
**** Job ends ****
Thu Mar 30 07:05:23 EDT 2023
