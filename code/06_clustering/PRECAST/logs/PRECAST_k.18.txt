Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.1.x
**** Job starts ****
Wed Nov  2 15:33:33 EDT 2022
**** JHPCE info ****
User: mtippani
Job id: 621925
Job name: PRECAST_k16-20
Hostname: compute-093.cm.cluster
Task id: 18
Unloading conda_R/4.1.x
Loading conda_R/devel

The following have been reloaded with a version change:
  1) conda_R/4.1.x => conda_R/devel


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.6.14
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/devel
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14172
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 19762
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14117
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8670
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 14400
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18746
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 20693
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 8390
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 18159
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 14143 samples within 1 assay 
Active assay: RNA (2000 features, 1397 variable features)

[[2]]
An object of class Seurat 
2000 features across 19678 samples within 1 assay 
Active assay: RNA (2000 features, 1541 variable features)

[[3]]
An object of class Seurat 
2000 features across 14104 samples within 1 assay 
Active assay: RNA (2000 features, 1447 variable features)

[[4]]
An object of class Seurat 
2000 features across 8662 samples within 1 assay 
Active assay: RNA (2000 features, 1374 variable features)

[[5]]
An object of class Seurat 
2000 features across 14390 samples within 1 assay 
Active assay: RNA (2000 features, 1495 variable features)

[[6]]
An object of class Seurat 
2000 features across 18709 samples within 1 assay 
Active assay: RNA (2000 features, 1159 variable features)

[[7]]
An object of class Seurat 
2000 features across 20614 samples within 1 assay 
Active assay: RNA (2000 features, 1612 variable features)

[[8]]
An object of class Seurat 
2000 features across 8389 samples within 1 assay 
Active assay: RNA (2000 features, 1200 variable features)

[[9]]
An object of class Seurat 
2000 features across 18041 samples within 1 assay 
Active assay: RNA (2000 features, 1385 variable features)

Neighbors were identified for 14143 out of 14143 spots.
Neighbors were identified for 19678 out of 19678 spots.
Neighbors were identified for 14104 out of 14104 spots.
Neighbors were identified for 8662 out of 8662 spots.
Neighbors were identified for 14390 out of 14390 spots.
Neighbors were identified for 18709 out of 18709 spots.
Neighbors were identified for 20611 out of 20614 spots.
Neighbors were identified for 8389 out of 8389 spots.
Neighbors were identified for 18038 out of 18041 spots.
Intergrative data info.: 9 samples, 2000 genes X 136730 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 18.680519 
Finish ICM step! 
iter = 2, loglik= -69746280.000000, dloglik=0.967522 
predict Y and V! 
diff Energy = 107.658882 
diff Energy = 15.677408 
diff Energy = 20.701260 
diff Energy = 115.127933 
diff Energy = 45.962248 
diff Energy = 58.483207 
diff Energy = 56.516906 
Finish ICM step! 
iter = 3, loglik= -68943960.000000, dloglik=0.011503 
predict Y and V! 
diff Energy = 338.942790 
diff Energy = 33.227088 
diff Energy = 176.459917 
diff Energy = 178.489165 
diff Energy = 354.220280 
diff Energy = 55.545624 
diff Energy = 427.125859 
diff Energy = 225.978018 
diff Energy = 501.780696 
Finish ICM step! 
iter = 4, loglik= -68639480.000000, dloglik=0.004416 
predict Y and V! 
diff Energy = 139.446907 
diff Energy = 95.427499 
diff Energy = 102.123032 
diff Energy = 157.427465 
diff Energy = 3.308587 
diff Energy = 261.916972 
diff Energy = 134.120141 
diff Energy = 174.983311 
Finish ICM step! 
iter = 5, loglik= -68468240.000000, dloglik=0.002495 
predict Y and V! 
diff Energy = 83.688436 
diff Energy = 16.530561 
diff Energy = 77.532677 
diff Energy = 89.068283 
diff Energy = 135.974359 
diff Energy = 7.687874 
diff Energy = 170.229337 
diff Energy = 96.587060 
diff Energy = 138.898277 
Finish ICM step! 
iter = 6, loglik= -68364904.000000, dloglik=0.001509 
predict Y and V! 
diff Energy = 66.771981 
diff Energy = 84.590678 
diff Energy = 81.260836 
diff Energy = 78.657307 
diff Energy = 72.426225 
diff Energy = 124.870160 
diff Energy = 83.160533 
diff Energy = 92.086990 
Finish ICM step! 
iter = 7, loglik= -68296016.000000, dloglik=0.001008 
predict Y and V! 
diff Energy = 48.698275 
diff Energy = 15.594910 
diff Energy = 13.502760 
diff Energy = 91.141405 
diff Energy = 96.609980 
diff Energy = 26.941009 
diff Energy = 120.423067 
diff Energy = 53.446175 
diff Energy = 84.566997 
Finish ICM step! 
iter = 8, loglik= -68246192.000000, dloglik=0.000730 
predict Y and V! 
diff Energy = 31.018277 
diff Energy = 1.648019 
diff Energy = 3.848336 
diff Energy = 21.935654 
diff Energy = 9.588681 
diff Energy = 47.768412 
diff Energy = 3.486794 
diff Energy = 69.681324 
diff Energy = 24.072399 
Finish ICM step! 
iter = 9, loglik= -68208504.000000, dloglik=0.000552 
predict Y and V! 
diff Energy = 29.527251 
diff Energy = 3.966378 
diff Energy = 16.091646 
diff Energy = 20.091308 
diff Energy = 14.479461 
diff Energy = 5.333325 
diff Energy = 20.670940 
diff Energy = 21.913723 
Finish ICM step! 
iter = 10, loglik= -68179888.000000, dloglik=0.000420 
predict Y and V! 
diff Energy = 48.774299 
diff Energy = 2.301795 
diff Energy = 13.398931 
diff Energy = 17.281679 
diff Energy = 8.763845 
diff Energy = 15.737298 
diff Energy = 42.585965 
diff Energy = 8.324807 
diff Energy = 40.540302 
Finish ICM step! 
iter = 11, loglik= -68158368.000000, dloglik=0.000316 
predict Y and V! 
diff Energy = 32.371088 
diff Energy = 5.806026 
diff Energy = 5.323335 
diff Energy = 10.078075 
diff Energy = 17.738932 
diff Energy = 14.712798 
diff Energy = 1.002172 
diff Energy = 6.595713 
Finish ICM step! 
iter = 12, loglik= -68141480.000000, dloglik=0.000248 
predict Y and V! 
diff Energy = 20.426845 
diff Energy = 1.105622 
diff Energy = 1.874370 
diff Energy = 2.029309 
diff Energy = 21.474218 
diff Energy = 4.801257 
diff Energy = 33.267466 
diff Energy = 26.820209 
diff Energy = 66.713291 
Finish ICM step! 
iter = 13, loglik= -68127968.000000, dloglik=0.000198 
predict Y and V! 
diff Energy = 47.547781 
diff Energy = 1.039234 
diff Energy = 26.888457 
diff Energy = 20.215711 
diff Energy = 58.913718 
diff Energy = 43.105640 
diff Energy = 33.053674 
diff Energy = 15.727837 
diff Energy = 1.118475 
Finish ICM step! 
iter = 14, loglik= -68117104.000000, dloglik=0.000159 
predict Y and V! 
diff Energy = 11.037648 
diff Energy = 2.339025 
diff Energy = 1.644006 
diff Energy = 15.734951 
diff Energy = 13.278136 
diff Energy = 9.588408 
diff Energy = 31.237916 
diff Energy = 15.398305 
diff Energy = 3.200852 
Finish ICM step! 
iter = 15, loglik= -68107456.000000, dloglik=0.000142 
predict Y and V! 
diff Energy = 28.814444 
diff Energy = 1.028325 
diff Energy = 48.647282 
diff Energy = 5.346831 
diff Energy = 5.879867 
diff Energy = 8.253100 
diff Energy = 27.502424 
diff Energy = 2.422811 
Finish ICM step! 
iter = 16, loglik= -68099296.000000, dloglik=0.000120 
predict Y and V! 
diff Energy = 18.022301 
diff Energy = 1.001201 
diff Energy = 5.971658 
diff Energy = 16.122862 
diff Energy = 4.440041 
diff Energy = 1.026050 
diff Energy = 15.839449 
diff Energy = 0.451156 
Finish ICM step! 
iter = 17, loglik= -68092248.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 17.025813 
diff Energy = 0.823299 
diff Energy = 17.363192 
diff Energy = 10.167329 
diff Energy = 30.326849 
diff Energy = 14.993089 
diff Energy = 0.992441 
diff Energy = 1.274149 
Finish ICM step! 
iter = 18, loglik= -68085752.000000, dloglik=0.000095 
predict Y and V! 
diff Energy = 21.836681 
diff Energy = 1.269537 
diff Energy = 2.622475 
diff Energy = 2.542990 
diff Energy = 22.985338 
diff Energy = 13.935555 
diff Energy = 29.375933 
Finish ICM step! 
iter = 19, loglik= -68079616.000000, dloglik=0.000090 
predict Y and V! 
diff Energy = 15.834627 
diff Energy = 2.355128 
diff Energy = 2.835000 
diff Energy = 33.504486 
diff Energy = 1.637773 
diff Energy = 16.738388 
diff Energy = 15.567241 
diff Energy = 7.614498 
Finish ICM step! 
iter = 20, loglik= -68073792.000000, dloglik=0.000086 
predict Y and V! 
diff Energy = 24.685150 
diff Energy = 0.827732 
diff Energy = 4.985582 
diff Energy = 16.389797 
diff Energy = 1.744486 
diff Energy = 73.539481 
diff Energy = 33.722594 
diff Energy = 14.384795 
Finish ICM step! 
iter = 21, loglik= -68068032.000000, dloglik=0.000085 
predict Y and V! 
diff Energy = 7.825850 
diff Energy = 2.109858 
diff Energy = 0.794410 
diff Energy = 1.579187 
diff Energy = 7.976304 
diff Energy = 7.238543 
diff Energy = 0.343312 
diff Energy = 12.895159 
Finish ICM step! 
iter = 22, loglik= -68062088.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 1.053917 
diff Energy = 0.040518 
diff Energy = 1.968087 
diff Energy = 3.653560 
diff Energy = 1.793161 
diff Energy = 33.326207 
diff Energy = 2.252785 
Finish ICM step! 
iter = 23, loglik= -68056184.000000, dloglik=0.000087 
predict Y and V! 
diff Energy = 11.008854 
diff Energy = 81.918818 
diff Energy = 14.093312 
diff Energy = 2.469466 
diff Energy = 5.401604 
diff Energy = 3.971048 
diff Energy = 0.739762 
Finish ICM step! 
iter = 24, loglik= -68050136.000000, dloglik=0.000089 
predict Y and V! 
diff Energy = 6.259204 
diff Energy = 0.813967 
diff Energy = 6.776070 
diff Energy = 2.719269 
diff Energy = 23.150355 
diff Energy = 17.300865 
diff Energy = 21.822468 
Finish ICM step! 
iter = 25, loglik= -68043584.000000, dloglik=0.000096 
predict Y and V! 
diff Energy = 8.040377 
diff Energy = 1.267753 
diff Energy = 2.017965 
diff Energy = 2.213918 
diff Energy = 13.657040 
diff Energy = 10.485937 
diff Energy = 5.287929 
diff Energy = 6.478401 
diff Energy = 11.014860 
Finish ICM step! 
iter = 26, loglik= -68036592.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 2.851990 
diff Energy = 0.172673 
diff Energy = 4.332590 
diff Energy = 10.389534 
diff Energy = 8.984565 
diff Energy = 13.202097 
diff Energy = 2.582348 
diff Energy = 12.452289 
Finish ICM step! 
iter = 27, loglik= -68029592.000000, dloglik=0.000103 
predict Y and V! 
diff Energy = 9.566482 
diff Energy = 1.592038 
diff Energy = 6.054952 
diff Energy = 0.396328 
diff Energy = 1.282381 
diff Energy = 3.125935 
diff Energy = 9.995102 
Finish ICM step! 
iter = 28, loglik= -68022464.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 4.865740 
diff Energy = 0.020479 
diff Energy = 0.848419 
diff Energy = 9.732418 
diff Energy = 21.249516 
diff Energy = 0.911381 
diff Energy = 0.654525 
Finish ICM step! 
iter = 29, loglik= -68015288.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 7.057796 
diff Energy = 7.933291 
diff Energy = 2.009229 
diff Energy = 12.822152 
diff Energy = 3.506015 
diff Energy = 29.938319 
diff Energy = 2.727682 
diff Energy = 8.051660 
Finish ICM step! 
iter = 30, loglik= -68007648.000000, dloglik=0.000112 
22659.433 sec elapsed
**** Job ends ****
Wed Nov  2 22:02:13 EDT 2022
